{
  "openapi": "3.1.0",
  "info": {
    "title": "IGVF Project API",
    "version": "79.0.0"
  },
  "servers": [
    {
      "url": "https://api.data.igvf.org"
    }
  ],
  "paths": {
    "/{resource_id}": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Get item information",
        "description": "Retrieve detailed information about a specific item using its @id or uuid.",
        "operationId": "get_by_id",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier for the resource i.e. @id (`/sequence-files/IGVFFI1165AJSO/`), accession (`IGVFFI1165AJSO`) or UUID (`fffcd64e-af02-4675-8953-7352459ee06a`).",
            "examples": {
              "@id": {
                "value": "/sequence-files/IGVFFI1165AJSO/"
              },
              "uuid": {
                "value": "fffcd64e-af02-4675-8953-7352459ee06a"
              },
              "accession": {
                "value": "IGVFFI1165AJSO"
              }
            }
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Item",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AccessKey"
                    },
                    {
                      "$ref": "#/components/schemas/AnalysisStep"
                    },
                    {
                      "$ref": "#/components/schemas/AnalysisStepVersion"
                    },
                    {
                      "$ref": "#/components/schemas/Award"
                    },
                    {
                      "$ref": "#/components/schemas/Biomarker"
                    },
                    {
                      "$ref": "#/components/schemas/Document"
                    },
                    {
                      "$ref": "#/components/schemas/HumanDonor"
                    },
                    {
                      "$ref": "#/components/schemas/RodentDonor"
                    },
                    {
                      "$ref": "#/components/schemas/AlignmentFile"
                    },
                    {
                      "$ref": "#/components/schemas/ConfigurationFile"
                    },
                    {
                      "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                    },
                    {
                      "$ref": "#/components/schemas/ImageFile"
                    },
                    {
                      "$ref": "#/components/schemas/IndexFile"
                    },
                    {
                      "$ref": "#/components/schemas/MatrixFile"
                    },
                    {
                      "$ref": "#/components/schemas/ModelFile"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFile"
                    },
                    {
                      "$ref": "#/components/schemas/SequenceFile"
                    },
                    {
                      "$ref": "#/components/schemas/SignalFile"
                    },
                    {
                      "$ref": "#/components/schemas/TabularFile"
                    },
                    {
                      "$ref": "#/components/schemas/AnalysisSet"
                    },
                    {
                      "$ref": "#/components/schemas/AuxiliarySet"
                    },
                    {
                      "$ref": "#/components/schemas/ConstructLibrarySet"
                    },
                    {
                      "$ref": "#/components/schemas/CuratedSet"
                    },
                    {
                      "$ref": "#/components/schemas/MeasurementSet"
                    },
                    {
                      "$ref": "#/components/schemas/ModelSet"
                    },
                    {
                      "$ref": "#/components/schemas/PredictionSet"
                    },
                    {
                      "$ref": "#/components/schemas/Gene"
                    },
                    {
                      "$ref": "#/components/schemas/Image"
                    },
                    {
                      "$ref": "#/components/schemas/InstitutionalCertificate"
                    },
                    {
                      "$ref": "#/components/schemas/Lab"
                    },
                    {
                      "$ref": "#/components/schemas/CrisprModification"
                    },
                    {
                      "$ref": "#/components/schemas/DegronModification"
                    },
                    {
                      "$ref": "#/components/schemas/AssayTerm"
                    },
                    {
                      "$ref": "#/components/schemas/PhenotypeTerm"
                    },
                    {
                      "$ref": "#/components/schemas/PlatformTerm"
                    },
                    {
                      "$ref": "#/components/schemas/SampleTerm"
                    },
                    {
                      "$ref": "#/components/schemas/OpenReadingFrame"
                    },
                    {
                      "$ref": "#/components/schemas/Page"
                    },
                    {
                      "$ref": "#/components/schemas/PhenotypicFeature"
                    },
                    {
                      "$ref": "#/components/schemas/Publication"
                    },
                    {
                      "$ref": "#/components/schemas/MpraQualityMetric"
                    },
                    {
                      "$ref": "#/components/schemas/PerturbSeqQualityMetric"
                    },
                    {
                      "$ref": "#/components/schemas/SingleCellAtacSeqQualityMetric"
                    },
                    {
                      "$ref": "#/components/schemas/SingleCellRnaSeqQualityMetric"
                    },
                    {
                      "$ref": "#/components/schemas/StarrSeqQualityMetric"
                    },
                    {
                      "$ref": "#/components/schemas/InVitroSystem"
                    },
                    {
                      "$ref": "#/components/schemas/MultiplexedSample"
                    },
                    {
                      "$ref": "#/components/schemas/PrimaryCell"
                    },
                    {
                      "$ref": "#/components/schemas/TechnicalSample"
                    },
                    {
                      "$ref": "#/components/schemas/Tissue"
                    },
                    {
                      "$ref": "#/components/schemas/WholeOrganism"
                    },
                    {
                      "$ref": "#/components/schemas/Software"
                    },
                    {
                      "$ref": "#/components/schemas/SoftwareVersion"
                    },
                    {
                      "$ref": "#/components/schemas/Source"
                    },
                    {
                      "$ref": "#/components/schemas/Treatment"
                    },
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "$ref": "#/components/schemas/Workflow"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "@type",
                    "mapping": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Search for items on the IGVF Data Portal.",
        "description": "Search endpoint that accepts various query parameters to filter and sort results. Supports complex filtering on item types and fields within items.",
        "operationId": "search",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Filter by item type."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "example": 100
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Does not work with limit=all."
          },
          {
            "name": "field_filters",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Any field from any item type can be used as a filter. Use '!' at end of field name for negation and 'lt:', 'lte:', 'gt:', 'gte:' with value for range queries on numeric fields. Examples: {'status!': 'in progress', 'file_size': 'gte:30000'}",
            "style": "form",
            "explode": true
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SearchResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "title": "SearchResultItem",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/AccessKey"
                          },
                          {
                            "$ref": "#/components/schemas/AnalysisStep"
                          },
                          {
                            "$ref": "#/components/schemas/AnalysisStepVersion"
                          },
                          {
                            "$ref": "#/components/schemas/Award"
                          },
                          {
                            "$ref": "#/components/schemas/Biomarker"
                          },
                          {
                            "$ref": "#/components/schemas/Document"
                          },
                          {
                            "$ref": "#/components/schemas/HumanDonor"
                          },
                          {
                            "$ref": "#/components/schemas/RodentDonor"
                          },
                          {
                            "$ref": "#/components/schemas/AlignmentFile"
                          },
                          {
                            "$ref": "#/components/schemas/ConfigurationFile"
                          },
                          {
                            "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                          },
                          {
                            "$ref": "#/components/schemas/ImageFile"
                          },
                          {
                            "$ref": "#/components/schemas/IndexFile"
                          },
                          {
                            "$ref": "#/components/schemas/MatrixFile"
                          },
                          {
                            "$ref": "#/components/schemas/ModelFile"
                          },
                          {
                            "$ref": "#/components/schemas/ReferenceFile"
                          },
                          {
                            "$ref": "#/components/schemas/SequenceFile"
                          },
                          {
                            "$ref": "#/components/schemas/SignalFile"
                          },
                          {
                            "$ref": "#/components/schemas/TabularFile"
                          },
                          {
                            "$ref": "#/components/schemas/AnalysisSet"
                          },
                          {
                            "$ref": "#/components/schemas/AuxiliarySet"
                          },
                          {
                            "$ref": "#/components/schemas/ConstructLibrarySet"
                          },
                          {
                            "$ref": "#/components/schemas/CuratedSet"
                          },
                          {
                            "$ref": "#/components/schemas/MeasurementSet"
                          },
                          {
                            "$ref": "#/components/schemas/ModelSet"
                          },
                          {
                            "$ref": "#/components/schemas/PredictionSet"
                          },
                          {
                            "$ref": "#/components/schemas/Gene"
                          },
                          {
                            "$ref": "#/components/schemas/Image"
                          },
                          {
                            "$ref": "#/components/schemas/InstitutionalCertificate"
                          },
                          {
                            "$ref": "#/components/schemas/Lab"
                          },
                          {
                            "$ref": "#/components/schemas/CrisprModification"
                          },
                          {
                            "$ref": "#/components/schemas/DegronModification"
                          },
                          {
                            "$ref": "#/components/schemas/AssayTerm"
                          },
                          {
                            "$ref": "#/components/schemas/PhenotypeTerm"
                          },
                          {
                            "$ref": "#/components/schemas/PlatformTerm"
                          },
                          {
                            "$ref": "#/components/schemas/SampleTerm"
                          },
                          {
                            "$ref": "#/components/schemas/OpenReadingFrame"
                          },
                          {
                            "$ref": "#/components/schemas/Page"
                          },
                          {
                            "$ref": "#/components/schemas/PhenotypicFeature"
                          },
                          {
                            "$ref": "#/components/schemas/Publication"
                          },
                          {
                            "$ref": "#/components/schemas/MpraQualityMetric"
                          },
                          {
                            "$ref": "#/components/schemas/PerturbSeqQualityMetric"
                          },
                          {
                            "$ref": "#/components/schemas/SingleCellAtacSeqQualityMetric"
                          },
                          {
                            "$ref": "#/components/schemas/SingleCellRnaSeqQualityMetric"
                          },
                          {
                            "$ref": "#/components/schemas/StarrSeqQualityMetric"
                          },
                          {
                            "$ref": "#/components/schemas/InVitroSystem"
                          },
                          {
                            "$ref": "#/components/schemas/MultiplexedSample"
                          },
                          {
                            "$ref": "#/components/schemas/PrimaryCell"
                          },
                          {
                            "$ref": "#/components/schemas/TechnicalSample"
                          },
                          {
                            "$ref": "#/components/schemas/Tissue"
                          },
                          {
                            "$ref": "#/components/schemas/WholeOrganism"
                          },
                          {
                            "$ref": "#/components/schemas/Software"
                          },
                          {
                            "$ref": "#/components/schemas/SoftwareVersion"
                          },
                          {
                            "$ref": "#/components/schemas/Source"
                          },
                          {
                            "$ref": "#/components/schemas/Treatment"
                          },
                          {
                            "$ref": "#/components/schemas/User"
                          },
                          {
                            "$ref": "#/components/schemas/Workflow"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "@type",
                          "mapping": {}
                        }
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {
                            "description": "Usually array of objects but can also just be object."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Retrieve JSON schemas for all item types",
        "description": "Returns JSON schemas of all the item types defined in IGVF",
        "operationId": "schemas",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONSchema"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{item_type}": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Retrieve JSON schema for item type",
        "description": "Returns JSON schemas of all the item types defined in IGVF",
        "operationId": "schema_for_item_type",
        "parameters": [
          {
            "name": "item_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemType"
            },
            "description": "The name of the item type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONSchema"
                }
              }
            }
          }
        }
      }
    },
    "/multireport.tsv": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Generate a TSV file report based on search query. All results are returned.",
        "description": "Like /search endpoint but returns a TSV file instead of JSON. Must specify item type(s).",
        "operationId": "report",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Filter by item type."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "example": 100
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Does not work with limit=all."
          },
          {
            "name": "field_filters",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Any field from any item type can be used as a filter. Use '!' at end of field name for negation and 'lt:', 'lte:', 'gt:', 'gte:' with value for range queries on numeric fields. Examples: {'status!': 'in progress', 'file_size': 'gte:30000'}",
            "style": "form",
            "explode": true
          },
          {
            "name": "field",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to include in the response. Can be repeated for multiple fields."
          },
          {
            "name": "frame",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "object",
                "embedded"
              ]
            },
            "description": "Object with links, or object with some links embedded."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/tab-separated-values": {
                "schema": {
                  "type": "string"
                },
                "example": "Column1\tColumn2\tColumn3\nValue1\tValue2\tValue3"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{file_id}/@@download": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "Download file.",
        "description": "Returns underlying file associated with file metadata",
        "operationId": "download",
        "parameters": [
          {
            "in": "path",
            "name": "file_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique identifier for the file to download, e.g. @id (/tabular-files/IGVFFI8092FZKL/), accession (IGVFFI8092FZKL), or UUID (fdbdc159-e5b9-40a8-b788-3f72c9886b03)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/batch-download": {
      "get": {
        "tags": [
          "IGVF"
        ],
        "summary": "List files to download based on search query. All results are returned.",
        "description": "Generates TSV of files contained in FileSets in search results.",
        "operationId": "batch_download",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "required": true,
            "description": "Type of objects to return. Can be repeated for multiple types."
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching."
          },
          {
            "name": "field_filters",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Any field from any object type can be used as a filter. Use '!' for negation, '*' as a wildcard, and 'lt:', 'lte:', 'gt:', 'gte:' for range queries on numeric fields.",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/tab-separated-values": {
                "schema": {
                  "type": "string"
                },
                "example": "@id\thref\nhref1\thref2"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access-keys/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AccessKey collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AccessKey items. Supports filtering on fields within AccessKey items.",
        "operationId": "access_keys",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "access_key_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Access Key ID",
                "description": "An access key."
              }
            },
            "description": "Filter by access_key_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                "description": "Description of the access key."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "secret_access_key_hash",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Secret Access Key Hash",
                "description": "A secret access key."
              }
            },
            "description": "Filter by secret_access_key_hash",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "current",
                  "deleted"
                ]
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the object."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "User",
                "description": "The user that is assigned to this access key."
              }
            },
            "description": "Filter by user",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AccessKeyResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccessKey"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/analysis-steps/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AnalysisStep collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AnalysisStep items. Supports filtering on fields within AnalysisStep items.",
        "operationId": "analysis_steps",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Analysis Step Types",
              "items": {
                "type": "string",
                "title": "Type",
                "enum": [
                  "alignment",
                  "barcode correction",
                  "barcode counting",
                  "barcode mapping generation",
                  "base calling",
                  "cell to feature barcode mapping",
                  "computational model prediction",
                  "computational model training",
                  "counts normalization",
                  "custom genome assembly",
                  "demultiplexing",
                  "differential expression analysis",
                  "fastq concatenation",
                  "file format conversion",
                  "filtering",
                  "fragment generation",
                  "genome index generation",
                  "interaction calling",
                  "matrix generation",
                  "merging",
                  "peak calling",
                  "read trimming",
                  "quantification",
                  "signal generation",
                  "signal normalization",
                  "spatial feature detection",
                  "transcriptome index generation",
                  "UMI deduplication",
                  "UMI quantification",
                  "variant annotation"
                ]
              },
              "description": "The classification of the software."
            },
            "description": "Filter by analysis_step_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_step_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_versions.software_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_step_versions.software_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_versions.software_versions.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for a software version."
              }
            },
            "description": "Filter by analysis_step_versions.software_versions.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_content_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input Content Types",
              "items": {
                "type": "string",
                "title": "Input Content Type",
                "enum": [
                  "DNA footprint scores",
                  "MPRA sequence designs",
                  "Nanopore reads",
                  "PacBio subreads",
                  "SNP effect matrix",
                  "TF binding scores",
                  "alignments",
                  "barcode onlist",
                  "barcode replacement",
                  "barcode to TF overexpression mapping",
                  "barcode to element mapping",
                  "barcode to hashtag mapping",
                  "barcode to sample mapping",
                  "barcode to variant mapping",
                  "bin paired count",
                  "biological_context",
                  "cell hashing barcodes",
                  "coding variant effects",
                  "coding_variants",
                  "complexes",
                  "complexes_complexes",
                  "complexes_proteins",
                  "complexes_terms",
                  "contact matrix",
                  "control signal",
                  "detected tissue",
                  "differential chromatin contact quantifications",
                  "differential element quantifications",
                  "differential gene expression quantifications",
                  "differential peak quantifications",
                  "differential transcript expression quantifications",
                  "diseases_genes",
                  "documentation (readme)",
                  "drugs",
                  "edge weights",
                  "editing templates",
                  "element quantifications",
                  "element to gene predictions",
                  "elements reference",
                  "elements_genes",
                  "exclusion list",
                  "external source data",
                  "feature weights",
                  "fiducial alignment",
                  "filtered feature barcode matrix",
                  "fold change over control",
                  "fragments",
                  "gene quantifications",
                  "genes",
                  "genes_genes",
                  "genes_pathways",
                  "genes_terms",
                  "genes_transcripts",
                  "genome index",
                  "genome reference",
                  "genomic_elements",
                  "genomic_elements_genes",
                  "genomic_elements_genes_biosamples",
                  "genomic_elements_genes_biosamples_donors",
                  "genomic_elements_genes_biosamples_treatments_chebi",
                  "genomic_elements_genes_biosamples_treatments_proteins",
                  "genomic_elements_genomic_elements",
                  "go_terms_proteins",
                  "graph structure",
                  "guide RNA sequences",
                  "guide quantifications",
                  "high resolution tissue",
                  "inclusion list",
                  "index",
                  "kallisto single cell RNAseq output",
                  "loci",
                  "low resolution tissue",
                  "machine learning model features",
                  "methylated reads",
                  "model parameters",
                  "motifs",
                  "motifs_proteins",
                  "nascent transcriptome index",
                  "neural network architecture",
                  "ontology_terms",
                  "ontology_terms_ontology_terms",
                  "pathways",
                  "pathways_pathways",
                  "peak quantifications",
                  "peaks",
                  "position weight matrix",
                  "prime editing guide RNA sequences",
                  "primer sequences",
                  "primers table",
                  "primers track",
                  "protein language model",
                  "protein to protein interaction score",
                  "proteins",
                  "proteins_proteins",
                  "raw feature barcode matrix",
                  "raw signal",
                  "read-depth signal",
                  "reads",
                  "reporter elements",
                  "reporter experiment",
                  "reporter experiment barcode",
                  "reporter genomic element effects",
                  "reporter genomic variant effects",
                  "reporter variants",
                  "sample barcode count matrix",
                  "sample sort parameters",
                  "scale factors",
                  "seqspec",
                  "sequence attributes",
                  "signal",
                  "signal of all reads",
                  "signal of unique reads",
                  "signal p-value",
                  "sparse gene count matrix",
                  "sparse peak count matrix",
                  "sparse transcript count matrix",
                  "spike-ins",
                  "studies",
                  "studies_variants",
                  "studies_variants_phenotypes",
                  "target transcripts",
                  "tissue positions",
                  "transcript quantifications",
                  "transcriptome alignments",
                  "transcriptome annotations",
                  "transcriptome index",
                  "transcriptome reference",
                  "transcripts",
                  "transcripts_proteins",
                  "unfiltered global differential expression",
                  "unfiltered local differential expression",
                  "variant binding effects",
                  "variant effects",
                  "variant functional predictions",
                  "variant localization impacts",
                  "variant to element mapping",
                  "variants",
                  "variants_coding_variants",
                  "variants_diseases",
                  "variants_diseases_genes",
                  "variants_drugs",
                  "variants_drugs_genes",
                  "variants_genes",
                  "variants_genes_terms",
                  "variants_genomic_elements",
                  "variants_phenotypes",
                  "variants_phenotypes_studies",
                  "variants_proteins",
                  "variants_proteins_biosamples",
                  "variants_proteins_phenotypes",
                  "variants_proteins_terms",
                  "variants_variants",
                  "vector sequences"
                ],
                "description": "A content type used as input for the analysis step."
              },
              "description": "The content types used as input for the analysis step."
            },
            "description": "Filter by input_content_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "Full name of the analysis step."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "output_content_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Output Content Types",
              "items": {
                "type": "string",
                "title": "Output Content Type",
                "enum": [
                  "DNA footprint scores",
                  "MPRA sequence designs",
                  "Nanopore reads",
                  "PacBio subreads",
                  "SNP effect matrix",
                  "TF binding scores",
                  "alignments",
                  "barcode onlist",
                  "barcode replacement",
                  "barcode to TF overexpression mapping",
                  "barcode to element mapping",
                  "barcode to hashtag mapping",
                  "barcode to sample mapping",
                  "barcode to variant mapping",
                  "bin paired count",
                  "biological_context",
                  "cell hashing barcodes",
                  "coding variant effects",
                  "coding_variants",
                  "complexes",
                  "complexes_complexes",
                  "complexes_proteins",
                  "complexes_terms",
                  "contact matrix",
                  "control signal",
                  "detected tissue",
                  "differential chromatin contact quantifications",
                  "differential element quantifications",
                  "differential gene expression quantifications",
                  "differential peak quantifications",
                  "differential transcript expression quantifications",
                  "diseases_genes",
                  "documentation (readme)",
                  "drugs",
                  "edge weights",
                  "editing templates",
                  "element quantifications",
                  "element to gene predictions",
                  "elements reference",
                  "elements_genes",
                  "exclusion list",
                  "external source data",
                  "feature weights",
                  "fiducial alignment",
                  "filtered feature barcode matrix",
                  "fold change over control",
                  "fragments",
                  "gene quantifications",
                  "genes",
                  "genes_genes",
                  "genes_pathways",
                  "genes_terms",
                  "genes_transcripts",
                  "genome index",
                  "genome reference",
                  "genomic_elements",
                  "genomic_elements_genes",
                  "genomic_elements_genes_biosamples",
                  "genomic_elements_genes_biosamples_donors",
                  "genomic_elements_genes_biosamples_treatments_chebi",
                  "genomic_elements_genes_biosamples_treatments_proteins",
                  "genomic_elements_genomic_elements",
                  "go_terms_proteins",
                  "graph structure",
                  "guide RNA sequences",
                  "guide quantifications",
                  "high resolution tissue",
                  "inclusion list",
                  "index",
                  "kallisto single cell RNAseq output",
                  "loci",
                  "low resolution tissue",
                  "machine learning model features",
                  "methylated reads",
                  "model parameters",
                  "motifs",
                  "motifs_proteins",
                  "nascent transcriptome index",
                  "neural network architecture",
                  "ontology_terms",
                  "ontology_terms_ontology_terms",
                  "pathways",
                  "pathways_pathways",
                  "peak quantifications",
                  "peaks",
                  "position weight matrix",
                  "prime editing guide RNA sequences",
                  "primer sequences",
                  "primers table",
                  "primers track",
                  "protein language model",
                  "protein to protein interaction score",
                  "proteins",
                  "proteins_proteins",
                  "raw feature barcode matrix",
                  "raw signal",
                  "read-depth signal",
                  "reads",
                  "reporter elements",
                  "reporter experiment",
                  "reporter experiment barcode",
                  "reporter genomic element effects",
                  "reporter genomic variant effects",
                  "reporter variants",
                  "sample barcode count matrix",
                  "sample sort parameters",
                  "scale factors",
                  "seqspec",
                  "sequence attributes",
                  "signal",
                  "signal of all reads",
                  "signal of unique reads",
                  "signal p-value",
                  "sparse gene count matrix",
                  "sparse peak count matrix",
                  "sparse transcript count matrix",
                  "spike-ins",
                  "studies",
                  "studies_variants",
                  "studies_variants_phenotypes",
                  "target transcripts",
                  "tissue positions",
                  "transcript quantifications",
                  "transcriptome alignments",
                  "transcriptome annotations",
                  "transcriptome index",
                  "transcriptome reference",
                  "transcripts",
                  "transcripts_proteins",
                  "unfiltered global differential expression",
                  "unfiltered local differential expression",
                  "variant binding effects",
                  "variant effects",
                  "variant functional predictions",
                  "variant localization impacts",
                  "variant to element mapping",
                  "variants",
                  "variants_coding_variants",
                  "variants_diseases",
                  "variants_diseases_genes",
                  "variants_drugs",
                  "variants_drugs_genes",
                  "variants_genes",
                  "variants_genes_terms",
                  "variants_genomic_elements",
                  "variants_phenotypes",
                  "variants_phenotypes_studies",
                  "variants_proteins",
                  "variants_proteins_biosamples",
                  "variants_proteins_phenotypes",
                  "variants_proteins_terms",
                  "variants_variants",
                  "vector sequences"
                ],
                "description": "A content type produced as output by the analysis step."
              },
              "description": "The content types produced as output by the analysis step."
            },
            "description": "Filter by output_content_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "parents.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by parents.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "parents.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by parents.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "parents.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                "description": "The preferred viewable name of the analysis step, likely the same as the step label."
              }
            },
            "description": "Filter by parents.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "step_label",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Step Label",
                "pattern": "^[a-z0-9-]+-step$",
                "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step"
              }
            },
            "description": "Filter by step_label",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the object."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                "description": "The preferred viewable name of the analysis step, likely the same as the step label."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by workflow.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by workflow.status",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AnalysisStepResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnalysisStep"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/analysis-step-versions/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AnalysisStepVersion collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AnalysisStepVersion items. Supports filtering on fields within AnalysisStepVersion items.",
        "operationId": "analysis_step_versions",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_step.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "Full name of the analysis step."
              }
            },
            "description": "Filter by analysis_step.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_step.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                "description": "The preferred viewable name of the analysis step, likely the same as the step label."
              }
            },
            "description": "Filter by analysis_step.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_step.workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.workflow.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by analysis_step.workflow.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by analysis_step.workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step.workflow.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_step.workflow.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by software_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for a software version."
              }
            },
            "description": "Filter by software_versions.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by software_versions.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the object."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AnalysisStepVersionResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnalysisStepVersion"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/awards/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Award collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Award items. Supports filtering on fields within Award items.",
        "operationId": "awards",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "enum": [
                  "affiliate",
                  "data analysis",
                  "data coordination",
                  "functional characterization",
                  "mapping",
                  "networks",
                  "predictive modeling"
                ],
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by component",
            "style": "form",
            "explode": true
          },
          {
            "name": "contact_pi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Contact P.I.",
                "description": "The contact Principal Investigator of the grant."
              }
            },
            "description": "Filter by contact_pi",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "End Date",
                "description": "The date when the award concludes."
              }
            },
            "description": "Filter by end_date",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[A-Za-z0-9\\-]+$",
                "description": "The official grant number from the NIH database, if applicable"
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "pis",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Principal Investigators",
              "items": {
                "type": "string",
                "title": "Investigator",
                "description": "User object of the investigator."
              },
              "description": "Principal Investigator(s) of the grant."
            },
            "description": "Filter by pis",
            "style": "form",
            "explode": true
          },
          {
            "name": "project",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project",
                "enum": [
                  "community",
                  "ENCODE",
                  "IGVF",
                  "IGVF affiliate"
                ],
                "description": "The collection of biological data related to a single initiative, originating from a consortium."
              }
            },
            "description": "Filter by project",
            "style": "form",
            "explode": true
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Start Date",
                "description": "The date when the award begins."
              }
            },
            "description": "Filter by start_date",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "current",
                  "deleted",
                  "disabled"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the award."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "viewing_group",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "View Access Group",
                "enum": [
                  "community",
                  "IGVF"
                ],
                "description": "The group that determines which set of data the user has permission to view."
              }
            },
            "description": "Filter by viewing_group",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AwardResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Award"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/biomarkers/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Biomarker collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Biomarker items. Supports filtering on fields within Biomarker items.",
        "operationId": "biomarkers",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[A-Za-z0-9\\-]+$",
                "description": "The official grant number from the NIH database, if applicable"
              }
            },
            "description": "Filter by award.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarker_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biomarker For",
              "items": {
                "type": "string",
                "title": "Biomarker For"
              },
              "description": "The samples which have been confirmed to have this biomarker."
            },
            "description": "Filter by biomarker_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "cell surface protein",
                  "marker gene"
                ],
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene",
                "description": "Biomarker gene."
              }
            },
            "description": "Filter by gene",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The biomarker name."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Quantification",
                "enum": [
                  "negative",
                  "positive",
                  "low",
                  "intermediate",
                  "high"
                ],
                "description": "The biomarker association to the biosample, disease or other condition.  This can be the absence of the biomarker or the presence of the biomarker in some low, intermediate or high quantity."
              }
            },
            "description": "Filter by quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym"
              },
              "description": "Alternate names for this biomarker."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "BiomarkerResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Biomarker"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/documents/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Document collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Document items. Supports filtering on fields within Document items.",
        "operationId": "documents",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "characterization_method",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Characterization Method",
                "enum": [
                  "FACS",
                  "immunoblot",
                  "immunofluorescence",
                  "immunoprecipitation",
                  "mass spectrometry",
                  "PCR",
                  "restriction digest",
                  "RT-qPCR",
                  "sequencing"
                ],
                "description": "The method used for the characterization."
              }
            },
            "description": "Filter by characterization_method",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Document Type",
                "enum": [
                  "cell fate change protocol",
                  "characterization",
                  "computational protocol",
                  "experimental protocol",
                  "file format specification",
                  "image",
                  "library structure seqspec",
                  "model source data",
                  "plate map",
                  "plasmid map",
                  "plasmid sequence",
                  "quality control report",
                  "standards"
                ],
                "description": "The category that best describes the document."
              }
            },
            "description": "Filter by document_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the document."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "urls",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "URL",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information to the document."
              },
              "description": "External resources with additional information to the document."
            },
            "description": "Filter by urls",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "DocumentResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/human-donors/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the HumanDonor collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort HumanDonor items. Supports filtering on fields within HumanDonor items.",
        "operationId": "human_donors",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "(^GEO:SAMN\\d+$)|(^ENCODE:ENCDO\\d{3}[A-Z]{3}$)|^(IGSR):.+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "human_donor_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Human Donor Identifiers",
              "items": {
                "type": "string",
                "title": "Human Donor Identifier",
                "description": "An identifier of this human donor."
              },
              "description": "Identifiers of this human donor."
            },
            "description": "Filter by human_donor_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by phenotypic_features.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by phenotypic_features.feature.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by phenotypic_features.feature.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by phenotypic_features.feature.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by phenotypic_features.feature.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.observation_date",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Observation Date",
                "description": "The date the feature was observed or measured."
              }
            },
            "description": "Filter by phenotypic_features.observation_date",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.quantity_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Quantity Units",
                "description": "The unit of measurement for a quantity associated with the phenotypic feature."
              }
            },
            "description": "Filter by phenotypic_features.quantity_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by phenotypic_features.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "related_donors.donor.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by related_donors.donor.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "related_donors.donor.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by related_donors.donor.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "male",
                  "female",
                  "unspecified"
                ],
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the human donor."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "HumanDonorResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HumanDonor"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rodent-donors/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the RodentDonor collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort RodentDonor items. Supports filtering on fields within RodentDonor items.",
        "operationId": "rodent_donors",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^(GEO:SAMN\\d+)|(IMSR_JAX:\\d{6})|(ENCODE:ENCDO\\d{3}[A-Z]{3})$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "genotype",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Genotype",
                "description": "The genotype of the strain according to accepted nomenclature conventions."
              }
            },
            "description": "Filter by genotype",
            "style": "form",
            "explode": true
          },
          {
            "name": "individual_rodent",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Individual Rodent",
                "description": "This rodent donor represents an individual rodent."
              }
            },
            "description": "Filter by individual_rodent",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by phenotypic_features.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by phenotypic_features.feature.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by phenotypic_features.feature.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by phenotypic_features.feature.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.feature.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by phenotypic_features.feature.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.observation_date",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Observation Date",
                "description": "The date the feature was observed or measured."
              }
            },
            "description": "Filter by phenotypic_features.observation_date",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.quantity_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Quantity Units",
                "description": "The unit of measurement for a quantity associated with the phenotypic feature."
              }
            },
            "description": "Filter by phenotypic_features.quantity_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "phenotypic_features.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by phenotypic_features.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "rodent_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Rodent Identifier",
                "description": "The identifier for this individual rodent donor."
              }
            },
            "description": "Filter by rodent_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "male",
                  "female",
                  "unspecified"
                ],
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "enum": [
                  "A/J (AJ)",
                  "B6129S1F1/J",
                  "B6AF1/J",
                  "B6CASTF1/J",
                  "B6NODF1/J",
                  "B6NZOF1/J",
                  "B6PWKF1/J",
                  "B6WSBF1/J",
                  "C57BL/6J (B6)",
                  "129S1/SvImJ (129)",
                  "NOD/ShiLtJ (NOD)",
                  "NZO/H1LtJ (NZO)",
                  "CAST/EiJ (CAST)",
                  "PWK/PhJ (PWK)",
                  "WSB/EiJ (WSB)",
                  "CAST (M. m. castaneus)",
                  "WSB (M. m. domesticus)",
                  "PWK (M. m. musculus)"
                ],
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the rodent donor."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "RodentDonorResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RodentDonor"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/alignment-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AlignmentFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AlignmentFile items. Supports filtering on fields within AlignmentFile items.",
        "operationId": "alignment_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "enum": [
                  "GRCh38",
                  "hg19",
                  "Cast - GRCm39",
                  "GRCm39",
                  "mm10",
                  "GRCh38, mm10",
                  "custom"
                ],
                "description": "Genome assembly applicable for the annotation data."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "base_modifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Base Modifications",
              "items": {
                "type": "string",
                "title": "Base Modification",
                "enum": [
                  "4mC",
                  "5hmC",
                  "5mC",
                  "6mA",
                  "inosine",
                  "pseudouridine"
                ],
                "description": "The chemical modification to bases in a DNA sequence that is detected in this file."
              },
              "description": "The chemical modifications to bases in a DNA sequence that are detected in this file."
            },
            "description": "Filter by base_modifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Summary",
                "description": "A summary of the data in the alignment file."
              }
            },
            "description": "Filter by content_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "filtered",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Filtered",
                "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling."
              }
            },
            "description": "Filter by filtered",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "read_count",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Read Count",
                "minimum": 0,
                "description": "Number of reads in a bam file. Including both mapped, unmapped, and multi-mapped read counts."
              }
            },
            "description": "Filter by read_count",
            "style": "form",
            "explode": true
          },
          {
            "name": "redacted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Redacted",
                "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information."
              }
            },
            "description": "Filter by redacted",
            "style": "form",
            "explode": true
          },
          {
            "name": "reference_files",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Reference Files",
              "items": {
                "type": "string",
                "title": "Reference File",
                "description": "Link to a reference file used to generate this file."
              },
              "description": "Link to the reference files used to generate this file."
            },
            "description": "Filter by reference_files",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the alignment file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AlignmentFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AlignmentFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/configuration-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ConfigurationFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ConfigurationFile items. Supports filtering on fields within ConfigurationFile items.",
        "operationId": "configuration_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "seqspec_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Seqspec Of",
              "items": {
                "type": "string",
                "title": "Seqspec Of"
              },
              "description": "Sequence files this file is a seqspec of."
            },
            "description": "Filter by seqspec_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the configuration file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validate_onlist_files",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Validate Onlist Files",
                "description": "Whether checkfiles will validate the onlist files."
              }
            },
            "description": "Filter by validate_onlist_files",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ConfigurationFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConfigurationFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/genome-browser-annotation-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the GenomeBrowserAnnotationFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort GenomeBrowserAnnotationFile items. Supports filtering on fields within GenomeBrowserAnnotationFile items.",
        "operationId": "genome_browser_annotation_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "enum": [
                  "GRCh38",
                  "hg19",
                  "Cast - GRCm39",
                  "GRCm39",
                  "mm10",
                  "GRCh38, mm10",
                  "custom"
                ],
                "description": "Genome assembly applicable for the annotation data."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by cell_type_annotation.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by cell_type_annotation.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by cell_type_annotation.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format Type",
                "enum": [
                  "bed12",
                  "bed3",
                  "bed3+",
                  "bed5",
                  "bed6",
                  "bed6+",
                  "bed9",
                  "bed9+",
                  "mpra_starr"
                ],
                "description": "The subtype of bed files."
              }
            },
            "description": "Filter by file_format_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the genome browser annotation file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "GenomeBrowserAnnotationFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/image-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ImageFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ImageFile items. Supports filtering on fields within ImageFile items.",
        "operationId": "image_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the image file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ImageFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/index-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the IndexFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort IndexFile items. Supports filtering on fields within IndexFile items.",
        "operationId": "index_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "The assembly associated with the index file."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "filtered",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Filtered",
                "description": "Indicates whether reads that did not pass a filtering step, such as PCR duplicates, have been removed from the file."
              }
            },
            "description": "Filter by filtered",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "redacted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Redacted",
                "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information."
              }
            },
            "description": "Filter by redacted",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the index file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "IndexFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IndexFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/matrix-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the MatrixFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort MatrixFile items. Supports filtering on fields within MatrixFile items.",
        "operationId": "matrix_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Summary",
                "description": "A summary of the data in the matrix file."
              }
            },
            "description": "Filter by content_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "filtered",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Filtered",
                "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling."
              }
            },
            "description": "Filter by filtered",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "principal_dimension",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Principal Dimension",
                "enum": [
                  "cell",
                  "fragment",
                  "gene",
                  "time",
                  "treatment",
                  "variant",
                  "genomic position",
                  "spot barcode"
                ],
                "description": "The principal dimension of the matrix."
              }
            },
            "description": "Filter by principal_dimension",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "reference_files",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Reference Files",
              "items": {
                "type": "string",
                "title": "Reference File",
                "description": "Link to a reference file used to generate this file."
              },
              "description": "Link to the reference files used to generate this file."
            },
            "description": "Filter by reference_files",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "secondary_dimensions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Secondary Dimensions",
              "items": {
                "type": "string",
                "title": "Secondary Dimensions",
                "enum": [
                  "antibody capture",
                  "barcode count",
                  "cell",
                  "CRISPR guide capture",
                  "fragment",
                  "gene",
                  "gene expression",
                  "genomic position",
                  "peak",
                  "time",
                  "treatment",
                  "UMI count",
                  "variant"
                ]
              },
              "description": "The secondary, tertiary....n levels of dimensions of the matrix."
            },
            "description": "Filter by secondary_dimensions",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the matrix file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "MatrixFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MatrixFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/model-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ModelFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ModelFile items. Supports filtering on fields within ModelFile items.",
        "operationId": "model_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "catalog_adapters",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "IGVF Catalog Adapters",
              "items": {
                "type": "string",
                "title": "IGVF Catalog Adapter",
                "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py",
                "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file."
              },
              "description": "IGVF Catalog Adapters that ingests this file"
            },
            "description": "Filter by catalog_adapters",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^(Kipoi):.+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "external_host_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "External Host URL",
                "description": "A link to the resource where the file is externally hosted."
              }
            },
            "description": "Filter by external_host_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "externally_hosted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Externally Hosted",
                "description": "Indicates whether the file is externally hosted and not stored on portal."
              }
            },
            "description": "Filter by externally_hosted",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the model file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ModelFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModelFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/reference-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ReferenceFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ReferenceFile items. Supports filtering on fields within ReferenceFile items.",
        "operationId": "reference_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "enum": [
                  "GRCh38",
                  "hg19",
                  "Cast - GRCm39",
                  "GRCm39",
                  "mm10",
                  "GRCh38, mm10",
                  "custom"
                ],
                "description": "Genome assembly applicable for the reference data."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "catalog_adapters",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "IGVF Catalog Adapters",
              "items": {
                "type": "string",
                "title": "IGVF Catalog Adapter",
                "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py",
                "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file."
              },
              "description": "IGVF Catalog Adapters that ingests this file"
            },
            "description": "Filter by catalog_adapters",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^(GENCODE|GRC|ENSEMBL|ENCODE):.+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "external",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "External",
                "description": "Indicates whether the file was obtained from an external, non-IGVF source."
              }
            },
            "description": "Filter by external",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format Type",
                "enum": [
                  "bed12",
                  "bed3",
                  "bed3+",
                  "bed5",
                  "bed6",
                  "bed6+",
                  "bed9",
                  "bed9+",
                  "mpra_starr"
                ],
                "description": "The subtype of bed files."
              }
            },
            "description": "Filter by file_format_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "description": "Link to external resource, such as NCBI or GENCODE, where the reference data was obtained."
              }
            },
            "description": "Filter by source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sources",
              "items": {
                "type": "string",
                "title": "Source",
                "description": "The originating lab or vendor."
              },
              "description": "The originating lab(s) or vendor(s)."
            },
            "description": "Filter by sources",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the reference file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ReferenceFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferenceFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sequence-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SequenceFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SequenceFile items. Supports filtering on fields within SequenceFile items.",
        "operationId": "sequence_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "base_modifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Base Modifications",
              "items": {
                "type": "string",
                "title": "Base Modification",
                "enum": [
                  "4mC",
                  "5hmC",
                  "5mC",
                  "6mA",
                  "inosine",
                  "pseudouridine"
                ],
                "description": "The chemical modification to bases in a DNA sequence that is detected in this file."
              },
              "description": "The chemical modifications to bases in a DNA sequence that are detected in this file."
            },
            "description": "Filter by base_modifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^(SRA:(SRR|SRX)\\d+)$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "external_host_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "External Host URL",
                "description": "A link to the resource where the file is externally hosted."
              }
            },
            "description": "Filter by external_host_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "externally_hosted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Externally Hosted",
                "description": "Indicates whether the file is externally hosted and not stored on portal."
              }
            },
            "description": "Filter by externally_hosted",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "flowcell_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Flowcell ID",
                "pattern": "^[a-zA-Z0-9-]+$",
                "description": "The alphanumeric identifier for the flowcell of a sequencing machine."
              }
            },
            "description": "Filter by flowcell_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "illumina_read_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Illumina Read Type",
                "enum": [
                  "R1",
                  "R2",
                  "R3",
                  "I1",
                  "I2"
                ],
                "description": "The read type of the file. Relevant only for files produced using an Illumina sequencing platform."
              }
            },
            "description": "Filter by illumina_read_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "index",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Index",
                "description": "An Illumina index associated with the file."
              }
            },
            "description": "Filter by index",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lane",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Lane",
                "minimum": 1,
                "description": "An integer identifying the lane of a sequencing machine."
              }
            },
            "description": "Filter by lane",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "maximum_read_length",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Maximum Read Length",
                "minimum": 0,
                "maximum": 300000000,
                "description": "For high-throughput sequencing, the maximum number of contiguous nucleotides determined by sequencing."
              }
            },
            "description": "Filter by maximum_read_length",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "mean_read_length",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Mean Read Length",
                "minimum": 0,
                "maximum": 300000000,
                "description": "For high-throughput sequencing, the mean number of contiguous nucleotides determined by sequencing."
              }
            },
            "description": "Filter by mean_read_length",
            "style": "form",
            "explode": true
          },
          {
            "name": "minimum_read_length",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Minimum Read Length",
                "minimum": 0,
                "maximum": 300000000,
                "description": "For high-throughput sequencing, the minimum number of contiguous nucleotides determined by sequencing."
              }
            },
            "description": "Filter by minimum_read_length",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "read_count",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Read Count",
                "minimum": 0,
                "description": "Number of reads in a fastq file."
              }
            },
            "description": "Filter by read_count",
            "style": "form",
            "explode": true
          },
          {
            "name": "read_names",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Read Names",
              "items": {
                "type": "string",
                "title": "Read Name",
                "enum": [
                  "Read 1",
                  "Read 2",
                  "Barcode index",
                  "Barcode forward",
                  "UMI",
                  "Barcode reverse"
                ],
                "description": "The read name of a sequence file based on how it will be used by uniform pipelines."
              },
              "description": "The read names of a sequence file based on how it will be used by uniform pipelines."
            },
            "description": "Filter by read_names",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "seqspec_document",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Seqspec Document",
                "description": "A seqspec document describing the library and read structure."
              }
            },
            "description": "Filter by seqspec_document",
            "style": "form",
            "explode": true
          },
          {
            "name": "seqspecs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Seqspecs",
              "items": {
                "type": "string",
                "title": "Seqspecs"
              },
              "description": "Link(s) to the associated seqspec YAML configuration file(s)."
            },
            "description": "Filter by seqspecs",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_kit",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Kit",
                "enum": [
                  "AVITI 2x75 Sequencing Kit Cloudbreak High Output",
                  "AVITI 2x150 Sequencing Kit Cloudbreak High Output",
                  "HiSeq SBS Kit v4",
                  "HiSeq SR Cluster Kit v4-cBot-HS",
                  "HiSeq PE Cluster Kit v4-cBot-HS",
                  "HiSeq SR Rapid Cluster Kit v2",
                  "HiSeq PE Rapid Cluster Kit v2",
                  "HiSeq Rapid SBS Kit v2",
                  "HiSeq 3000/4000 SBS Kit",
                  "HiSeq 3000/4000 SR Cluster Kit",
                  "HiSeq 3000/4000 PE Cluster Kit",
                  "MiSeq Reagent Kit v2",
                  "NextSeq 500 Mid Output Kit",
                  "NextSeq 500 High Output Kit",
                  "NextSeq 500 Mid Output v2 Kit",
                  "NextSeq 500 High Output v2 Kit",
                  "NextSeq 500/550 Mid-Output v2.5 Kit",
                  "NextSeq 500/550 High-Output v2.5 Kit",
                  "TG NextSeq 500/550 Mid-Output Kit v2.5",
                  "TG NextSeq 500/550 High-Output Kit v2.5",
                  "NextSeq 1000/2000 P1 Reagent Kit",
                  "NextSeq 1000/2000 P2 Reagent Kit",
                  "NextSeq 1000/2000 P3 Reagent Kit",
                  "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                  "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                  "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                  "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                  "NovaSeq 6000 SP Reagent Kit v1.5",
                  "NovaSeq 6000 S1 Reagent Kit v1.5",
                  "NovaSeq 6000 S2 Reagent Kit v1.5",
                  "NovaSeq 6000 S4 Reagent Kit v1.5",
                  "NovaSeq X Series 1.5B Reagent Kit",
                  "NovaSeq X Series 10B Reagent Kit",
                  "NovaSeq X Series 25B Reagent Kit",
                  "ONT Ligation Sequencing Kit V14",
                  "Sequel sequencing kit 3.0",
                  "Sequel II sequencing kit 2.0",
                  "Singular G4 F2 Reagent Kit"
                ],
                "description": "A reagent kit used with a library to prepare it for sequencing."
              }
            },
            "description": "Filter by sequencing_kit",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_platform.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sequencing_platform.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_platform.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sequencing_platform.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_platform.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sequencing_platform.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_run",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Sequencing Run",
                "minimum": 1,
                "description": "An ordinal number indicating which sequencing run of the associated library that the file belongs to."
              }
            },
            "description": "Filter by sequencing_run",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sequence file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SequenceFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SequenceFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/signal-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SignalFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SignalFile items. Supports filtering on fields within SignalFile items.",
        "operationId": "signal_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "enum": [
                  "GRCh38",
                  "hg19",
                  "Cast - GRCm39",
                  "GRCm39",
                  "mm10",
                  "GRCh38, mm10",
                  "custom"
                ],
                "description": "Genome assembly applicable for the annotation data."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by cell_type_annotation.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by cell_type_annotation.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by cell_type_annotation.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Summary",
                "description": "A summary of the data in the signal file."
              }
            },
            "description": "Filter by content_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "filtered",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Filtered",
                "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling."
              }
            },
            "description": "Filter by filtered",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "normalized",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Normalized",
                "description": "Indicates if the signal file is normalized."
              }
            },
            "description": "Filter by normalized",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "reference_files",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Reference Files",
              "items": {
                "type": "string",
                "title": "Reference File",
                "description": "Link to a reference file used to generate this file."
              },
              "description": "Link to the reference files used to generate this file."
            },
            "description": "Filter by reference_files",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "start_view_position",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Start View Position",
                "pattern": "^(chr(X|Y|M|[1-9]|1[0-9]|2[0-2]):[0-9]+)$",
                "description": "The 0-based coordinate for the default starting position when viewing the signal in a genome browser."
              }
            },
            "description": "Filter by start_view_position",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "strand_specificity",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strand Specificity",
                "enum": [
                  "plus",
                  "minus",
                  "unstranded"
                ],
                "description": "The strandedness of the signal file: plus, minus, or unstranded."
              }
            },
            "description": "Filter by strand_specificity",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the signal file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SignalFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SignalFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tabular-files/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the TabularFile collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort TabularFile items. Supports filtering on fields within TabularFile items.",
        "operationId": "tabular_files",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the file."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "anvil_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "AnVIL URL",
                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace."
              }
            },
            "description": "Filter by anvil_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay from the file set this file belongs to."
              },
              "description": "Title(s) of assay from the file set this file belongs to."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "enum": [
                  "GRCh38",
                  "hg19",
                  "Cast - GRCm39",
                  "GRCm39",
                  "mm10",
                  "GRCh38, mm10",
                  "custom"
                ],
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "barcode_map_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Barcode Map For",
              "items": {
                "type": "string",
                "title": "Barcode Map For"
              },
              "description": "Link(s) to the Multiplexed samples using this file as barcode map."
            },
            "description": "Filter by barcode_map_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "catalog_adapters",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "IGVF Catalog Adapters",
              "items": {
                "type": "string",
                "title": "IGVF Catalog Adapter",
                "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py",
                "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file."
              },
              "description": "IGVF Catalog Adapters that ingests this file"
            },
            "description": "Filter by catalog_adapters",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by cell_type_annotation.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by cell_type_annotation.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_type_annotation.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by cell_type_annotation.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "checkfiles_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Checkfiles Version",
                "description": "The Checkfiles GitHub version release the file was validated with."
              }
            },
            "description": "Filter by checkfiles_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The MD5sum of the uncompressed file."
              }
            },
            "description": "Filter by content_md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "(?!)",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "derived_manually",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Derived Manually",
                "description": "A boolean indicating whether the file has been dervided manually without automated computational methods."
              }
            },
            "description": "Filter by derived_manually",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_format_specifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by file_format_specifications.description",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_specifications.standardized_file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Standardized File Format",
                "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline."
              }
            },
            "description": "Filter by file_format_specifications.standardized_file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_format_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format Type",
                "enum": [
                  "bed12",
                  "bed3",
                  "bed3+",
                  "bed5",
                  "bed6",
                  "bed6+",
                  "bed9",
                  "bed9+",
                  "mpra_starr"
                ],
                "description": "The subtype of bed files."
              }
            },
            "description": "Filter by file_format_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by file_set.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by file_set.data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_set.samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by file_set.samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by file_set.samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by file_set.samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by file_set.samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_set.samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by file_set.samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by file_set.samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by file_set.samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_set.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_set.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by file_set.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "filtered",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Filtered",
                "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling."
              }
            },
            "description": "Filter by filtered",
            "style": "form",
            "explode": true
          },
          {
            "name": "gene_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene List For",
              "items": {
                "type": "string",
                "title": "Gene List For"
              },
              "description": "File Set(s) that this file is a gene list for."
            },
            "description": "Filter by gene_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by href",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File For",
              "items": {
                "type": "string",
                "title": "Input File For"
              },
              "description": "The files which are derived from this file."
            },
            "description": "Filter by input_file_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by integrated_in.applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by integrated_in.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by integrated_in.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by integrated_in.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_in.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by integrated_in.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "loci_list_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Loci List For",
              "items": {
                "type": "string",
                "title": "Loci List For"
              },
              "description": "File Set(s) that this file is a loci list for."
            },
            "description": "Filter by loci_list_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "primer_design_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Primer Design For",
              "items": {
                "type": "string",
                "title": "Primer Design For"
              },
              "description": "Link(s) to the MeasurementSets using this file as a primer design."
            },
            "description": "Filter by primer_design_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metrics",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metrics",
              "items": {
                "type": "string",
                "title": "Quality Metric"
              },
              "description": "The quality metrics that are associated with this file."
            },
            "description": "Filter by quality_metrics",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the tabular file."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "enum": [
                  "pending",
                  "file not found",
                  "invalidated",
                  "validated",
                  "validation exempted"
                ],
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "validation_error_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Validation Error Detail",
                "description": "Explanation of why the file failed the automated content checks."
              }
            },
            "description": "Filter by validation_error_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflow.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflow.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflow.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TabularFileResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TabularFile"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/analysis-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AnalysisSet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AnalysisSet items. Supports filtering on fields within AnalysisSet items.",
        "operationId": "analysis_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Titles",
              "items": {
                "type": "string",
                "title": "Assay Title",
                "description": "Title of assay that produced data analyzed in the analysis set."
              },
              "description": "Title(s) of assays that produced data analyzed in the analysis set."
            },
            "description": "Filter by assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "demultiplexed_samples",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Demultiplexed Samples",
              "items": {
                "type": "string",
                "title": "Demultiplexed Sample"
              },
              "description": "The sample(s) associated with this analysis set inferred through demultiplexing."
            },
            "description": "Filter by demultiplexed_samples",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "external_image_data_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "External Image Data URL",
                "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$",
                "description": "Links to the external site where images and related data produced by this analysis are stored."
              }
            },
            "description": "Filter by external_image_data_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "intermediate analysis",
                  "principal analysis"
                ],
                "description": "The level of this analysis set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Platform",
                "description": "The measurement device used to produce sequencing data."
              }
            },
            "description": "Filter by files.sequencing_platform",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by functional_assay_mechanisms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by functional_assay_mechanisms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by functional_assay_mechanisms.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by functional_assay_mechanisms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by input_file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by input_file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by input_file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by input_file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by input_file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for conducting the assay on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Simplified Sample Summary",
                "description": "A summary of the samples associated with input file sets of this analysis set."
              }
            },
            "description": "Filter by sample_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by workflows.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by workflows.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by workflows.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by workflows.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows.uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by workflows.uniform_pipeline",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AnalysisSetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnalysisSet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auxiliary-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AuxiliarySet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AuxiliarySet items. Supports filtering on fields within AuxiliarySet items.",
        "operationId": "auxiliary_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "barcode_map",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Link to barcode map tabular file",
                "description": "The link to the barcode mapping tabular file."
              }
            },
            "description": "Filter by barcode_map",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "cell hashing barcode sequencing",
                  "cell sorting",
                  "circularized RNA barcode detection",
                  "gRNA sequencing",
                  "lipid-conjugated oligo sequencing",
                  "MORF barcode sequencing",
                  "quantification DNA barcode sequencing"
                ],
                "description": "The category that best describes this auxiliary file set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Platform",
                "description": "The measurement device used to produce sequencing data."
              }
            },
            "description": "Filter by files.sequencing_platform",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "measurement_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by measurement_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "measurement_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by measurement_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "measurement_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by measurement_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "measurement_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by measurement_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "measurement_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by measurement_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AuxiliarySetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AuxiliarySet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/construct-library-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ConstructLibrarySet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ConstructLibrarySet items. Supports filtering on fields within ConstructLibrarySet items.",
        "operationId": "construct_library_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by applied_to_samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by applied_to_samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by applied_to_samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by applied_to_samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by applied_to_samples.donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by applied_to_samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by applied_to_samples.modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by applied_to_samples.nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by applied_to_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by applied_to_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by applied_to_samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by applied_to_samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by applied_to_samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by applied_to_samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by applied_to_samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "applied_to_samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by applied_to_samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "associated_phenotypes.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by associated_phenotypes.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "average_guide_coverage",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Average Guide Coverage",
                "minimum": 0,
                "description": "The average number of guides targeting each element of interest in the library."
              }
            },
            "description": "Filter by average_guide_coverage",
            "style": "form",
            "explode": true
          },
          {
            "name": "average_insert_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Average Insert Size",
                "minimum": 0,
                "description": "The average size of the inserts cloned into vectors in the library."
              }
            },
            "description": "Filter by average_insert_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Construct Library Sets",
              "items": {
                "type": "string",
                "title": "Construct Library Set",
                "description": "A construct library set associated with a sample of this file set."
              },
              "description": "The construct library sets associated with the samples of this file set."
            },
            "description": "Filter by construct_library_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_file_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Controls",
              "items": {
                "type": "string",
                "title": "Control",
                "description": "File sets that can serve as scientific controls for this file set."
              },
              "description": "File sets that can serve as scientific controls for this file set."
            },
            "description": "Filter by control_file_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [
                  "control transduction",
                  "non-targeting"
                ],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "exon",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Exon",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "An identifier in plain text for the specific exon in an expression vector library. The associated gene must be listed in the small_scale_gene_list property."
              }
            },
            "description": "Filter by exon",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "guide library",
                  "reporter library",
                  "expression vector library",
                  "editing template library"
                ],
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "guide_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Guide Type",
                "enum": [
                  "sgRNA",
                  "pgRNA"
                ],
                "description": "The design of guides used in a CRISPR library, paired-guide (pgRNA) or single-guide (sgRNA)."
              }
            },
            "description": "Filter by guide_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_content_files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by integrated_content_files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "integrated_content_files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by integrated_content_files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by large_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by large_scale_gene_list.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by large_scale_gene_list.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by large_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by large_scale_loci_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by large_scale_loci_list.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by large_scale_loci_list.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by large_scale_loci_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_guide_coverage",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Lower Bound Guide Coverage",
                "description": "Lower bound of the number of guides targeting each element of interest in the library."
              }
            },
            "description": "Filter by lower_bound_guide_coverage",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_insert_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Lower Bound Insert Size",
                "description": "Lower bound of the size of the inserts cloned in vectors in the library."
              }
            },
            "description": "Filter by lower_bound_insert_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by orf_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by orf_list.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.genes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by orf_list.genes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.genes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by orf_list.genes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.genes.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by orf_list.genes.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.orf_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ORF ID",
                "pattern": "^CCSBORF[1-9][0-9]*$",
                "description": "Open reading frame ID."
              }
            },
            "description": "Filter by orf_list.orf_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by orf_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^addgene:\\d{5,6}$",
                "description": "The product or catalog identifier provided following deposition to addgene.org."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Library Construct Scope",
                "enum": [
                  "tile",
                  "exon",
                  "genes",
                  "loci",
                  "genome-wide",
                  "interactors",
                  "alleles",
                  "targeton",
                  "control"
                ],
                "description": "The scope or scale that this construct library is designed to target."
              }
            },
            "description": "Filter by scope",
            "style": "form",
            "explode": true
          },
          {
            "name": "selection_criteria",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Selection Criteria",
              "items": {
                "type": "string",
                "title": "Selection Criterion",
                "enum": [
                  "accessible genome regions",
                  "candidate cis-regulatory elements",
                  "controls",
                  "chromatin states",
                  "phenotype-associated variants",
                  "DNase hypersensitive sites",
                  "genes",
                  "histone modifications",
                  "protein interactors",
                  "random selections",
                  "sequence variants",
                  "synthetic elements",
                  "transcription start sites",
                  "TF binding sites"
                ],
                "description": "The criterion used to select or design the sequence material cloned into the library."
              },
              "description": "The criteria used to select the sequence material cloned into the library."
            },
            "description": "Filter by selection_criteria",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by small_scale_gene_list.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by small_scale_gene_list.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by small_scale_gene_list.synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_loci_list",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Small Scale Loci List",
              "items": {
                "type": "object",
                "title": "Locus",
                "required": [
                  "assembly",
                  "chromosome",
                  "start",
                  "end"
                ],
                "properties": {
                  "start": {
                    "type": "integer",
                    "title": "Start",
                    "minimum": 1,
                    "description": "The 1-based, closed (inclusive) starting coordinate."
                  },
                  "end": {
                    "type": "integer",
                    "title": "End",
                    "minimum": 1,
                    "description": "The 1-based, closed (inclusive) ending coordinate."
                  },
                  "chromosome": {
                    "type": "string",
                    "title": "Chromosome",
                    "pattern": "^(chr[0-9A-Za-z_]+)$",
                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX"
                  },
                  "assembly": {
                    "type": "string",
                    "title": "Mapping assembly",
                    "enum": [
                      "GRCh38",
                      "GRCm39"
                    ],
                    "description": "The genome assembly to which coordinates relate (e.g., GRCh38)."
                  }
                },
                "additionalProperties": false
              },
              "description": "A small scale (<=100) list of specific chromosomal region(s)."
            },
            "description": "Filter by small_scale_loci_list",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sources",
              "items": {
                "type": "string",
                "title": "Source",
                "description": "The originating lab or vendor."
              },
              "description": "The originating lab(s) or vendor(s)."
            },
            "description": "Filter by sources",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeton",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Targeton",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "An identifier in plain text for the specific targeton in an editing template library. The associated gene must be listed in the small_scale_gene_list property."
              }
            },
            "description": "Filter by targeton",
            "style": "form",
            "explode": true
          },
          {
            "name": "tiling_modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Tiling Modality",
                "enum": [
                  "peak tiling",
                  "full tiling",
                  "sparse peaks"
                ],
                "description": "The tiling modality of guides across elements or loci in a CRISPR library."
              }
            },
            "description": "Filter by tiling_modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_guide_coverage",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Upper Bound Guide Coverage",
                "description": "Upper bound of the number of guides targeting each element of interest in the library."
              }
            },
            "description": "Filter by upper_bound_guide_coverage",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_insert_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Upper Bound Insert Size",
                "description": "Upper bound of the size of the inserts cloned in vectors in the library."
              }
            },
            "description": "Filter by upper_bound_insert_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ConstructLibrarySetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConstructLibrarySet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/curated-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the CuratedSet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort CuratedSet items. Supports filtering on fields within CuratedSet items.",
        "operationId": "curated_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "assemblies",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assemblies",
              "items": {
                "type": "string",
                "title": "Assembly"
              },
              "description": "The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38)."
            },
            "description": "Filter by assemblies",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "barcodes",
                  "editing templates",
                  "elements",
                  "external data for catalog",
                  "genome",
                  "genes",
                  "guide RNAs",
                  "primer design",
                  "training data for predictive models",
                  "transcriptome",
                  "variants"
                ],
                "description": "The category that best describes this curated file set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Platform",
                "description": "The measurement device used to produce sequencing data."
              }
            },
            "description": "Filter by files.sequencing_platform",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotations",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Transcriptome Annotations",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation"
              },
              "description": "The annotation versions of the reference resource."
            },
            "description": "Filter by transcriptome_annotations",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "CuratedSetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CuratedSet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/measurement-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the MeasurementSet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort MeasurementSet items. Supports filtering on fields within MeasurementSet items.",
        "operationId": "measurement_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by assay_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_term.assay_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Type",
              "items": {
                "type": "string"
              },
              "description": "A broad categorization of the assay term."
            },
            "description": "Filter by assay_term.assay_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by assay_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by assay_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "auxiliary_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by auxiliary_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "auxiliary_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by auxiliary_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "auxiliary_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by auxiliary_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "auxiliary_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this auxiliary file set."
              }
            },
            "description": "Filter by auxiliary_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "auxiliary_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by auxiliary_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "barcode_replacement_file",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Barcode Replacement File",
                "description": "A file containing original barcodes and the new barcodes used to replace the original barcodes. One common application is to use in preprocessing Parse SPLiT-seq data with the single cell uniform pipeline."
              }
            },
            "description": "Filter by barcode_replacement_file",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by construct_library_sets.small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [
                  "baseline",
                  "control transduction",
                  "low FACS signal",
                  "non-targeting",
                  "pre-selection",
                  "unsorted FACS input",
                  "untransfected",
                  "untreated"
                ],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "external_image_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "External Image URL",
                "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$",
                "description": "Links to the external site where images produced by this measurement are stored."
              }
            },
            "description": "Filter by external_image_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "externally_hosted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Externally Hosted"
              }
            },
            "description": "Filter by externally_hosted",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "experimental data"
                ],
                "description": "The category that best describes this measurement set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.sequencing_platform.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.sequencing_platform.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by files.sequencing_platform.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by functional_assay_mechanisms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by functional_assay_mechanisms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by functional_assay_mechanisms.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "functional_assay_mechanisms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by functional_assay_mechanisms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiome_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Multiome Size",
                "minimum": 2,
                "description": "The number of datasets included in the multiome experiment this measurement set is a part of."
              }
            },
            "description": "Filter by multiome_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "onlist_files",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Onlist Files",
              "items": {
                "type": "string",
                "title": "Onlist File"
              },
              "description": "The barcode region onlist files listed in associated seqspec yaml files."
            },
            "description": "Filter by onlist_files",
            "style": "form",
            "explode": true
          },
          {
            "name": "onlist_method",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Onlist Method",
                "enum": [
                  "no combination",
                  "product",
                  "multi"
                ],
                "description": "The method by which the onlist files will be combined by the seqspec onlist tool to generate the final barcode inclusion list for the single cell uniform pipeline."
              }
            },
            "description": "Filter by onlist_method",
            "style": "form",
            "explode": true
          },
          {
            "name": "preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "enum": [
                  "RNA-seq",
                  "scRNA-seq",
                  "snRNA-seq",
                  "scNT-seq",
                  "scNT-seq2",
                  "scMultiome-NT-seq",
                  "Parse SPLiT-seq",
                  "ATAC-seq",
                  "varACCESS",
                  "ACCESS-ATAC",
                  "scATAC-seq",
                  "scACCESS-ATAC",
                  "snATAC-seq",
                  "10x multiome with scMito-seq",
                  "DOGMA-seq",
                  "10x multiome",
                  "10x multiome with MULTI-seq",
                  "10X ATAC with Scale pre-indexing",
                  "10X RNA with Scale pre-indexing",
                  "MULTI-seq",
                  "SHARE-seq",
                  "Histone ChIP-seq",
                  "TF ChIP-seq",
                  "MPRA",
                  "MPRA (scQer)",
                  "electroporated MPRA",
                  "AAV-MPRA",
                  "lentiMPRA",
                  "STARR-seq",
                  "SUPERSTARR",
                  "Cell painting",
                  "Variant painting via fluorescence",
                  "Variant painting via immunostaining",
                  "smFISH",
                  "MERFISH",
                  "Proliferation CRISPR screen",
                  "Migration CRISPR screen",
                  "CRISPR FlowFISH screen",
                  "CRISPR FACS screen",
                  "CRISPR MACS screen",
                  "CRISPR mCherry screen",
                  "HCR-FlowFISH screen",
                  "scCRISPR screen",
                  "Perturb-seq",
                  "CERES-seq",
                  "TAP-seq",
                  "Variant-EFFECTS",
                  "SGE",
                  "MIAA",
                  "snmC-Seq2",
                  "snMCT-seq",
                  "snM3C-seq",
                  "mN2H",
                  "semi-qY2H",
                  "Y2H",
                  "yN2H",
                  "VAMP-seq",
                  "VAMP-seq (MultiSTEP)",
                  "Hi-C",
                  "HiCAR",
                  "Spatial transcriptomics",
                  "HT-recruit",
                  "ONT dRNA",
                  "ONT Fiber-seq",
                  "ONT direct WGS",
                  "WGS"
                ],
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "primer_designs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Primer Designs",
              "items": {
                "type": "string",
                "title": "Primer Design"
              },
              "description": "The primer designs used in this measurement set."
            },
            "description": "Filter by primer_designs",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for conducting the assay on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "related_multiome_datasets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by related_multiome_datasets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "related_multiome_datasets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by related_multiome_datasets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "related_multiome_datasets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by related_multiome_datasets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_library_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sequencing Library Types",
              "items": {
                "type": "string",
                "title": "Sequencing Library Type",
                "enum": [
                  "direct RNA",
                  "exome capture",
                  "mRNA enriched",
                  "rRNA depleted",
                  "polyA depleted",
                  "polyA enriched"
                ]
              },
              "description": "Description of the libraries sequenced in this measurement set."
            },
            "description": "Filter by sequencing_library_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "strand_specificity",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strand Specificity",
                "enum": [
                  "5 prime to 3 prime",
                  "3 prime to 5 prime",
                  "unstranded"
                ],
                "description": "The strand-specificity of the sequencing results within Perturb-seq, scCRISPR screen, TAP-seq, and CERES-seq assays."
              }
            },
            "description": "Filter by strand_specificity",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by targeted_genes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by targeted_genes.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by targeted_genes.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by targeted_genes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by targeted_genes.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_genes.synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by targeted_genes.synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "MeasurementSetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MeasurementSet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/model-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the ModelSet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort ModelSet items. Supports filtering on fields within ModelSet items.",
        "operationId": "model_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by assessed_genes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by assessed_genes.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by assessed_genes.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by assessed_genes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by assessed_genes.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by assessed_genes.synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "external_input_data",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "External Input Data",
                "description": "A tabular file with links to external data utilized for this model."
              }
            },
            "description": "Filter by external_input_data",
            "style": "form",
            "explode": true
          },
          {
            "name": "externally_hosted",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Externally Hosted"
              }
            },
            "description": "Filter by externally_hosted",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "decision tree",
                  "logistic regression",
                  "neural network",
                  "random forest",
                  "support vector machine",
                  "variant binding effect"
                ],
                "description": "The category that best describes this predictive model set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Platform",
                "description": "The measurement device used to produce sequencing data."
              }
            },
            "description": "Filter by files.sequencing_platform",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by input_file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by input_file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by input_file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by input_file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "model_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Model Name",
                "description": "The custom lab name given to this predictive model set."
              }
            },
            "description": "Filter by model_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "model_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Model Version",
                "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$",
                "description": "The semantic version number for this predictive model set."
              }
            },
            "description": "Filter by model_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "model_zoo_location",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Model Zoo Location",
                "pattern": "^https?://kipoi\\.org/models/(\\S+)$",
                "description": "The link to the model on the Kipoi repository."
              }
            },
            "description": "Filter by model_zoo_location",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "prediction_objects",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Prediction Objects",
              "items": {
                "type": "string",
                "title": "Prediction Object",
                "enum": [
                  "coding variants",
                  "non-coding variants",
                  "all variants",
                  "regulatory elements",
                  "genes"
                ],
                "description": "An object this predictive model set is targeting."
              },
              "description": "The objects this predictive model set is targeting."
            },
            "description": "Filter by prediction_objects",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by software_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.download_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download ID",
                "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used."
              }
            },
            "description": "Filter by software_versions.download_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.software.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by software_versions.software.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.software.source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "description": "An external resource to the codebase."
              }
            },
            "description": "Filter by software_versions.software.source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.software.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by software_versions.software.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.software.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by software_versions.software.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.software.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the software."
              }
            },
            "description": "Filter by software_versions.software.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "description": "An external resource to track the version of the software download."
              }
            },
            "description": "Filter by software_versions.source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by software_versions.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by software_versions.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ModelSetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModelSet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/prediction-sets/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PredictionSet collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PredictionSet items. Supports filtering on fields within PredictionSet items.",
        "operationId": "prediction_sets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by assessed_genes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by assessed_genes.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by assessed_genes.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by assessed_genes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by assessed_genes.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "assessed_genes.synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by assessed_genes.synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.contact_pi.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.contact_pi.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by award.contact_pi.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The grant name from the NIH database, if applicable."
              }
            },
            "description": "Filter by award.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.integrated_content_files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.integrated_content_files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by control_for.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by control_for.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by control_for.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_for.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by control_for.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "control_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Control Type",
                "enum": [],
                "description": "The type of control this file set represents."
              }
            },
            "description": "Filter by control_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summaries",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Summaries",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers."
              },
              "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set."
            },
            "description": "Filter by data_use_limitation_summaries",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^GEO:GSE\\d+$",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
              },
              "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by donors.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "description": "Sex of the donor."
              }
            },
            "description": "Filter by donors.sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain_background",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Background",
                "description": "The specific parent strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain_background",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by donors.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "enum": [
                  "activity level",
                  "binding effect",
                  "functional effect",
                  "pathogenicity",
                  "protein stability"
                ],
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by files.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by files.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by files.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.assembly",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Genome Assembly",
                "description": "Genome assembly applicable for the tabular data."
              }
            },
            "description": "Filter by files.assembly",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.content_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Content Type",
                "description": "The type of content in the file."
              }
            },
            "description": "Filter by files.content_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Boolean value, indicating the file being controlled access, if true."
              }
            },
            "description": "Filter by files.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by files.creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.derived_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Derived From",
              "items": {
                "type": "string",
                "title": "File Derived From"
              },
              "description": "The files participating as inputs into software to produce this output file."
            },
            "description": "Filter by files.derived_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_format",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Format",
                "description": "The file format or extension of the file."
              }
            },
            "description": "Filter by files.file_format",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.file_size",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "File Size",
                "minimum": 0,
                "description": "File size specified in bytes."
              }
            },
            "description": "Filter by files.file_size",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.href",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download URL",
                "description": "The download path to obtain file."
              }
            },
            "description": "Filter by files.href",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.md5sum",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "MD5sum",
                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                "maxLength": 32,
                "description": "The md5sum of the file being transferred."
              }
            },
            "description": "Filter by files.md5sum",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.s3_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "S3 URI",
                "description": "The S3 URI of public file object."
              }
            },
            "description": "Filter by files.s3_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.sequencing_platform",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sequencing Platform",
                "description": "The measurement device used to produce sequencing data."
              }
            },
            "description": "Filter by files.sequencing_platform",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by files.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.submitted_file_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted File Name",
                "description": "Original name of the file."
              }
            },
            "description": "Filter by files.submitted_file_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by files.transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "files.upload_status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Upload Status",
                "description": "The upload/validation status of the file."
              }
            },
            "description": "Filter by files.upload_status",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_file_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input File Sets",
              "items": {
                "type": "string",
                "title": "Input File Set",
                "description": "A file set that serves as input for this file set."
              },
              "description": "The file set(s) required for this prediction set."
            },
            "description": "Filter by input_file_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "input_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input For",
              "items": {
                "type": "string",
                "title": "Input For"
              },
              "description": "The file sets that use this file set as an input."
            },
            "description": "Filter by input_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by large_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by large_scale_gene_list.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by large_scale_gene_list.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by large_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by large_scale_loci_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by large_scale_loci_list.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by large_scale_loci_list.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "large_scale_loci_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by large_scale_loci_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by samples.cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by samples.classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by samples.construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.construct_library_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.construct_library_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by samples.institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by samples.institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by samples.institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by samples.modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by samples.sample_terms.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by samples.sample_terms.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by samples.targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "description": "The species of the organism."
              }
            },
            "description": "Filter by samples.taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by samples.treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by samples.treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by samples.treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by samples.treatments.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by samples.treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples.treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by samples.treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Prediction Scope",
                "enum": [
                  "genes",
                  "loci",
                  "genome-wide"
                ],
                "description": "The scope or scale that this prediction set is designed to target."
              }
            },
            "description": "Filter by scope",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by small_scale_gene_list.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by small_scale_gene_list.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by small_scale_gene_list.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by small_scale_gene_list.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by small_scale_gene_list.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_gene_list.synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by small_scale_gene_list.synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "small_scale_loci_list",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Small Scale Loci List",
              "items": {
                "type": "object",
                "title": "Locus",
                "required": [
                  "assembly",
                  "chromosome",
                  "start",
                  "end"
                ],
                "properties": {
                  "start": {
                    "type": "integer",
                    "title": "Start",
                    "minimum": 1,
                    "description": "The 1-based, closed (inclusive) starting coordinate."
                  },
                  "end": {
                    "type": "integer",
                    "title": "End",
                    "minimum": 1,
                    "description": "The 1-based, closed (inclusive) ending coordinate."
                  },
                  "chromosome": {
                    "type": "string",
                    "title": "Chromosome",
                    "pattern": "^(chr[0-9A-Za-z_]+)$",
                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX"
                  },
                  "assembly": {
                    "type": "string",
                    "title": "Mapping assembly",
                    "enum": [
                      "GRCh38",
                      "GRCm39"
                    ],
                    "description": "The genome assembly to which coordinates relate (e.g., GRCh38)."
                  }
                },
                "additionalProperties": false
              },
              "description": "A small scale (<=100) list of specific chromosomal region(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set."
            },
            "description": "Filter by small_scale_loci_list",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_files_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitted Files Timestamp",
                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created."
              }
            },
            "description": "Filter by submitted_files_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PredictionSetResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PredictionSet"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/genes/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Gene collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Gene items. Supports filtering on fields within Gene items.",
        "operationId": "genes",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External identifier",
                "pattern": "^((ENTREZ:[1-9][0-9]*)|(HGNC:\\d+)|(MGI:\\d+)|(MIM:\\d+)|(UniProtKB:[0-9A-Z]+)|(Vega:OTT[A-Z]+G\\d+)|(miRBase:MI\\d+)|(IMGT/GENE-DB:[0-9A-Za-z/\\(\\)\\-]+)|(RefSeq:[A-Z]{2}_[\\d.]+)|(GeneCards:[0-9a-zA-Z-]+))$",
                "description": "A unique identifier from external resource (e.g. ENTREZ, HGNC, MGI, FlyBase, WormBase, ENSEMBL, MIM, UniProtKB, Vega, miRBase)."
              },
              "description": "Unique identifiers from external resources."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "geneid_with_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID With Version",
                "description": "The ENSEMBL GeneID concatenated with its version number."
              }
            },
            "description": "Filter by geneid_with_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "locations",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Gene Locations",
              "items": {
                "type": "object",
                "title": "Gene Location",
                "required": [
                  "assembly",
                  "chromosome",
                  "start",
                  "end"
                ],
                "properties": {
                  "start": {
                    "type": "integer",
                    "title": "Start",
                    "minimum": 0,
                    "description": "The starting coordinate."
                  },
                  "end": {
                    "type": "integer",
                    "title": "End",
                    "minimum": 0,
                    "description": "The ending coordinate."
                  },
                  "chromosome": {
                    "type": "string",
                    "title": "Chromosome",
                    "pattern": "^(chr[0-9A-Za-z_]+)$",
                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX"
                  },
                  "assembly": {
                    "type": "string",
                    "title": "Mapping Assembly",
                    "enum": [
                      "GRCh38",
                      "hg19",
                      "Cast - GRCm39",
                      "GRCm39",
                      "mm10",
                      "GRCh38, mm10",
                      "custom"
                    ],
                    "description": "The genome assembly to which coordinates relate. e.g. GRCh38."
                  }
                },
                "description": "Gene location specified using 1-based, closed coordinates for a specific version of the reference genome assembly.",
                "additionalProperties": false
              },
              "description": "Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies."
            },
            "description": "Filter by locations",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "The full gene name preferably approved by the official nomenclature."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "study_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Study Sets",
              "items": {
                "type": "string",
                "title": "Study Set",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The study of IGVF that this gene was a part of."
              },
              "description": "The studies of IGVF that this gene was a part of."
            },
            "description": "Filter by study_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string",
                "title": "Synonym",
                "description": "An alternative symbol/name referring to the gene."
              },
              "description": "Alternative symbols that have been used to refer to the gene."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "transcriptome_annotation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Transcriptome Annotation",
                "enum": [
                  "GENCODE 22",
                  "GENCODE 28",
                  "GENCODE 32",
                  "GENCODE 40",
                  "GENCODE 41",
                  "GENCODE 42",
                  "GENCODE 43",
                  "GENCODE 44",
                  "GENCODE 45",
                  "GENCODE 47",
                  "GENCODE Cast - M32",
                  "GENCODE M17",
                  "GENCODE M25",
                  "GENCODE M30",
                  "GENCODE M31",
                  "GENCODE M32",
                  "GENCODE M33",
                  "GENCODE M34",
                  "GENCODE M36",
                  "GENCODE 32, GENCODE M23"
                ],
                "description": "The annotation and version of the reference resource."
              }
            },
            "description": "Filter by transcriptome_annotation",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "version_number",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID Version Number",
                "pattern": "^\\d+?",
                "description": "Current ENSEMBL GeneID version number of the gene."
              }
            },
            "description": "Filter by version_number",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "GeneResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Gene"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/images/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Image collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Image items. Supports filtering on fields within Image items.",
        "operationId": "images",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "caption",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Caption",
                "description": "The caption of the image."
              }
            },
            "description": "Filter by caption",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "download_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download Url",
                "description": "Download Url"
              }
            },
            "description": "Filter by download_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ImageResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Image"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/institutional-certificates/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the InstitutionalCertificate collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort InstitutionalCertificate items. Supports filtering on fields within InstitutionalCertificate items.",
        "operationId": "institutional_certificates",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation",
                "enum": [
                  "DS",
                  "GRU",
                  "HMB",
                  "other"
                ],
                "description": "Code indicating the limitations on data use for data generated from the applicable samples."
              }
            },
            "description": "Filter by data_use_limitation",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "partner_awards",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Partner Awards",
              "items": {
                "type": "string",
                "title": "Partner Award"
              },
              "description": "Awards granted to at least one lab that belongs to same institution as the signing PI and can share this institutional certificate."
            },
            "description": "Filter by partner_awards",
            "style": "form",
            "explode": true
          },
          {
            "name": "partner_labs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Partner Labs",
              "items": {
                "type": "string",
                "title": "Partner Lab"
              },
              "description": "Labs which belong to same institution as the signing PI and can share this institutional certificate."
            },
            "description": "Filter by partner_labs",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Samples",
              "items": {
                "type": "string",
                "title": "Sample"
              },
              "description": "Samples covered by this institutional certificate."
            },
            "description": "Filter by samples",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the institutional certificate."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "urls",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "URL",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An institutional certification form."
              },
              "description": "Link to the institutional certification form."
            },
            "description": "Filter by urls",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "InstitutionalCertificateResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InstitutionalCertificate"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/labs/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Lab collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Lab items. Supports filtering on fields within Lab items.",
        "operationId": "labs",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "awards.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by awards.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "awards.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by awards.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "awards.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[A-Za-z0-9\\-]+$",
                "description": "The official grant number from the NIH database, if applicable"
              }
            },
            "description": "Filter by awards.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "institute_label",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Institute Label",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                "description": "An abbreviation for the institute the lab is associated with."
              }
            },
            "description": "Filter by institute_label",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[a-z0-9\\-]+$",
                "description": "A short unique name for the lab, current convention is lower cased and hyphen delimited of PI's first and last name (e.g. john-doe)."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "pi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "P.I.",
                "description": "Principle Investigator of the lab."
              }
            },
            "description": "Filter by pi",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "current",
                  "deleted",
                  "disabled"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the lab."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "LabResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Lab"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/crispr-modifications/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the CrisprModification collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort CrisprModification items. Supports filtering on fields within CrisprModification items.",
        "operationId": "crispr_modifications",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Activated",
                "description": "A boolean indicating whether the modification has been activated by a chemical agent."
              }
            },
            "description": "Filter by activated",
            "style": "form",
            "explode": true
          },
          {
            "name": "activating_agent_term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Activating Agent Term ID",
                "pattern": "^CHEBI:[0-9]{1,7}$",
                "description": "The CHEBI identifier for the activating agent of the modification."
              }
            },
            "description": "Filter by activating_agent_term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "activating_agent_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Activating Agent Term Name",
                "description": "The CHEBI name for the activating agent of the modification."
              }
            },
            "description": "Filter by activating_agent_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biosamples_modified",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Modified",
              "items": {
                "type": "string",
                "title": "Biosamples Modified"
              },
              "description": "The biosamples which have been modified with this modification."
            },
            "description": "Filter by biosamples_modified",
            "style": "form",
            "explode": true
          },
          {
            "name": "cas",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas",
                "enum": [
                  "Cas9",
                  "Cas12a",
                  "Cas13",
                  "dCas9",
                  "nCas9",
                  "SpG",
                  "SpRY"
                ],
                "description": "The name of the CRISPR associated protein used in the modification."
              }
            },
            "description": "Filter by cas",
            "style": "form",
            "explode": true
          },
          {
            "name": "cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "enum": [
                  "Streptococcus pyogenes (Sp)",
                  "Staphylococcus aureus (Sa)",
                  "Campylobacter jejuni (Cj)",
                  "Neisseria meningitidis (Nm)"
                ],
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "enum": [
                  "2xVP64",
                  "2xVP64-2A-Puro",
                  "2xVP64-2A-Thy1.1",
                  "3xVP64",
                  "ABE8e",
                  "ABE8.20",
                  "ANTI-FLAG",
                  "BE4",
                  "BE4max",
                  "eA3A",
                  "eA3A-T31A",
                  "eA3A-T44D-S45A",
                  "KOX1-KRAB",
                  "M-MLV RT (PE2)",
                  "p300",
                  "TdCBE",
                  "TdCGBE",
                  "TdDE",
                  "VPH",
                  "VP64",
                  "VP64-p65-Rta (VPR)",
                  "ZIM3-KRAB"
                ],
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "enum": [
                  "activation",
                  "base editing",
                  "cutting",
                  "interference",
                  "knockout",
                  "localizing",
                  "prime editing"
                ],
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^addgene:\\d{5,6}$",
                "description": "The product or catalog identifier provided following deposition to addgene.org."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sources",
              "items": {
                "type": "string",
                "title": "Source",
                "description": "The originating lab or vendor."
              },
              "description": "The originating lab(s) or vendor(s)."
            },
            "description": "Filter by sources",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "tagged_proteins",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Tagged Proteins",
              "items": {
                "type": "string",
                "title": "Gene"
              },
              "description": "The tagged proteins in which the Cas nuclease is fused to an antibody."
            },
            "description": "Filter by tagged_proteins",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "CrisprModificationResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CrisprModification"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/degron-modifications/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the DegronModification collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort DegronModification items. Supports filtering on fields within DegronModification items.",
        "operationId": "degron_modifications",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "activated",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Activated",
                "description": "A boolean indicating whether the modification has been activated by a chemical agent."
              }
            },
            "description": "Filter by activated",
            "style": "form",
            "explode": true
          },
          {
            "name": "activating_agent_term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Activating Agent Term ID",
                "pattern": "^CHEBI:[0-9]{1,7}$",
                "description": "The CHEBI identifier for the activating agent of the modification."
              }
            },
            "description": "Filter by activating_agent_term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "activating_agent_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Activating Agent Term Name",
                "description": "The CHEBI name for the activating agent of the modification."
              }
            },
            "description": "Filter by activating_agent_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biosamples_modified",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Modified",
              "items": {
                "type": "string",
                "title": "Biosamples Modified"
              },
              "description": "The biosamples which have been modified with this modification."
            },
            "description": "Filter by biosamples_modified",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "enum": [
                  "AID",
                  "AlissAid",
                  "ssAID"
                ],
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "enum": [
                  "degradation"
                ],
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^addgene:\\d{5,6}$",
                "description": "The product or catalog identifier provided following deposition to addgene.org."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sources",
              "items": {
                "type": "string",
                "title": "Source",
                "description": "The originating lab or vendor."
              },
              "description": "The originating lab(s) or vendor(s)."
            },
            "description": "Filter by sources",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "tagged_proteins",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Tagged Proteins",
              "items": {
                "type": "string",
                "title": "Gene"
              },
              "description": "The tagged proteins which are targeted for degradation."
            },
            "description": "Filter by tagged_proteins",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "DegronModificationResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DegronModification"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assay-terms/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the AssayTerm collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort AssayTerm items. Supports filtering on fields within AssayTerm items.",
        "operationId": "assay_terms",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "ancestors",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ancestors",
              "items": {
                "type": "string"
              },
              "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified."
            },
            "description": "Filter by ancestors",
            "style": "form",
            "explode": true
          },
          {
            "name": "assay_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Type",
              "items": {
                "type": "string"
              },
              "description": "A broad categorization of the assay term."
            },
            "description": "Filter by assay_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "category_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Category",
              "items": {
                "type": "string"
              },
              "description": "The type of feature or interaction measured by the assay."
            },
            "description": "Filter by category_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "comments",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Comments",
              "items": {
                "type": "string"
              },
              "description": "Comment for the term that was recorded in an ontology."
            },
            "description": "Filter by comments",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "definition",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Definition",
                "description": "Definition for the term that was recorded in an ontology."
              }
            },
            "description": "Filter by definition",
            "style": "form",
            "explode": true
          },
          {
            "name": "deprecated_ntr_terms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Deprecated NTR terms",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^NTR:[0-9]{2,8}$",
                "description": "NTR term ID"
              },
              "description": "A list of deprecated NTR terms previously associated with this ontology term."
            },
            "description": "Filter by deprecated_ntr_terms",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "is_a",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Is A",
              "items": {
                "type": "string",
                "title": "Ontology Term"
              },
              "description": "A list of ontology terms which are the nearest ancestor to this ontology term."
            },
            "description": "Filter by is_a",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for the ontology term, reformatted from the original term ID."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "objective_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Assay Objective",
              "items": {
                "type": "string"
              },
              "description": "The purpose of the assay."
            },
            "description": "Filter by objective_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "ontology",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Ontology",
                "description": "The ontology in which the term is recorded."
              }
            },
            "description": "Filter by ontology",
            "style": "form",
            "explode": true
          },
          {
            "name": "preferred_assay_titles",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Preferred Assay Titles",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "enum": [
                  "RNA-seq",
                  "scRNA-seq",
                  "snRNA-seq",
                  "scNT-seq",
                  "scNT-seq2",
                  "scMultiome-NT-seq",
                  "Parse SPLiT-seq",
                  "ATAC-seq",
                  "varACCESS",
                  "ACCESS-ATAC",
                  "scATAC-seq",
                  "scACCESS-ATAC",
                  "snATAC-seq",
                  "10x multiome with scMito-seq",
                  "DOGMA-seq",
                  "10x multiome",
                  "10x multiome with MULTI-seq",
                  "10X ATAC with Scale pre-indexing",
                  "10X RNA with Scale pre-indexing",
                  "MULTI-seq",
                  "SHARE-seq",
                  "Histone ChIP-seq",
                  "TF ChIP-seq",
                  "MPRA",
                  "MPRA (scQer)",
                  "electroporated MPRA",
                  "AAV-MPRA",
                  "lentiMPRA",
                  "STARR-seq",
                  "SUPERSTARR",
                  "Cell painting",
                  "Variant painting via fluorescence",
                  "Variant painting via immunostaining",
                  "smFISH",
                  "MERFISH",
                  "Proliferation CRISPR screen",
                  "Migration CRISPR screen",
                  "CRISPR FlowFISH screen",
                  "CRISPR FACS screen",
                  "CRISPR MACS screen",
                  "CRISPR mCherry screen",
                  "HCR-FlowFISH screen",
                  "scCRISPR screen",
                  "Perturb-seq",
                  "CERES-seq",
                  "TAP-seq",
                  "Variant-EFFECTS",
                  "SGE",
                  "MIAA",
                  "snmC-Seq2",
                  "snMCT-seq",
                  "snM3C-seq",
                  "mN2H",
                  "semi-qY2H",
                  "Y2H",
                  "yN2H",
                  "VAMP-seq",
                  "VAMP-seq (MultiSTEP)",
                  "Hi-C",
                  "HiCAR",
                  "Spatial transcriptomics",
                  "HT-recruit",
                  "ONT dRNA",
                  "ONT Fiber-seq",
                  "ONT direct WGS",
                  "WGS"
                ],
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              },
              "description": "The custom lab preferred labels that this assay term may be associated with."
            },
            "description": "Filter by preferred_assay_titles",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string"
              },
              "description": "Synonyms for the term that have been recorded in an ontology."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^(OBI|NTR):[0-9]{2,8}$",
                "description": "An ontology term identifier describing an assay."
              }
            },
            "description": "Filter by term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AssayTermResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssayTerm"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/phenotype-terms/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PhenotypeTerm collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PhenotypeTerm items. Supports filtering on fields within PhenotypeTerm items.",
        "operationId": "phenotype_terms",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "ancestors",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ancestors",
              "items": {
                "type": "string"
              },
              "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified."
            },
            "description": "Filter by ancestors",
            "style": "form",
            "explode": true
          },
          {
            "name": "comments",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Comments",
              "items": {
                "type": "string"
              },
              "description": "Comment for the term that was recorded in an ontology."
            },
            "description": "Filter by comments",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "definition",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Definition",
                "description": "Definition for the term that was recorded in an ontology."
              }
            },
            "description": "Filter by definition",
            "style": "form",
            "explode": true
          },
          {
            "name": "deprecated_ntr_terms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Deprecated NTR terms",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^NTR:[0-9]{2,8}$",
                "description": "NTR term ID"
              },
              "description": "A list of deprecated NTR terms previously associated with this ontology term."
            },
            "description": "Filter by deprecated_ntr_terms",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "is_a",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Is A",
              "items": {
                "type": "string",
                "title": "Ontology Term"
              },
              "description": "A list of ontology terms which are the nearest ancestor to this ontology term."
            },
            "description": "Filter by is_a",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for the ontology term, reformatted from the original term ID."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "ontology",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Ontology",
                "description": "The ontology in which the term is recorded."
              }
            },
            "description": "Filter by ontology",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string"
              },
              "description": "Synonyms for the term that have been recorded in an ontology."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhenotypeTermResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PhenotypeTerm"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/platform-terms/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PlatformTerm collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PlatformTerm items. Supports filtering on fields within PlatformTerm items.",
        "operationId": "platform_terms",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "ancestors",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ancestors",
              "items": {
                "type": "string"
              },
              "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified."
            },
            "description": "Filter by ancestors",
            "style": "form",
            "explode": true
          },
          {
            "name": "comments",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Comments",
              "items": {
                "type": "string"
              },
              "description": "Comment for the term that was recorded in an ontology."
            },
            "description": "Filter by comments",
            "style": "form",
            "explode": true
          },
          {
            "name": "company",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Company",
                "enum": [
                  "10X Genomics",
                  "Element Biosciences",
                  "Illumina",
                  "Life Technologies",
                  "Oxford Nanopore Technologies",
                  "Pacific Biosciences",
                  "Parse Biosciences",
                  "Roche",
                  "Singular Genomics"
                ],
                "description": "The company that developed and sells the instrument."
              }
            },
            "description": "Filter by company",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "definition",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Definition",
                "description": "Definition for the term that was recorded in an ontology."
              }
            },
            "description": "Filter by definition",
            "style": "form",
            "explode": true
          },
          {
            "name": "deprecated_ntr_terms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Deprecated NTR terms",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^NTR:[0-9]{2,8}$",
                "description": "NTR term ID"
              },
              "description": "A list of deprecated NTR terms previously associated with this ontology term."
            },
            "description": "Filter by deprecated_ntr_terms",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "is_a",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Is A",
              "items": {
                "type": "string",
                "title": "Ontology Term"
              },
              "description": "A list of ontology terms which are the nearest ancestor to this ontology term."
            },
            "description": "Filter by is_a",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for the ontology term, reformatted from the original term ID."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "ontology",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Ontology",
                "description": "The ontology in which the term is recorded."
              }
            },
            "description": "Filter by ontology",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "sequencing_kits",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sequencing Kits",
              "items": {
                "type": "string",
                "title": "Sequencing Kit",
                "enum": [
                  "AVITI 2x75 Sequencing Kit Cloudbreak High Output",
                  "AVITI 2x150 Sequencing Kit Cloudbreak High Output",
                  "HiSeq SBS Kit v4",
                  "HiSeq SR Cluster Kit v4-cBot-HS",
                  "HiSeq PE Cluster Kit v4-cBot-HS",
                  "HiSeq SR Rapid Cluster Kit v2",
                  "HiSeq PE Rapid Cluster Kit v2",
                  "HiSeq Rapid SBS Kit v2",
                  "HiSeq 3000/4000 SBS Kit",
                  "HiSeq 3000/4000 SR Cluster Kit",
                  "HiSeq 3000/4000 PE Cluster Kit",
                  "MiSeq Reagent Kit v2",
                  "NextSeq 500 Mid Output Kit",
                  "NextSeq 500 High Output Kit",
                  "NextSeq 500 Mid Output v2 Kit",
                  "NextSeq 500 High Output v2 Kit",
                  "NextSeq 500/550 Mid-Output v2.5 Kit",
                  "NextSeq 500/550 High-Output v2.5 Kit",
                  "TG NextSeq 500/550 Mid-Output Kit v2.5",
                  "TG NextSeq 500/550 High-Output Kit v2.5",
                  "NextSeq 1000/2000 P1 Reagent Kit",
                  "NextSeq 1000/2000 P2 Reagent Kit",
                  "NextSeq 1000/2000 P3 Reagent Kit",
                  "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                  "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                  "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                  "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                  "NovaSeq 6000 SP Reagent Kit v1.5",
                  "NovaSeq 6000 S1 Reagent Kit v1.5",
                  "NovaSeq 6000 S2 Reagent Kit v1.5",
                  "NovaSeq 6000 S4 Reagent Kit v1.5",
                  "NovaSeq X Series 1.5B Reagent Kit",
                  "NovaSeq X Series 10B Reagent Kit",
                  "NovaSeq X Series 25B Reagent Kit",
                  "ONT Ligation Sequencing Kit V14",
                  "Sequel sequencing kit 3.0",
                  "Sequel II sequencing kit 2.0",
                  "Singular G4 F2 Reagent Kit"
                ],
                "description": "A reagent kit used with a library to prepare it for sequencing."
              },
              "description": "The available sequencing kits for this platform."
            },
            "description": "Filter by sequencing_kits",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string"
              },
              "description": "Synonyms for the term that have been recorded in an ontology."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^(EFO|NTR):[0-9]{2,8}$",
                "description": "An ontology term identifier describing a platform."
              }
            },
            "description": "Filter by term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PlatformTermResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PlatformTerm"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sample-terms/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SampleTerm collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SampleTerm items. Supports filtering on fields within SampleTerm items.",
        "operationId": "sample_terms",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "ancestors",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ancestors",
              "items": {
                "type": "string"
              },
              "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified."
            },
            "description": "Filter by ancestors",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Cell",
              "items": {
                "type": "string"
              },
              "description": "Cells associated with the sample term."
            },
            "description": "Filter by cell_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "comments",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Comments",
              "items": {
                "type": "string"
              },
              "description": "Comment for the term that was recorded in an ontology."
            },
            "description": "Filter by comments",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((Cellosaurus:CVCL_\\w{4})|(DepMap:ACH-[0-9]{6}))$",
                "description": "An identifier from external resource."
              },
              "description": "Sample identifiers from external resources, such as Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "definition",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Definition",
                "description": "Definition for the term that was recorded in an ontology."
              }
            },
            "description": "Filter by definition",
            "style": "form",
            "explode": true
          },
          {
            "name": "deprecated_ntr_terms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Deprecated NTR terms",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^NTR:[0-9]{2,8}$",
                "description": "NTR term ID"
              },
              "description": "A list of deprecated NTR terms previously associated with this ontology term."
            },
            "description": "Filter by deprecated_ntr_terms",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "developmental_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Developmental Slims",
              "items": {
                "type": "string"
              },
              "description": "Developmental stages associated with the sample term."
            },
            "description": "Filter by developmental_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "is_a",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Is A",
              "items": {
                "type": "string",
                "title": "Ontology Term"
              },
              "description": "A list of ontology terms which are the nearest ancestor to this ontology term."
            },
            "description": "Filter by is_a",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for the ontology term, reformatted from the original term ID."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "ontology",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Ontology",
                "description": "The ontology in which the term is recorded."
              }
            },
            "description": "Filter by ontology",
            "style": "form",
            "explode": true
          },
          {
            "name": "organ_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Organ",
              "items": {
                "type": "string"
              },
              "description": "Organs associated with the sample term."
            },
            "description": "Filter by organ_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the ontology term."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "synonyms",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Synonyms",
              "items": {
                "type": "string"
              },
              "description": "Synonyms for the term that have been recorded in an ontology."
            },
            "description": "Filter by synonyms",
            "style": "form",
            "explode": true
          },
          {
            "name": "system_slims",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "System Slims",
              "items": {
                "type": "string"
              },
              "description": "Organ systems associated with the sample term."
            },
            "description": "Filter by system_slims",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term ID",
                "pattern": "^(UBERON|EFO|CL|CLO|NTR):[0-9]{2,8}$",
                "description": "An ontology identifier describing a biological sample"
              }
            },
            "description": "Filter by term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SampleTermResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SampleTerm"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/open-reading-frames/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the OpenReadingFrame collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort OpenReadingFrame items. Supports filtering on fields within OpenReadingFrame items.",
        "operationId": "open_reading_frames",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^(hORFeome:[1-9][0-9]*)$",
                "description": "A unique identifier from hORFeome database."
              },
              "description": "Unique identifiers from the hORFeome database"
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "genes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by genes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "genes.geneid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL GeneID",
                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix."
              }
            },
            "description": "Filter by genes.geneid",
            "style": "form",
            "explode": true
          },
          {
            "name": "genes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by genes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "genes.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by genes.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "orf_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ORF ID",
                "pattern": "^CCSBORF[1-9][0-9]*$",
                "description": "Open reading frame ID."
              }
            },
            "description": "Filter by orf_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "pct_coverage_orf",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage of Ensembl Protein Covered by ORF",
                "minimum": 0,
                "maximum": 100,
                "description": "The percentage of Ensembl protein covered by ORF."
              }
            },
            "description": "Filter by pct_coverage_orf",
            "style": "form",
            "explode": true
          },
          {
            "name": "pct_coverage_protein",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage of ORF Covered by Ensembl Protein",
                "minimum": 0,
                "maximum": 100,
                "description": "The percentage of ORF covered by Ensembl protein."
              }
            },
            "description": "Filter by pct_coverage_protein",
            "style": "form",
            "explode": true
          },
          {
            "name": "pct_identical_protein",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage of Identical Matches to Ensembl Protein",
                "minimum": 0,
                "maximum": 100,
                "description": "The percentage of identical matches to Ensembl protein."
              }
            },
            "description": "Filter by pct_identical_protein",
            "style": "form",
            "explode": true
          },
          {
            "name": "protein_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ENSEMBL ProteinID",
                "pattern": "^ENSP\\d{11}.?\\d*?$",
                "description": "ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix."
              }
            },
            "description": "Filter by protein_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "OpenReadingFrameResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OpenReadingFrame"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/pages/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Page collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Page items. Supports filtering on fields within Page items.",
        "operationId": "pages",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Award",
                "description": "Grant associated with the submission."
              }
            },
            "description": "Filter by award",
            "style": "form",
            "explode": true
          },
          {
            "name": "canonical_uri",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Canonical URI",
                "description": "The path of the page."
              }
            },
            "description": "Filter by canonical_uri",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lab",
                "description": "Lab associated with the submission."
              }
            },
            "description": "Filter by lab",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[a-z0-9_-]+$",
                "description": "The name shown in this page's URL."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Parent Page",
                "description": "The parent page associated with this page."
              }
            },
            "description": "Filter by parent",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The name shown in the browser's title bar and tabs."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PageResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Page"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/phenotypic-features/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PhenotypicFeature collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PhenotypicFeature items. Supports filtering on fields within PhenotypicFeature items.",
        "operationId": "phenotypic_features",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "feature.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by feature.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "feature.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by feature.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "feature.term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Phenotype Term ID",
                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                "description": "An ontology term identifier describing a phenotype."
              }
            },
            "description": "Filter by feature.term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "feature.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by feature.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "observation_date",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Observation Date",
                "description": "The date the feature was observed or measured."
              }
            },
            "description": "Filter by observation_date",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Quality",
                "enum": [
                  "none",
                  "sparse",
                  "moderate",
                  "frequent",
                  "unknown",
                  "I",
                  "II",
                  "III",
                  "IV",
                  "V",
                  "VI",
                  "2/2",
                  "2/3",
                  "2/4",
                  "3/3",
                  "3/4",
                  "4/4"
                ],
                "description": "A quality assessment associated with the phenotypic feature, such as a categorical description."
              }
            },
            "description": "Filter by quality",
            "style": "form",
            "explode": true
          },
          {
            "name": "quantity",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Quantity",
                "description": "A quantity associated with the phenotypic feature, if applicable."
              }
            },
            "description": "Filter by quantity",
            "style": "form",
            "explode": true
          },
          {
            "name": "quantity_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Quantity Units",
                "enum": [
                  "meter",
                  "micromole",
                  "nanogram",
                  "microgram",
                  "milligram",
                  "gram",
                  "kilogram",
                  "milli-International Unit per milliliter",
                  "picogram per milliliter",
                  "nanogram per milliliter",
                  "milligram per deciliter",
                  "UPDRS",
                  "MMSE"
                ],
                "description": "The unit of measurement for a quantity associated with the phenotypic feature."
              }
            },
            "description": "Filter by quantity_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhenotypicFeatureResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PhenotypicFeature"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/publications/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Publication collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Publication items. Supports filtering on fields within Publication items.",
        "operationId": "publications",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "abstract",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Abstract",
                "description": "Abstract of the publication or communication."
              }
            },
            "description": "Filter by abstract",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "authors",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Authors",
                "description": "The authors of the publication."
              }
            },
            "description": "Filter by authors",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_published",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Publication Date",
                "description": "The date the publication or communication was published; must be in YYYY-MM-DD format."
              }
            },
            "description": "Filter by date_published",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_revised",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Revised",
                "description": "The date the publication was revised."
              }
            },
            "description": "Filter by date_revised",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Donors",
              "items": {
                "type": "string",
                "title": "Donor"
              },
              "description": "The donors associated with this publication."
            },
            "description": "Filter by donors",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "File Sets",
              "items": {
                "type": "string",
                "title": "File Set"
              },
              "description": "The file sets associated with this publication."
            },
            "description": "Filter by file_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "issue",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Issue",
                "description": "The issue of the publication."
              }
            },
            "description": "Filter by issue",
            "style": "form",
            "explode": true
          },
          {
            "name": "journal",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Journal",
                "description": "The journal of the publication."
              }
            },
            "description": "Filter by journal",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Page",
                "description": "Pagination of the reference"
              }
            },
            "description": "Filter by page",
            "style": "form",
            "explode": true
          },
          {
            "name": "publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publication_year",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Publication Year",
                "description": "The year the publication was published."
              }
            },
            "description": "Filter by publication_year",
            "style": "form",
            "explode": true
          },
          {
            "name": "published_by",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Published By",
              "items": {
                "type": "string",
                "title": "Published By",
                "enum": [
                  "community",
                  "IGVF",
                  "ENCODE"
                ]
              },
              "description": "The affiliation of the lab with a larger organization, such as IGVF."
            },
            "description": "Filter by published_by",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "samples",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Samples",
              "items": {
                "type": "string",
                "title": "Sample"
              },
              "description": "The samples associated with this publication."
            },
            "description": "Filter by samples",
            "style": "form",
            "explode": true
          },
          {
            "name": "software",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Software",
              "items": {
                "type": "string",
                "title": "Software"
              },
              "description": "The software associated with this publication."
            },
            "description": "Filter by software",
            "style": "form",
            "explode": true
          },
          {
            "name": "software_versions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Software Versions",
              "items": {
                "type": "string",
                "title": "Software Version"
              },
              "description": "The software versions associated with this publication."
            },
            "description": "Filter by software_versions",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the publication."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "Title of the publication or communication."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "volume",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Volume",
                "description": "The volume of the publication."
              }
            },
            "description": "Filter by volume",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflows",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Workflows",
              "items": {
                "type": "string",
                "title": "Workflow"
              },
              "description": "The workflows associated with this publication."
            },
            "description": "Filter by workflows",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PublicationResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Publication"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mpra-quality-metrics/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the MpraQualityMetric collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort MpraQualityMetric items. Supports filtering on fields within MpraQualityMetric items.",
        "operationId": "mpra_quality_metrics",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the quality metric."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "fraction_assigned_oligos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Fraction Of Assigned Oligos",
                "description": "Fraction of assigned tested sequences in mapping to determine if the library during the assignment step was sufficiently recovered."
              }
            },
            "description": "Filter by fraction_assigned_oligos",
            "style": "form",
            "explode": true
          },
          {
            "name": "fraction_oligos_passing",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Fraction Of Oligos Passing Filters",
                "description": "Fraction of tested sequences that passed filtering of the mappable sequences to determine if the designed library was sufficiently recovered. Value is the median of all replicates."
              }
            },
            "description": "Filter by fraction_oligos_passing",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "median_assigned_barcodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Median Number Of Assigned Barcodes",
                "description": "Median number of barcodes assigned to tested sequences in mapping as a quality control measure for the assignment step, whether there is sufficient barcode to oligo coverage."
              }
            },
            "description": "Filter by median_assigned_barcodes",
            "style": "form",
            "explode": true
          },
          {
            "name": "median_barcodes_passing_filtering",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Median Barcodes Passing Filtering",
                "description": "Median number of barcodes across tested sequences that passed filtering to determine if there was sufficient barcode to oligo coverage. Value is the median of all replicates."
              }
            },
            "description": "Filter by median_barcodes_passing_filtering",
            "style": "form",
            "explode": true
          },
          {
            "name": "median_rna_read_count",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Median RNA Read Count",
                "description": "Median of RNA read count for oligos that passed filtering to determine sufficient coverage in terms of read count. Value is the median of all replicates."
              }
            },
            "description": "Filter by median_rna_read_count",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "pearson_correlation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Pearson Correlation",
                "description": "The correlation of log2 RNA/DNA ratios across tested sequences as a measure of replicable activity signal. Value is the median of replicate comparisons using only oligos with >= 10 barcodes."
              }
            },
            "description": "Filter by pearson_correlation",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metric_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metric Of",
              "items": {
                "type": "string",
                "title": "Quality Metric Of"
              },
              "description": "The file(s) to which this quality metric applies."
            },
            "description": "Filter by quality_metric_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the quality metric."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "MpraQualityMetricResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MpraQualityMetric"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/perturb-seq-quality-metrics/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PerturbSeqQualityMetric collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PerturbSeqQualityMetric items. Supports filtering on fields within PerturbSeqQualityMetric items.",
        "operationId": "perturb_seq_quality_metrics",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alignment_percentage",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Alignment Percentage",
                "description": "Alignment percentage (p_pseudoaligned) reported by Kallisto."
              }
            },
            "description": "Filter by alignment_percentage",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the quality metric."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "avg_cells_per_target",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Average Cells Per Target",
                "description": "Average Cells Per Target"
              }
            },
            "description": "Filter by avg_cells_per_target",
            "style": "form",
            "explode": true
          },
          {
            "name": "avg_umis_per_cell",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Average UMIs Per Cell",
                "description": "Average UMIs Per Cell"
              }
            },
            "description": "Filter by avg_umis_per_cell",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "guide_diversity",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Guide Diversity",
                "description": "Guide diversity (Gini index)"
              }
            },
            "description": "Filter by guide_diversity",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "mean_mitochondrial_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Mean Mitochondrial Reads",
                "description": "Mean mitochondrial reads."
              }
            },
            "description": "Filter by mean_mitochondrial_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "description": "Multiplicity Of Infection"
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "paired_reads_mapped",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Paired Reads Mapped",
                "description": "Paired reads mapped (n_pseudoaligned) reported by Kallisto."
              }
            },
            "description": "Filter by paired_reads_mapped",
            "style": "form",
            "explode": true
          },
          {
            "name": "pct_cells_assigned_guide",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percent Cells Assigned Guide",
                "description": "Percent Cells Assigned Guide"
              }
            },
            "description": "Filter by pct_cells_assigned_guide",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metric_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metric Of",
              "items": {
                "type": "string",
                "title": "Quality Metric Of"
              },
              "description": "The file(s) to which this quality metric applies."
            },
            "description": "Filter by quality_metric_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the quality metric."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_cells_passing_filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total Cells Passing Filters",
                "description": "Total Cells Passing Filters"
              }
            },
            "description": "Filter by total_cells_passing_filters",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_detected_scrna_barcodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total Detected scRNA Barcodes",
                "description": "Unfiltered total detected scRNA barcodes (numBarcodes) reported by Kallisto."
              }
            },
            "description": "Filter by total_detected_scrna_barcodes",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_guides",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total Guides",
                "description": "Total Guides"
              }
            },
            "description": "Filter by total_guides",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total Reads",
                "description": "Total reads (n_processed) reported by Kallisto."
              }
            },
            "description": "Filter by total_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_targets",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total Targets",
                "description": "Total Targets"
              }
            },
            "description": "Filter by total_targets",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PerturbSeqQualityMetricResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PerturbSeqQualityMetric"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/single-cell-atac-seq-quality-metrics/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SingleCellAtacSeqQualityMetric collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SingleCellAtacSeqQualityMetric items. Supports filtering on fields within SingleCellAtacSeqQualityMetric items.",
        "operationId": "single_cell_atac_seq_quality_metrics",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the quality metric."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "multi_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multi-Mappings",
                "description": "Number of fragments mappig in multiple locations in the genome."
              }
            },
            "description": "Filter by multi_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_barcodes_on_onlist",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Barcodes On Onlist",
                "description": "Barcodes matching the expected list of valid barcodes."
              }
            },
            "description": "Filter by n_barcodes_on_onlist",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_candidates",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Candidates",
                "description": "Potential mapping locations considered during alignment."
              }
            },
            "description": "Filter by n_candidates",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_corrected_barcodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Corrected Barcodes",
                "description": "Barcodes adjusted to match valid entries in the onlist."
              }
            },
            "description": "Filter by n_corrected_barcodes",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_mapped_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Mapped Reads",
                "description": "Reads successfully aligned to the reference genome."
              }
            },
            "description": "Filter by n_mapped_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Mappings",
                "description": "Total successful alignments, including multiple mappings per read."
              }
            },
            "description": "Filter by n_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_multi_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Multi-Mappings",
                "description": "Total alignments where reads map to multiple locations."
              }
            },
            "description": "Filter by n_multi_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_output_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Output Mappings",
                "description": "Final count of fragments after deduplication and filtering."
              }
            },
            "description": "Filter by n_output_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads",
                "description": "Total count of sequencing reads processed."
              }
            },
            "description": "Filter by n_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_reads_with_multi_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads With Multi-Mappings",
                "description": "Reads aligned to multiple locations in the genome."
              }
            },
            "description": "Filter by n_reads_with_multi_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_uni_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Uni-Mappings",
                "description": "Total alignments where reads map to a single location."
              }
            },
            "description": "Filter by n_uni_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_uniquely_mapped_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Uniquely Mapped Reads",
                "description": "Reads aligned to a single location in the genome."
              }
            },
            "description": "Filter by n_uniquely_mapped_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "pct_duplicates",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percent Duplicates",
                "description": ""
              }
            },
            "description": "Filter by pct_duplicates",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metric_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metric Of",
              "items": {
                "type": "string",
                "title": "Quality Metric Of"
              },
              "description": "The file(s) to which this quality metric applies."
            },
            "description": "Filter by quality_metric_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the quality metric."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "total",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total",
                "description": "Sum of uni-mappings and multi-mappings."
              }
            },
            "description": "Filter by total",
            "style": "form",
            "explode": true
          },
          {
            "name": "uni_mappings",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Uni-Mappings",
                "description": "Number of fragments mapping to single location in the genome."
              }
            },
            "description": "Filter by uni_mappings",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SingleCellAtacSeqQualityMetricResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SingleCellAtacSeqQualityMetric"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/single-cell-rna-seq-quality-metrics/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SingleCellRnaSeqQualityMetric collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SingleCellRnaSeqQualityMetric items. Supports filtering on fields within SingleCellRnaSeqQualityMetric items.",
        "operationId": "single_cell_rna_seq_quality_metrics",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the quality metric."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "gt_records",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Good-Toulmin Estimation Records",
                "description": "Number of BUS records for Good-Toulmin estimation."
              }
            },
            "description": "Filter by gt_records",
            "style": "form",
            "explode": true
          },
          {
            "name": "index_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Kallisto Index Version",
                "description": "Version of Kallisto index command used for building the transcriptome index."
              }
            },
            "description": "Filter by index_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "kmer_length",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "K-mer Length",
                "description": "Length of k-mers used for building the transcriptome index."
              }
            },
            "description": "Filter by kmer_length",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "mean_reads_per_barcode",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Mean Reads Per Barcode",
                "description": "Mean number of reads per cell barcode."
              }
            },
            "description": "Filter by mean_reads_per_barcode",
            "style": "form",
            "explode": true
          },
          {
            "name": "mean_umis_per_barcode",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Mean UMIs Per Barcode",
                "description": "Mean number of UMIs per cell barcode."
              }
            },
            "description": "Filter by mean_umis_per_barcode",
            "style": "form",
            "explode": true
          },
          {
            "name": "median_reads_per_barcode",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Median Reads Per Barcode",
                "description": "Median number of reads per cell barcode."
              }
            },
            "description": "Filter by median_reads_per_barcode",
            "style": "form",
            "explode": true
          },
          {
            "name": "median_umis_per_barcode",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Median UMIs Per Barcode",
                "description": "Median number of UMIs per cell barcode."
              }
            },
            "description": "Filter by median_umis_per_barcode",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_barcode_umis",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Barcode UMIs",
                "description": "Total number of UMIs associated with cell barcodes."
              }
            },
            "description": "Filter by n_barcode_umis",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_barcodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Barcodes",
                "description": "Total number of valid cell barcodes detected."
              }
            },
            "description": "Filter by n_barcodes",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_bootstraps",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Bootstrap Iterations",
                "description": "Number of bootstrap iterations used to estimate expression uncertainty."
              }
            },
            "description": "Filter by n_bootstraps",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_processed",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads Processed",
                "description": "Number of valid reads processed by Kallisto."
              }
            },
            "description": "Filter by n_processed",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_pseudoaligned",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads Pseudoaligned",
                "description": "Number of reads that could be pseudoaligned to the transcriptome index."
              }
            },
            "description": "Filter by n_pseudoaligned",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_reads",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads",
                "description": "Total number of input reads."
              }
            },
            "description": "Filter by n_reads",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_records",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Records",
                "description": "Number of records in BUS file."
              }
            },
            "description": "Filter by n_records",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_targets",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Target Sequences",
                "description": "Total number of target sequences (e.g., transcripts) in the index."
              }
            },
            "description": "Filter by n_targets",
            "style": "form",
            "explode": true
          },
          {
            "name": "n_unique",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads Uniquely Pseudoaligned",
                "description": "Number of reads that could be pseudoaligned to a unique target sequence."
              }
            },
            "description": "Filter by n_unique",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "num_barcodes_on_onlist",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Barcodes On Onlist",
                "description": "Number of cell barcodes matching an expected list of barcodes (onlist)."
              }
            },
            "description": "Filter by num_barcodes_on_onlist",
            "style": "form",
            "explode": true
          },
          {
            "name": "num_reads_on_onlist",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Number Of Reads On Onlist",
                "description": "Number of reads associated with barcodes on the onlist."
              }
            },
            "description": "Filter by num_reads_on_onlist",
            "style": "form",
            "explode": true
          },
          {
            "name": "p_pseudoaligned",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage Of Reads Pseudoaligned",
                "description": "Percentage of reads that could be pseudoaligned to the transcriptome index."
              }
            },
            "description": "Filter by p_pseudoaligned",
            "style": "form",
            "explode": true
          },
          {
            "name": "p_unique",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage Of Reads Uniquely Pseudoaligned",
                "description": "Percentage of reads that could be pseudoaligned to a unique target sequence."
              }
            },
            "description": "Filter by p_unique",
            "style": "form",
            "explode": true
          },
          {
            "name": "percentage_barcodes_on_onlist",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage Of Barcodes On Onlist",
                "description": "Percentage of cell barcodes matching an expected list of barcodes (onlist)."
              }
            },
            "description": "Filter by percentage_barcodes_on_onlist",
            "style": "form",
            "explode": true
          },
          {
            "name": "percentage_reads_on_onlist",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Percentage Of Reads On Onlist",
                "description": "Percentage of reads associated with barcodes on the onlist."
              }
            },
            "description": "Filter by percentage_reads_on_onlist",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metric_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metric Of",
              "items": {
                "type": "string",
                "title": "Quality Metric Of"
              },
              "description": "The file(s) to which this quality metric applies."
            },
            "description": "Filter by quality_metric_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the quality metric."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "total_umis",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Total UMIs",
                "description": "Total number of UMIs detected."
              }
            },
            "description": "Filter by total_umis",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SingleCellRnaSeqQualityMetricResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SingleCellRnaSeqQualityMetric"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/starr-seq-quality-metrics/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the StarrSeqQualityMetric collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort StarrSeqQualityMetric items. Supports filtering on fields within StarrSeqQualityMetric items.",
        "operationId": "starr_seq_quality_metrics",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_step_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Analysis Step Version",
                "description": "The analysis step version of the quality metric."
              }
            },
            "description": "Filter by analysis_step_version",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "coverage",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Coverage",
                "description": "Coverage of the library."
              }
            },
            "description": "Filter by coverage",
            "style": "form",
            "explode": true
          },
          {
            "name": "coverage_per_basepair",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Coverage Per Basepair",
                "description": "Coverage at basepair level."
              }
            },
            "description": "Filter by coverage_per_basepair",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "quality_metric_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Quality Metric Of",
              "items": {
                "type": "string",
                "title": "Quality Metric Of"
              },
              "description": "The file(s) to which this quality metric applies."
            },
            "description": "Filter by quality_metric_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "rna_correlation_in_peaks",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Correlation Of RNA In Peaks",
                "description": "Correlation of RNA only over regions called as peaks in DNA."
              }
            },
            "description": "Filter by rna_correlation_in_peaks",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the quality metric."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "StarrSeqQualityMetricResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StarrSeqQualityMetric"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/in-vitro-systems/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the InVitroSystem collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort InVitroSystem items. Supports filtering on fields within InVitroSystem items.",
        "operationId": "in_vitro_systems",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age",
                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                "description": "Age of organism at the time of collection of the sample."
              }
            },
            "description": "Filter by age",
            "style": "form",
            "explode": true
          },
          {
            "name": "age_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year"
                ],
                "description": "The units of time associated with age of the biosample."
              }
            },
            "description": "Filter by age_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "annotated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Annotated From",
                "description": "Links to the sample that was used as a reference for annotating this sample."
              }
            },
            "description": "Filter by annotated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by biomarkers.classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.gene.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.gene.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by biomarkers.gene.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by biomarkers.name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biosample_qualifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Qualifiers",
              "items": {
                "type": "string",
                "title": "Biosample Qualifiers",
                "enum": [
                  "6 days calcified",
                  "10 days calcified",
                  "exhausted"
                ],
                "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells."
              },
              "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells."
            },
            "description": "Filter by biosample_qualifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "cell_fate_change_protocol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cell Fate Change Protocol",
                "description": "A protocol applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming."
              }
            },
            "description": "Filter by cell_fate_change_protocol",
            "style": "form",
            "explode": true
          },
          {
            "name": "cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification",
                "enum": [
                  "organoid",
                  "gastruloid",
                  "embryoid",
                  "cell line",
                  "differentiated cell specimen",
                  "reprogrammed cell specimen",
                  "pooled cell specimen"
                ],
                "description": "The type of the in vitro system."
              },
              "description": "The general category of this type of in vitro system."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Collected",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "demultiplexed_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Demultiplexed From",
                "description": "The biosample this in vitro system sample was demultiplexed from using computational methods."
              }
            },
            "description": "Filter by demultiplexed_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "demultiplexed_to",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Demultiplexed To",
              "items": {
                "type": "string",
                "title": "Demultiplexed To"
              },
              "description": "The parts into which this sample has been demultiplexed."
            },
            "description": "Filter by demultiplexed_to",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by donors.ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "embryonic",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Embryonic",
                "description": "Biosample is embryonic."
              }
            },
            "description": "Filter by embryonic",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "growth_medium",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Growth Medium",
                "enum": [
                  "DMEM with serum",
                  "DMEM without serum",
                  "SMBM with serum",
                  "SMBM without serum"
                ],
                "description": "A growth medium of the in vitro system."
              }
            },
            "description": "Filter by growth_medium",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by institutional_certificates.data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age",
                "description": "Lower bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by lower_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age In Hours",
                "description": "Lower bound of age of organism in hours at the time of collection of the sample ."
              }
            },
            "description": "Filter by lower_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by modifications.cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by modifications.degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by modifications.fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.tagged_proteins.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.tagged_proteins.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.tagged_proteins.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by modifications.tagged_proteins.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_in.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by originated_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by originated_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by originated_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "part_of",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Part of Biosample",
                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth."
              }
            },
            "description": "Filter by part_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "parts",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Parts",
              "items": {
                "type": "string",
                "title": "Biosample Part"
              },
              "description": "The parts into which this sample has been divided."
            },
            "description": "Filter by parts",
            "style": "form",
            "explode": true
          },
          {
            "name": "passage_number",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Passage Number",
                "minimum": 0,
                "description": "Number of passages including the passages from the source."
              }
            },
            "description": "Filter by passage_number",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Pooled From",
              "items": {
                "type": "string"
              },
              "description": "The biosamples this biosample is pooled from."
            },
            "description": "Filter by pooled_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_in",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Pooled In",
              "items": {
                "type": "string",
                "title": "Biosample Pooled In"
              },
              "description": "The pooled samples in which this sample is included."
            },
            "description": "Filter by pooled_in",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "female",
                  "male",
                  "mixed",
                  "unspecified"
                ]
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_sample_term.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by targeted_sample_term.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_sample_term.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by targeted_sample_term.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "targeted_sample_term.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by targeted_sample_term.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_change",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Change",
                "description": "The time that elapsed past the time-point when the cell fate change treatments were introduced."
              }
            },
            "description": "Filter by time_post_change",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_change_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Change Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the cell fate change treatments were introduced."
              }
            },
            "description": "Filter by time_post_change_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by treatments.depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age",
                "description": "Upper bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age In Hours",
                "description": "Upper bound of age of organism in hours at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "InVitroSystemResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InVitroSystem"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/multiplexed-samples/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the MultiplexedSample collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort MultiplexedSample items. Supports filtering on fields within MultiplexedSample items.",
        "operationId": "multiplexed_samples",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "barcode_map",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Link to barcode map tabular file",
                "description": "The link to the barcode mapping tabular file."
              }
            },
            "description": "Filter by barcode_map",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by biomarkers.classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.gene.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.gene.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by biomarkers.gene.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by biomarkers.name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification"
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Obtained",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by donors.ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by institutional_certificates.data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by modifications.cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by modifications.degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by modifications.fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_in.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_samples.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_samples.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.construct_library_sets",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Construct Library Sets",
              "items": {
                "type": "string",
                "title": "Construct Library Set"
              },
              "description": "The construct library sets of vectors introduced to this sample prior to performing an assay."
            },
            "description": "Filter by multiplexed_samples.construct_library_sets",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_samples.disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_samples.disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by multiplexed_samples.disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_samples.donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_samples.donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_samples.donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_samples.sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_samples.sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by multiplexed_samples.sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_samples.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_samples.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by multiplexed_samples.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexing_methods",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Multiplexing Methods",
              "items": {
                "type": "string",
                "title": "Multiplexing Method",
                "enum": [
                  "genetic",
                  "barcode based"
                ],
                "description": "The method used for multiplexing and demultiplexing."
              },
              "description": "The methods used for multiplexing and demultiplexing."
            },
            "description": "Filter by multiplexing_methods",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of this sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus",
                  "Mixed species",
                  "Saccharomyces cerevisiae"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by treatments.depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "MultiplexedSampleResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MultiplexedSample"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/primary-cells/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the PrimaryCell collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort PrimaryCell items. Supports filtering on fields within PrimaryCell items.",
        "operationId": "primary_cells",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age",
                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                "description": "Age of organism at the time of collection of the sample."
              }
            },
            "description": "Filter by age",
            "style": "form",
            "explode": true
          },
          {
            "name": "age_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year"
                ],
                "description": "The units of time associated with age of the biosample."
              }
            },
            "description": "Filter by age_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "annotated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Annotated From",
                "description": "Links to the sample that was used as a reference for annotating this sample."
              }
            },
            "description": "Filter by annotated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by biomarkers.classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.gene.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.gene.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by biomarkers.gene.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by biomarkers.name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biosample_qualifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Qualifiers",
              "items": {
                "type": "string",
                "title": "Biosample Qualifiers",
                "enum": [
                  "6 days calcified",
                  "10 days calcified",
                  "exhausted"
                ],
                "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells."
              },
              "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells."
            },
            "description": "Filter by biosample_qualifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification"
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Harvested",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by donors.ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "embryonic",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Embryonic",
                "description": "Biosample is embryonic."
              }
            },
            "description": "Filter by embryonic",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by institutional_certificates.data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age",
                "description": "Lower bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by lower_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age In Hours",
                "description": "Lower bound of age of organism in hours at the time of collection of the sample ."
              }
            },
            "description": "Filter by lower_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by modifications.cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by modifications.degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by modifications.fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.tagged_proteins.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.tagged_proteins.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.tagged_proteins.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by modifications.tagged_proteins.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_in.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Originated From",
                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification."
              }
            },
            "description": "Filter by originated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "part_of",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Part of Biosample",
                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth."
              }
            },
            "description": "Filter by part_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "parts",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Parts",
              "items": {
                "type": "string",
                "title": "Biosample Part"
              },
              "description": "The parts into which this sample has been divided."
            },
            "description": "Filter by parts",
            "style": "form",
            "explode": true
          },
          {
            "name": "passage_number",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Passage Number",
                "minimum": 0,
                "description": "Number of passages including the passages from the source."
              }
            },
            "description": "Filter by passage_number",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Pooled From",
              "items": {
                "type": "string",
                "title": "Primary Cell Pooled From"
              },
              "description": "The biosamples this biosample is pooled from."
            },
            "description": "Filter by pooled_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_in",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Pooled In",
              "items": {
                "type": "string",
                "title": "Biosample Pooled In"
              },
              "description": "The pooled samples in which this sample is included."
            },
            "description": "Filter by pooled_in",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "female",
                  "male",
                  "mixed",
                  "unspecified"
                ]
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by treatments.depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age",
                "description": "Upper bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age In Hours",
                "description": "Upper bound of age of organism in hours at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PrimaryCellResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PrimaryCell"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/technical-samples/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the TechnicalSample collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort TechnicalSample items. Supports filtering on fields within TechnicalSample items.",
        "operationId": "technical_samples",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification"
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Obtained",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Institutional Certificates",
              "items": {
                "type": "string",
                "title": "Institutional Certificate"
              },
              "description": "The institutional certificates under which use of this sample is approved."
            },
            "description": "Filter by institutional_certificates",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Multiplexed In",
              "items": {
                "type": "string",
                "title": "Multiplexed In"
              },
              "description": "The multiplexed samples in which this sample is included."
            },
            "description": "Filter by multiplexed_in",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_material",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sample Material",
                "enum": [
                  "undefined",
                  "inorganic",
                  "synthetic",
                  "organic"
                ]
              }
            },
            "description": "Filter by sample_material",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of this sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Saccharomyces cerevisiae",
                  "Homo sapiens"
                ]
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TechnicalSampleResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TechnicalSample"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tissues/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Tissue collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Tissue items. Supports filtering on fields within Tissue items.",
        "operationId": "tissues",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age",
                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                "description": "Age of organism at the time of collection of the sample."
              }
            },
            "description": "Filter by age",
            "style": "form",
            "explode": true
          },
          {
            "name": "age_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year"
                ],
                "description": "The units of time associated with age of the biosample."
              }
            },
            "description": "Filter by age_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "annotated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Annotated From",
                "description": "Links to the sample that was used as a reference for annotating this sample."
              }
            },
            "description": "Filter by annotated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by biomarkers.classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.gene.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.gene.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by biomarkers.gene.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by biomarkers.name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "ccf_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Common Coordinate Framework Identifier",
                "description": "HubMap Common Coordinate Framework unique identifier corresponding to the organ, biological structure, and spatial location of the tissue specimen."
              }
            },
            "description": "Filter by ccf_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification"
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Harvested",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by donors.ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "embryonic",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Embryonic",
                "description": "Biosample is embryonic."
              }
            },
            "description": "Filter by embryonic",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by institutional_certificates.data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age",
                "description": "Lower bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by lower_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age In Hours",
                "description": "Lower bound of age of organism in hours at the time of collection of the sample ."
              }
            },
            "description": "Filter by lower_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by modifications.cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by modifications.degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by modifications.fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.tagged_proteins.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.tagged_proteins.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.tagged_proteins.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by modifications.tagged_proteins.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_in.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Originated From",
                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification."
              }
            },
            "description": "Filter by originated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "part_of",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Part of Biosample",
                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth."
              }
            },
            "description": "Filter by part_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "parts",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Parts",
              "items": {
                "type": "string",
                "title": "Biosample Part"
              },
              "description": "The parts into which this sample has been divided."
            },
            "description": "Filter by parts",
            "style": "form",
            "explode": true
          },
          {
            "name": "pmi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Post-mortem Interval",
                "minimum": 1,
                "description": "The amount of time elapsed since death."
              }
            },
            "description": "Filter by pmi",
            "style": "form",
            "explode": true
          },
          {
            "name": "pmi_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Post-mortem Interval Units",
                "enum": [
                  "second",
                  "minute",
                  "hour",
                  "day",
                  "week"
                ],
                "description": "The unit in which the PMI time was reported."
              }
            },
            "description": "Filter by pmi_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Pooled From",
              "items": {
                "type": "string",
                "title": "Tissue Pooled From"
              },
              "description": "The biosamples this biosample is pooled from."
            },
            "description": "Filter by pooled_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_in",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Pooled In",
              "items": {
                "type": "string",
                "title": "Biosample Pooled In"
              },
              "description": "The pooled samples in which this sample is included."
            },
            "description": "Filter by pooled_in",
            "style": "form",
            "explode": true
          },
          {
            "name": "preservation_method",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preservation Method",
                "enum": [
                  "cryopreservation",
                  "flash-freezing"
                ],
                "description": "The method by which the tissue was preserved: cryopreservation (slow-freeze) or flash-freezing."
              }
            },
            "description": "Filter by preservation_method",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "female",
                  "male",
                  "mixed",
                  "unspecified"
                ]
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by treatments.depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age",
                "description": "Upper bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age In Hours",
                "description": "Upper bound of age of organism in hours at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TissueResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tissue"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/whole-organisms/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the WholeOrganism collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort WholeOrganism items. Supports filtering on fields within WholeOrganism items.",
        "operationId": "whole_organisms",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age",
                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                "description": "Age of organism at the time of collection of the sample."
              }
            },
            "description": "Filter by age",
            "style": "form",
            "explode": true
          },
          {
            "name": "age_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Age Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year"
                ],
                "description": "The units of time associated with age of the biosample."
              }
            },
            "description": "Filter by age_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "annotated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Annotated From",
                "description": "Links to the sample that was used as a reference for annotating this sample."
              }
            },
            "description": "Filter by annotated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.classification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Classification",
                "description": "Sample specific biomarker."
              }
            },
            "description": "Filter by biomarkers.classification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by biomarkers.gene.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.gene.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.gene.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by biomarkers.gene.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.name_quantification",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name and Quantification",
                "description": "A concatenation of the name and quantification of the biomarker."
              }
            },
            "description": "Filter by biomarkers.name_quantification",
            "style": "form",
            "explode": true
          },
          {
            "name": "biomarkers.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by biomarkers.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "cellular_sub_pool",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cellular Sub Pool",
                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library."
              }
            },
            "description": "Filter by cellular_sub_pool",
            "style": "form",
            "explode": true
          },
          {
            "name": "classifications",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Classifications",
              "items": {
                "type": "string",
                "title": "Classification"
              },
              "description": "The general category of this type of sample."
            },
            "description": "Filter by classifications",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by construct_library_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.associated_phenotypes.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by construct_library_sets.associated_phenotypes.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The type or category of this construct library set."
              }
            },
            "description": "Filter by construct_library_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "construct_library_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by construct_library_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "date_obtained",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Date Obtained",
                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample."
              }
            },
            "description": "Filter by date_obtained",
            "style": "form",
            "explode": true
          },
          {
            "name": "dbxrefs",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "External Resources",
              "items": {
                "type": "string",
                "title": "External Identifier",
                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                "description": "An identifier from external resource."
              },
              "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus."
            },
            "description": "Filter by dbxrefs",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by disease_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by disease_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "disease_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by disease_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by donors.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by donors.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.ethnicities",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Ethnicity",
              "items": {
                "type": "string",
                "enum": [
                  "African American",
                  "African Caribbean",
                  "Arab",
                  "Asian",
                  "Black",
                  "Black African",
                  "Chinese",
                  "Colombian",
                  "Dai Chinese",
                  "Esan",
                  "Eskimo",
                  "European",
                  "Gambian",
                  "Han Chinese",
                  "Hispanic",
                  "Indian",
                  "Indigenous in North America",
                  "Japanese",
                  "Kinh Vietnamese",
                  "Luhya",
                  "Maasai",
                  "Mende",
                  "Native Hawaiian",
                  "Pacific Islander",
                  "Puerto Rican",
                  "Yoruba"
                ]
              },
              "description": "Ethnicity of the donor."
            },
            "description": "Filter by donors.ethnicities",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by donors.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "donors.strain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Strain Name",
                "description": "The specific strain designation of a non-human donor."
              }
            },
            "description": "Filter by donors.strain",
            "style": "form",
            "explode": true
          },
          {
            "name": "embryonic",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Embryonic",
                "description": "Biosample is embryonic."
              }
            },
            "description": "Filter by embryonic",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by file_sets.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by file_sets.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by file_sets.aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.file_set_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "File Set Type",
                "description": "The category that best describes this prediction set."
              }
            },
            "description": "Filter by file_sets.file_set_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by file_sets.lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.preferred_assay_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Preferred Assay Title",
                "description": "The custom lab preferred label for the experiment performed in this measurement set."
              }
            },
            "description": "Filter by file_sets.preferred_assay_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by file_sets.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "file_sets.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the prediction set."
              }
            },
            "description": "Filter by file_sets.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by institutional_certificates.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.certificate_identifier",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Certificate Identifier",
                "pattern": "^IP\\d{3}-\\d{2}$",
                "description": "A unique identifier for the certificate."
              }
            },
            "description": "Filter by institutional_certificates.certificate_identifier",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.controlled_access",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Controlled Access",
                "description": "Indicator of whether the samples are under controlled access."
              }
            },
            "description": "Filter by institutional_certificates.controlled_access",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_modifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Data Use Limitation Modifiers",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Modifier",
                "enum": [
                  "COL",
                  "GSO",
                  "IRB",
                  "MDS",
                  "NPU",
                  "PUB"
                ]
              },
              "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples."
            },
            "description": "Filter by institutional_certificates.data_use_limitation_modifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.data_use_limitation_summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Data Use Limitation Summary",
                "description": "A combination of the data use limitation and its modifiers"
              }
            },
            "description": "Filter by institutional_certificates.data_use_limitation_summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "institutional_certificates.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by institutional_certificates.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age",
                "description": "Lower bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by lower_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "lower_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Lower Bound Age In Hours",
                "description": "Lower bound of age of organism in hours at the time of collection of the sample ."
              }
            },
            "description": "Filter by lower_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.cas_species",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Cas species",
                "description": "The originating species of the Cas nuclease."
              }
            },
            "description": "Filter by modifications.cas_species",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.degron_system",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Degron System",
                "description": "The type of degron system implemented."
              }
            },
            "description": "Filter by modifications.degron_system",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.fused_domain",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Fused Domain",
                "description": "The name of the molecule fused to a Cas protein."
              }
            },
            "description": "Filter by modifications.fused_domain",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.modality",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Modality",
                "description": "The purpose or intended effect of a modification."
              }
            },
            "description": "Filter by modifications.modality",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by modifications.tagged_proteins.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by modifications.tagged_proteins.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by modifications.tagged_proteins.summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "modifications.tagged_proteins.symbol",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Gene Symbol",
                "description": "Gene symbol approved by the official nomenclature."
              }
            },
            "description": "Filter by modifications.tagged_proteins.symbol",
            "style": "form",
            "explode": true
          },
          {
            "name": "moi",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Multiplicity Of Infection",
                "minimum": 0,
                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI."
              }
            },
            "description": "Filter by moi",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by multiplexed_in.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by multiplexed_in.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "multiplexed_in.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by multiplexed_in.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "nucleic_acid_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Nucleic Acid Delivery",
                "enum": [
                  "adenoviral transduction",
                  "lipofectamine",
                  "electroporation",
                  "lentiviral transduction",
                  "transfection",
                  "nucleofection"
                ],
                "description": "Method of introduction of nucleic acid into the cell."
              }
            },
            "description": "Filter by nucleic_acid_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "origin_of",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Origin Sample Of",
              "items": {
                "type": "string",
                "title": "Originated Sample"
              },
              "description": "The samples which originate from this sample, such as through a process of cell differentiation."
            },
            "description": "Filter by origin_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "originated_from",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Originated From",
                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification."
              }
            },
            "description": "Filter by originated_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "part_of",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Part of Biosample",
                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth."
              }
            },
            "description": "Filter by part_of",
            "style": "form",
            "explode": true
          },
          {
            "name": "parts",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosample Parts",
              "items": {
                "type": "string",
                "title": "Biosample Part"
              },
              "description": "The parts into which this sample has been divided."
            },
            "description": "Filter by parts",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_from",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Pooled From",
              "items": {
                "type": "string",
                "title": "Biosample Pooled From",
                "description": "Pooled biosample."
              },
              "description": "The biosamples this biosample is pooled from."
            },
            "description": "Filter by pooled_from",
            "style": "form",
            "explode": true
          },
          {
            "name": "pooled_in",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Pooled In",
              "items": {
                "type": "string",
                "title": "Biosample Pooled In"
              },
              "description": "The pooled samples in which this sample is included."
            },
            "description": "Filter by pooled_in",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "protocols",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Protocols",
              "items": {
                "type": "string",
                "title": "Protocol",
                "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
              },
              "description": "Links to the protocol(s) for preparing the samples on Protocols.io."
            },
            "description": "Filter by protocols",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sample_terms.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sample_terms.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sample_terms.term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Term Name",
                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                "description": "Ontology term describing a biological sample, assay, trait, or disease."
              }
            },
            "description": "Filter by sample_terms.term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "sex",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sex",
                "enum": [
                  "female",
                  "male",
                  "mixed",
                  "unspecified"
                ]
              }
            },
            "description": "Filter by sex",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_fractions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Sorted Fraction Samples",
              "items": {
                "type": "string",
                "title": "Sorted Fraction Sample"
              },
              "description": "The fractions into which this sample has been sorted."
            },
            "description": "Filter by sorted_fractions",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sorted_from.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by sorted_from.accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by sorted_from.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "sorted_from_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Sorted From Detail",
                "description": "Detail for sample sorted into fractions capturing information about sorting."
              }
            },
            "description": "Filter by sorted_from_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Starting Amount",
                "description": "The initial quantity of samples obtained."
              }
            },
            "description": "Filter by starting_amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "starting_amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Starting Amount Units",
                "enum": [
                  "cells",
                  "cells/ml",
                  "g",
                  "items",
                  "mg",
                  "whole animals",
                  "whole embryos",
                  "\u03bcg",
                  "ng"
                ],
                "description": "The units used to quantify the amount of samples obtained."
              }
            },
            "description": "Filter by starting_amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the sample."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "taxa",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Taxa",
                "enum": [
                  "Homo sapiens",
                  "Mus musculus"
                ],
                "description": "The species of the organism."
              }
            },
            "description": "Filter by taxa",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Time Post Library Delivery",
                "description": "The time that elapsed past the time-point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery",
            "style": "form",
            "explode": true
          },
          {
            "name": "time_post_library_delivery_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Time Post Library Delivery Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "The units of time that elapsed past the point when the construct library sets were introduced."
              }
            },
            "description": "Filter by time_post_library_delivery_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by treatments.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by treatments.depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by treatments.purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by treatments.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatments.treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatments.treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatments.treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age",
                "description": "Upper bound of age of the organism at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age",
            "style": "form",
            "explode": true
          },
          {
            "name": "upper_bound_age_in_hours",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Upper Bound Age In Hours",
                "description": "Upper bound of age of organism in hours at the time of collection of the sample."
              }
            },
            "description": "Filter by upper_bound_age_in_hours",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "virtual",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Virtual",
                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for."
              }
            },
            "description": "Filter by virtual",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "WholeOrganismResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WholeOrganism"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/software/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Software collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Software items. Supports filtering on fields within Software items.",
        "operationId": "software",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "categories",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Categories",
              "items": {
                "type": "string",
                "title": "Category",
                "enum": [
                  "CRISPR Screens",
                  "General Bioinformatic Utilities",
                  "Genomic Annotations",
                  "Networks",
                  "Predictions",
                  "Reporter Assays",
                  "Single Cell Multiome"
                ],
                "description": "The main category describing the primary use of this software."
              },
              "description": "The general categories of this software."
            },
            "description": "Filter by categories",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[a-z0-9\\-_]+",
                "description": "Unique name of the software package; a lowercase version of the title."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "description": "An external resource to the codebase."
              }
            },
            "description": "Filter by source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the software."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "used_by",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Used by",
              "items": {
                "type": "string",
                "title": "Used by",
                "enum": [
                  "consortium analysis",
                  "DACC",
                  "processing pipelines"
                ]
              },
              "description": "The component(s) of the IGVF consortium that utilize this software."
            },
            "description": "Filter by used_by",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "versions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Versions",
              "items": {
                "type": "string",
                "title": "Version"
              },
              "description": "A list of versions that have been released for this software."
            },
            "description": "Filter by versions",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SoftwareResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Software"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/software-versions/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the SoftwareVersion collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort SoftwareVersion items. Supports filtering on fields within SoftwareVersion items.",
        "operationId": "software_versions",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "download_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Download ID",
                "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used."
              }
            },
            "description": "Filter by download_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for a software version."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "software.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by software.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "software.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by software.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "software.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the software."
              }
            },
            "description": "Filter by software.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "description": "An external resource to track the version of the software download."
              }
            },
            "description": "Filter by source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Version",
                "pattern": "^v(?!0\\.0\\.0$)([0-9]+\\.[0-9]+\\.[0-9]+(\\.[0-9]+)?|0\\.0\\.0\\.[1-9][0-9]*)$",
                "description": "The version of a particular software."
              }
            },
            "description": "Filter by version",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SoftwareVersionResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SoftwareVersion"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sources/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Source collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Source items. Supports filtering on fields within Source items.",
        "operationId": "sources",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[a-z0-9\\-]+$",
                "description": "A short unique name for the source."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the source."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The complete name of the originating lab or vendor."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "URL",
                "description": "An external resource with additional information."
              }
            },
            "description": "Filter by url",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "SourceResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Source"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/treatments/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Treatment collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Treatment items. Supports filtering on fields within Treatment items.",
        "operationId": "treatments",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Amount",
                "description": "Specific quantity of the applied treatment (used in conjunction with amount_units)."
              }
            },
            "description": "Filter by amount",
            "style": "form",
            "explode": true
          },
          {
            "name": "amount_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Amount Units",
                "enum": [
                  "mg/kg",
                  "mg/mL",
                  "mM",
                  "ng/mL",
                  "nM",
                  "percent",
                  "\u03bcg/kg",
                  "\u03bcg/kg",
                  "\u03bcg/mL",
                  "\u03bcM",
                  "kpa"
                ],
                "description": "A unit for an amount other than those for time or temperature."
              }
            },
            "description": "Filter by amount_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "biosamples_treated",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Biosamples Treated",
              "items": {
                "type": "string",
                "title": "Biosamples Treated"
              },
              "description": "The samples which have been treated using this treatment."
            },
            "description": "Filter by biosamples_treated",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "depletion",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Depletion",
                "description": "Treatment is depleted."
              }
            },
            "description": "Filter by depletion",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that describe the treatment protocol details."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "duration",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Duration",
                "description": "Duration indicates the time elapsed between the start and end of the treatment."
              }
            },
            "description": "Filter by duration",
            "style": "form",
            "explode": true
          },
          {
            "name": "duration_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Duration Units",
                "enum": [
                  "second",
                  "minute",
                  "hour",
                  "day"
                ],
                "description": "A unit of time."
              }
            },
            "description": "Filter by duration_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lot_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lot ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The lot identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by lot_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "pH",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "pH",
                "description": "Final pH of the solution containing a chemical compound (if applicable)"
              }
            },
            "description": "Filter by pH",
            "style": "form",
            "explode": true
          },
          {
            "name": "post_treatment_time",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Post-treatment Time",
                "description": "Post treatment time in conjunction with post treatment time units is used to specify the time that has passed between the point when biosamples were removed from the treatment solution before being sampled or treated with the next treatment."
              }
            },
            "description": "Filter by post_treatment_time",
            "style": "form",
            "explode": true
          },
          {
            "name": "post_treatment_time_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Post-treatment Time Units",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ],
                "description": "A unit of time."
              }
            },
            "description": "Filter by post_treatment_time_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Product ID",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The product identifier provided by the originating lab or vendor."
              }
            },
            "description": "Filter by product_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "purpose",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Purpose",
                "enum": [
                  "activation",
                  "agonist",
                  "antagonist",
                  "control",
                  "differentiation",
                  "de-differentiation",
                  "perturbation",
                  "selection",
                  "stimulation"
                ],
                "description": "The intended purpose for treating the samples."
              }
            },
            "description": "Filter by purpose",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "sources.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by sources.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "archived",
                  "deleted",
                  "in progress",
                  "preview",
                  "released"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary"
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "temperature",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "title": "Temperature",
                "description": "The temperature in Celsius to which the sample was exposed"
              }
            },
            "description": "Filter by temperature",
            "style": "form",
            "explode": true
          },
          {
            "name": "temperature_units",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Temperature Units",
                "enum": [
                  "Celsius"
                ],
                "description": "A unit of temperature."
              }
            },
            "description": "Filter by temperature_units",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatment_term_id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term ID",
                "pattern": "^((CHEBI:[0-9]{1,7})|(UniProtKB:[A-Z0-9]{6})|(NTR:[0-9]{2,8}))$",
                "description": "Ontology identifier describing a component in the treatment."
              }
            },
            "description": "Filter by treatment_term_id",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatment_term_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Term Name",
                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc."
              }
            },
            "description": "Filter by treatment_term_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "treatment_type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Treatment Type",
                "enum": [
                  "chemical",
                  "protein",
                  "environmental"
                ],
                "description": "The classification of treatment agent that specifies its exact molecular nature. "
              }
            },
            "description": "Filter by treatment_type",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TreatmentResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Treatment"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the User collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort User items. Supports filtering on fields within User items.",
        "operationId": "users",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Email",
                "pattern": "^[^A-Z\\s@]+@[^A-Z\\s@]+\\.[^A-Z\\s@]+$",
                "description": "The email associated with the user's account."
              }
            },
            "description": "Filter by email",
            "style": "form",
            "explode": true
          },
          {
            "name": "first_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "First Name",
                "description": "The user's first (given) name."
              }
            },
            "description": "Filter by first_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "groups",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Groups",
              "items": {
                "type": "string",
                "title": "Group",
                "enum": [
                  "admin",
                  "read-only-admin",
                  "verified"
                ]
              },
              "description": "Additional access control groups"
            },
            "description": "Filter by groups",
            "style": "form",
            "explode": true
          },
          {
            "name": "job_title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Job Title",
                "enum": [
                  "Principal Investigator",
                  "Co-Investigator",
                  "Project Manager",
                  "Submitter",
                  "Post Doc",
                  "Data Wrangler",
                  "Scientist",
                  "Computational Scientist",
                  "Software Developer",
                  "NHGRI staff member",
                  "Other"
                ],
                "description": "The role of the user in their lab or organization."
              }
            },
            "description": "Filter by job_title",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Lab",
                "description": "Lab user is primarily associated with."
              }
            },
            "description": "Filter by lab",
            "style": "form",
            "explode": true
          },
          {
            "name": "last_name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Last Name",
                "description": "The user's last (family) name."
              }
            },
            "description": "Filter by last_name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "current",
                  "deleted",
                  "disabled"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submits_for",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Submits For",
              "items": {
                "type": "string",
                "title": "Lab Submittable For",
                "description": "A lab user is authorized to submit for."
              },
              "description": "Labs user is authorized to submit data for."
            },
            "description": "Filter by submits_for",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the object."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by title",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "viewing_groups",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "View Access Groups",
              "items": {
                "type": "string",
                "title": "View Access Group",
                "enum": [
                  "community",
                  "IGVF"
                ]
              },
              "description": "The group that determines which set of data the user has permission to view."
            },
            "description": "Filter by viewing_groups",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "UserResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/workflows/@@listing": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List items in the Workflow collection.",
        "description": "Collection endpoint that accepts various query parameters to filter and sort Workflow items. Supports filtering on fields within Workflow items.",
        "operationId": "workflows",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching.",
            "example": "variant flowfish jurkat"
          },
          {
            "name": "frame",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "object"
              ]
            },
            "description": "Constant value. Do not set."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Limit"
            },
            "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
            "examples": {
              "number": {
                "value": 100
              },
              "all": {
                "value": "all"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
            "examples": {
              "file_size": {
                "value": "-file_size"
              },
              "lab": {
                "value": "lab.title"
              }
            }
          },
          {
            "name": "@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by @id",
            "style": "form",
            "explode": true
          },
          {
            "name": "accession",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Accession",
                "description": "A unique identifier to be used to reference the object prefixed with IGVF."
              }
            },
            "description": "Filter by accession",
            "style": "form",
            "explode": true
          },
          {
            "name": "aliases",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Aliases",
              "items": {
                "type": "string",
                "title": "Lab Alias",
                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                "description": "A lab specific identifier to reference an object."
              },
              "description": "Lab specific identifiers to reference an object."
            },
            "description": "Filter by aliases",
            "style": "form",
            "explode": true
          },
          {
            "name": "alternate_accessions",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Alternate Accessions",
              "items": {
                "type": "string",
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object."
              },
              "description": "Accessions previously assigned to objects that have been merged with this object."
            },
            "description": "Filter by alternate_accessions",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_steps.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Analysis Step Types",
              "items": {
                "type": "string",
                "title": "Type",
                "enum": [
                  "alignment",
                  "barcode correction",
                  "barcode counting",
                  "barcode mapping generation",
                  "base calling",
                  "cell to feature barcode mapping",
                  "computational model prediction",
                  "computational model training",
                  "counts normalization",
                  "custom genome assembly",
                  "demultiplexing",
                  "differential expression analysis",
                  "fastq concatenation",
                  "file format conversion",
                  "filtering",
                  "fragment generation",
                  "genome index generation",
                  "interaction calling",
                  "matrix generation",
                  "merging",
                  "peak calling",
                  "read trimming",
                  "quantification",
                  "signal generation",
                  "signal normalization",
                  "spatial feature detection",
                  "transcriptome index generation",
                  "UMI deduplication",
                  "UMI quantification",
                  "variant annotation"
                ]
              },
              "description": "The classification of the software."
            },
            "description": "Filter by analysis_steps.analysis_step_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "A unique identifier for a software version."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.software.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.software.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.software.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^[a-z0-9\\-_]+",
                "description": "Unique name of the software package; a lowercase version of the title."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.software.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.software.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.software.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.software.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the software."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.software.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.software_versions.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.software_versions.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.analysis_step_versions.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_steps.analysis_step_versions.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.input_content_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Input Content Types",
              "items": {
                "type": "string",
                "title": "Input Content Type",
                "enum": [
                  "DNA footprint scores",
                  "MPRA sequence designs",
                  "Nanopore reads",
                  "PacBio subreads",
                  "SNP effect matrix",
                  "TF binding scores",
                  "alignments",
                  "barcode onlist",
                  "barcode replacement",
                  "barcode to TF overexpression mapping",
                  "barcode to element mapping",
                  "barcode to hashtag mapping",
                  "barcode to sample mapping",
                  "barcode to variant mapping",
                  "bin paired count",
                  "biological_context",
                  "cell hashing barcodes",
                  "coding variant effects",
                  "coding_variants",
                  "complexes",
                  "complexes_complexes",
                  "complexes_proteins",
                  "complexes_terms",
                  "contact matrix",
                  "control signal",
                  "detected tissue",
                  "differential chromatin contact quantifications",
                  "differential element quantifications",
                  "differential gene expression quantifications",
                  "differential peak quantifications",
                  "differential transcript expression quantifications",
                  "diseases_genes",
                  "documentation (readme)",
                  "drugs",
                  "edge weights",
                  "editing templates",
                  "element quantifications",
                  "element to gene predictions",
                  "elements reference",
                  "elements_genes",
                  "exclusion list",
                  "external source data",
                  "feature weights",
                  "fiducial alignment",
                  "filtered feature barcode matrix",
                  "fold change over control",
                  "fragments",
                  "gene quantifications",
                  "genes",
                  "genes_genes",
                  "genes_pathways",
                  "genes_terms",
                  "genes_transcripts",
                  "genome index",
                  "genome reference",
                  "genomic_elements",
                  "genomic_elements_genes",
                  "genomic_elements_genes_biosamples",
                  "genomic_elements_genes_biosamples_donors",
                  "genomic_elements_genes_biosamples_treatments_chebi",
                  "genomic_elements_genes_biosamples_treatments_proteins",
                  "genomic_elements_genomic_elements",
                  "go_terms_proteins",
                  "graph structure",
                  "guide RNA sequences",
                  "guide quantifications",
                  "high resolution tissue",
                  "inclusion list",
                  "index",
                  "kallisto single cell RNAseq output",
                  "loci",
                  "low resolution tissue",
                  "machine learning model features",
                  "methylated reads",
                  "model parameters",
                  "motifs",
                  "motifs_proteins",
                  "nascent transcriptome index",
                  "neural network architecture",
                  "ontology_terms",
                  "ontology_terms_ontology_terms",
                  "pathways",
                  "pathways_pathways",
                  "peak quantifications",
                  "peaks",
                  "position weight matrix",
                  "prime editing guide RNA sequences",
                  "primer sequences",
                  "primers table",
                  "primers track",
                  "protein language model",
                  "protein to protein interaction score",
                  "proteins",
                  "proteins_proteins",
                  "raw feature barcode matrix",
                  "raw signal",
                  "read-depth signal",
                  "reads",
                  "reporter elements",
                  "reporter experiment",
                  "reporter experiment barcode",
                  "reporter genomic element effects",
                  "reporter genomic variant effects",
                  "reporter variants",
                  "sample barcode count matrix",
                  "sample sort parameters",
                  "scale factors",
                  "seqspec",
                  "sequence attributes",
                  "signal",
                  "signal of all reads",
                  "signal of unique reads",
                  "signal p-value",
                  "sparse gene count matrix",
                  "sparse peak count matrix",
                  "sparse transcript count matrix",
                  "spike-ins",
                  "studies",
                  "studies_variants",
                  "studies_variants_phenotypes",
                  "target transcripts",
                  "tissue positions",
                  "transcript quantifications",
                  "transcriptome alignments",
                  "transcriptome annotations",
                  "transcriptome index",
                  "transcriptome reference",
                  "transcripts",
                  "transcripts_proteins",
                  "unfiltered global differential expression",
                  "unfiltered local differential expression",
                  "variant binding effects",
                  "variant effects",
                  "variant functional predictions",
                  "variant localization impacts",
                  "variant to element mapping",
                  "variants",
                  "variants_coding_variants",
                  "variants_diseases",
                  "variants_diseases_genes",
                  "variants_drugs",
                  "variants_drugs_genes",
                  "variants_genes",
                  "variants_genes_terms",
                  "variants_genomic_elements",
                  "variants_phenotypes",
                  "variants_phenotypes_studies",
                  "variants_proteins",
                  "variants_proteins_biosamples",
                  "variants_proteins_phenotypes",
                  "variants_proteins_terms",
                  "variants_variants",
                  "vector sequences"
                ],
                "description": "A content type used as input for the analysis step."
              },
              "description": "The content types used as input for the analysis step."
            },
            "description": "Filter by analysis_steps.input_content_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "description": "Full name of the analysis step."
              }
            },
            "description": "Filter by analysis_steps.name",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.output_content_types",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Output Content Types",
              "items": {
                "type": "string",
                "title": "Output Content Type",
                "enum": [
                  "DNA footprint scores",
                  "MPRA sequence designs",
                  "Nanopore reads",
                  "PacBio subreads",
                  "SNP effect matrix",
                  "TF binding scores",
                  "alignments",
                  "barcode onlist",
                  "barcode replacement",
                  "barcode to TF overexpression mapping",
                  "barcode to element mapping",
                  "barcode to hashtag mapping",
                  "barcode to sample mapping",
                  "barcode to variant mapping",
                  "bin paired count",
                  "biological_context",
                  "cell hashing barcodes",
                  "coding variant effects",
                  "coding_variants",
                  "complexes",
                  "complexes_complexes",
                  "complexes_proteins",
                  "complexes_terms",
                  "contact matrix",
                  "control signal",
                  "detected tissue",
                  "differential chromatin contact quantifications",
                  "differential element quantifications",
                  "differential gene expression quantifications",
                  "differential peak quantifications",
                  "differential transcript expression quantifications",
                  "diseases_genes",
                  "documentation (readme)",
                  "drugs",
                  "edge weights",
                  "editing templates",
                  "element quantifications",
                  "element to gene predictions",
                  "elements reference",
                  "elements_genes",
                  "exclusion list",
                  "external source data",
                  "feature weights",
                  "fiducial alignment",
                  "filtered feature barcode matrix",
                  "fold change over control",
                  "fragments",
                  "gene quantifications",
                  "genes",
                  "genes_genes",
                  "genes_pathways",
                  "genes_terms",
                  "genes_transcripts",
                  "genome index",
                  "genome reference",
                  "genomic_elements",
                  "genomic_elements_genes",
                  "genomic_elements_genes_biosamples",
                  "genomic_elements_genes_biosamples_donors",
                  "genomic_elements_genes_biosamples_treatments_chebi",
                  "genomic_elements_genes_biosamples_treatments_proteins",
                  "genomic_elements_genomic_elements",
                  "go_terms_proteins",
                  "graph structure",
                  "guide RNA sequences",
                  "guide quantifications",
                  "high resolution tissue",
                  "inclusion list",
                  "index",
                  "kallisto single cell RNAseq output",
                  "loci",
                  "low resolution tissue",
                  "machine learning model features",
                  "methylated reads",
                  "model parameters",
                  "motifs",
                  "motifs_proteins",
                  "nascent transcriptome index",
                  "neural network architecture",
                  "ontology_terms",
                  "ontology_terms_ontology_terms",
                  "pathways",
                  "pathways_pathways",
                  "peak quantifications",
                  "peaks",
                  "position weight matrix",
                  "prime editing guide RNA sequences",
                  "primer sequences",
                  "primers table",
                  "primers track",
                  "protein language model",
                  "protein to protein interaction score",
                  "proteins",
                  "proteins_proteins",
                  "raw feature barcode matrix",
                  "raw signal",
                  "read-depth signal",
                  "reads",
                  "reporter elements",
                  "reporter experiment",
                  "reporter experiment barcode",
                  "reporter genomic element effects",
                  "reporter genomic variant effects",
                  "reporter variants",
                  "sample barcode count matrix",
                  "sample sort parameters",
                  "scale factors",
                  "seqspec",
                  "sequence attributes",
                  "signal",
                  "signal of all reads",
                  "signal of unique reads",
                  "signal p-value",
                  "sparse gene count matrix",
                  "sparse peak count matrix",
                  "sparse transcript count matrix",
                  "spike-ins",
                  "studies",
                  "studies_variants",
                  "studies_variants_phenotypes",
                  "target transcripts",
                  "tissue positions",
                  "transcript quantifications",
                  "transcriptome alignments",
                  "transcriptome annotations",
                  "transcriptome index",
                  "transcriptome reference",
                  "transcripts",
                  "transcripts_proteins",
                  "unfiltered global differential expression",
                  "unfiltered local differential expression",
                  "variant binding effects",
                  "variant effects",
                  "variant functional predictions",
                  "variant localization impacts",
                  "variant to element mapping",
                  "variants",
                  "variants_coding_variants",
                  "variants_diseases",
                  "variants_diseases_genes",
                  "variants_drugs",
                  "variants_drugs_genes",
                  "variants_genes",
                  "variants_genes_terms",
                  "variants_genomic_elements",
                  "variants_phenotypes",
                  "variants_phenotypes_studies",
                  "variants_proteins",
                  "variants_proteins_biosamples",
                  "variants_proteins_phenotypes",
                  "variants_proteins_terms",
                  "variants_variants",
                  "vector sequences"
                ],
                "description": "A content type produced as output by the analysis step."
              },
              "description": "The content types produced as output by the analysis step."
            },
            "description": "Filter by analysis_steps.output_content_types",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by analysis_steps.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "analysis_steps.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                "description": "The preferred viewable name of the analysis step, likely the same as the step label."
              }
            },
            "description": "Filter by analysis_steps.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by award.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "award.component",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Project Component",
                "description": "The project component the award is associated with."
              }
            },
            "description": "Filter by award.component",
            "style": "form",
            "explode": true
          },
          {
            "name": "collections",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Collections",
              "items": {
                "type": "string",
                "enum": [
                  "ACMG73",
                  "ClinGen",
                  "ENCODE",
                  "GREGoR",
                  "IGVF_catalog_beta_v0.1",
                  "IGVF_catalog_beta_v0.2",
                  "IGVF_catalog_beta_v0.3",
                  "IGVF_catalog_beta_v0.4",
                  "IGVF_catalog_beta_v0.5",
                  "IGVF phase 1",
                  "MaveDB",
                  "Morphic",
                  "MPRAbase",
                  "StanfordFCC",
                  "TOPMED Freeze 8",
                  "VarChAMP",
                  "Vista",
                  "Williams Syndrome Research"
                ]
              },
              "description": "Some samples are part of particular data collections."
            },
            "description": "Filter by collections",
            "style": "form",
            "explode": true
          },
          {
            "name": "creation_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Creation Timestamp",
                "description": "The date the object was created."
              }
            },
            "description": "Filter by creation_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Description",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "A plain text description of the object."
              }
            },
            "description": "Filter by description",
            "style": "form",
            "explode": true
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Documents",
              "items": {
                "type": "string",
                "title": "Document",
                "description": "A document that provides additional information (not data file)."
              },
              "description": "Documents that provide additional information (not data file)."
            },
            "description": "Filter by documents",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by lab.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "lab.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title"
              }
            },
            "description": "Filter by lab.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Name",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "The preferred viewable name of the workflow."
              }
            },
            "description": "Filter by name",
            "style": "form",
            "explode": true
          },
          {
            "name": "notes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Notes",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "DACC internal notes."
              }
            },
            "description": "Filter by notes",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by publications.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.publication_identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Publication Identifiers",
              "items": {
                "type": "string",
                "title": "Publication Identifier",
                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                "description": "An identifier that references data found in the object."
              },
              "description": "The publication identifiers associated with this publication object."
            },
            "description": "Filter by publications.publication_identifiers",
            "style": "form",
            "explode": true
          },
          {
            "name": "publications.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by publications.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "release_timestamp",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Release Timestamp",
                "description": "The date the object was released."
              }
            },
            "description": "Filter by release_timestamp",
            "style": "form",
            "explode": true
          },
          {
            "name": "revoke_detail",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Revoke Detail",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Explanation of why an object was transitioned to the revoked status."
              }
            },
            "description": "Filter by revoke_detail",
            "style": "form",
            "explode": true
          },
          {
            "name": "source_url",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Source URL",
                "pattern": "^https?://github\\.com/(\\S+)$",
                "description": "An external resource to the code base of the workflow in github."
              }
            },
            "description": "Filter by source_url",
            "style": "form",
            "explode": true
          },
          {
            "name": "standards_page.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by standards_page.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "standards_page.status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by standards_page.status",
            "style": "form",
            "explode": true
          },
          {
            "name": "standards_page.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The name shown in the browser's title bar and tabs."
              }
            },
            "description": "Filter by standards_page.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Status",
                "enum": [
                  "in progress",
                  "preview",
                  "released",
                  "deleted",
                  "replaced",
                  "revoked",
                  "archived"
                ],
                "description": "The status of the metadata object."
              }
            },
            "description": "Filter by status",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.@id",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "ID"
              }
            },
            "description": "Filter by submitted_by.@id",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitted_by.title",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Title",
                "description": "The full name of the user."
              }
            },
            "description": "Filter by submitted_by.title",
            "style": "form",
            "explode": true
          },
          {
            "name": "submitter_comment",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Submitter Comment",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                "description": "Additional information specified by the submitter to be displayed as a comment on the portal."
              }
            },
            "description": "Filter by submitter_comment",
            "style": "form",
            "explode": true
          },
          {
            "name": "summary",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "Summary",
                "description": "A summary of the object."
              }
            },
            "description": "Filter by summary",
            "style": "form",
            "explode": true
          },
          {
            "name": "uniform_pipeline",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean",
                "title": "Uniform Pipeline",
                "description": "Indicates whether the pipeline is developed by the IGVF consortium."
              }
            },
            "description": "Filter by uniform_pipeline",
            "style": "form",
            "explode": true
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "UUID",
                "description": "The unique identifier associated with every object."
              }
            },
            "description": "Filter by uuid",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow_repositories",
            "in": "query",
            "schema": {
              "type": "array",
              "title": "Workflow Repositories",
              "items": {
                "type": "string",
                "title": "Workflow Repository",
                "description": "Resource hosting the workflow."
              },
              "description": "Resources hosting the workflow."
            },
            "description": "Filter by workflow_repositories",
            "style": "form",
            "explode": true
          },
          {
            "name": "workflow_version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "title": "Workflow Version",
                "minimum": 1,
                "description": "The version of this workflow."
              }
            },
            "description": "Filter by workflow_version",
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "WorkflowResults",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Workflow"
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "SearchFacet",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "terms": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoResultsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ItemType": {
        "type": "string",
        "enum": [
          "AccessKey",
          "AnalysisStep",
          "AnalysisStepVersion",
          "Award",
          "Biomarker",
          "Document",
          "HumanDonor",
          "RodentDonor",
          "AlignmentFile",
          "ConfigurationFile",
          "GenomeBrowserAnnotationFile",
          "ImageFile",
          "IndexFile",
          "MatrixFile",
          "ModelFile",
          "ReferenceFile",
          "SequenceFile",
          "SignalFile",
          "TabularFile",
          "AnalysisSet",
          "AuxiliarySet",
          "ConstructLibrarySet",
          "CuratedSet",
          "MeasurementSet",
          "ModelSet",
          "PredictionSet",
          "Gene",
          "Image",
          "InstitutionalCertificate",
          "Lab",
          "CrisprModification",
          "DegronModification",
          "AssayTerm",
          "PhenotypeTerm",
          "PlatformTerm",
          "SampleTerm",
          "OpenReadingFrame",
          "Page",
          "PhenotypicFeature",
          "Publication",
          "MpraQualityMetric",
          "PerturbSeqQualityMetric",
          "SingleCellAtacSeqQualityMetric",
          "SingleCellRnaSeqQualityMetric",
          "StarrSeqQualityMetric",
          "InVitroSystem",
          "MultiplexedSample",
          "PrimaryCell",
          "TechnicalSample",
          "Tissue",
          "WholeOrganism",
          "Software",
          "SoftwareVersion",
          "Source",
          "Treatment",
          "User",
          "Workflow"
        ],
        "x-enum-varnames": [
          "AccessKey",
          "AnalysisStep",
          "AnalysisStepVersion",
          "Award",
          "Biomarker",
          "Document",
          "HumanDonor",
          "RodentDonor",
          "AlignmentFile",
          "ConfigurationFile",
          "GenomeBrowserAnnotationFile",
          "ImageFile",
          "IndexFile",
          "MatrixFile",
          "ModelFile",
          "ReferenceFile",
          "SequenceFile",
          "SignalFile",
          "TabularFile",
          "AnalysisSet",
          "AuxiliarySet",
          "ConstructLibrarySet",
          "CuratedSet",
          "MeasurementSet",
          "ModelSet",
          "PredictionSet",
          "Gene",
          "Image",
          "InstitutionalCertificate",
          "Lab",
          "CrisprModification",
          "DegronModification",
          "AssayTerm",
          "PhenotypeTerm",
          "PlatformTerm",
          "SampleTerm",
          "OpenReadingFrame",
          "Page",
          "PhenotypicFeature",
          "Publication",
          "MpraQualityMetric",
          "PerturbSeqQualityMetric",
          "SingleCellAtacSeqQualityMetric",
          "SingleCellRnaSeqQualityMetric",
          "StarrSeqQualityMetric",
          "InVitroSystem",
          "MultiplexedSample",
          "PrimaryCell",
          "TechnicalSample",
          "Tissue",
          "WholeOrganism",
          "Software",
          "SoftwareVersion",
          "Source",
          "Treatment",
          "User",
          "Workflow"
        ]
      },
      "JSONSchema": {
        "type": "object",
        "description": "A JSON Schema object"
      },
      "Limit": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ],
        "default": 25
      },
      "NoResultsResponse": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "string"
          },
          "@graph": {
            "type": "array",
            "items": {}
          },
          "@id": {
            "type": "string"
          },
          "@type": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clear_filters": {
            "type": "string"
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "facet_groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "facet_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "facets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "terms": {},
                "total": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "appended": {
                  "type": "boolean"
                },
                "open_on_load": {
                  "type": "boolean"
                }
              }
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "term": {
                  "type": "string"
                },
                "remove": {
                  "type": "string"
                }
              }
            }
          },
          "notification": {
            "type": "string"
          },
          "sort": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "string"
                },
                "unmapped_type": {
                  "type": "string"
                }
              }
            }
          },
          "title": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "AccessKey": {
        "title": "Access Key",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "Description of the access key.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "enum": [
              "current",
              "deleted"
            ]
          },
          "user": {
            "title": "User",
            "description": "The user that is assigned to this access key.",
            "type": "string"
          },
          "access_key_id": {
            "title": "Access Key ID",
            "description": "An access key.",
            "type": "string"
          },
          "secret_access_key_hash": {
            "title": "Secret Access Key Hash",
            "description": "A secret access key.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "AnalysisStep": {
        "title": "Analysis Step",
        "description": "A step in a computational analysis workflow. For example, a sequence alignment step that represents the phase of the computational analysis in which sequenced reads are being aligned to the reference genome.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_types": {
            "title": "Analysis Step Types",
            "description": "The classification of the software.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Type",
              "type": "string",
              "enum": [
                "alignment",
                "barcode correction",
                "barcode counting",
                "barcode mapping generation",
                "base calling",
                "cell to feature barcode mapping",
                "computational model prediction",
                "computational model training",
                "counts normalization",
                "custom genome assembly",
                "demultiplexing",
                "differential expression analysis",
                "fastq concatenation",
                "file format conversion",
                "filtering",
                "fragment generation",
                "genome index generation",
                "interaction calling",
                "matrix generation",
                "merging",
                "peak calling",
                "read trimming",
                "quantification",
                "signal generation",
                "signal normalization",
                "spatial feature detection",
                "transcriptome index generation",
                "UMI deduplication",
                "UMI quantification",
                "variant annotation"
              ]
            }
          },
          "step_label": {
            "title": "Step Label",
            "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
            "type": "string",
            "pattern": "^[a-z0-9-]+-step$"
          },
          "title": {
            "title": "Title",
            "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$"
          },
          "workflow": {
            "title": "Workflow",
            "description": "The computational workflow in which this analysis step belongs.",
            "type": "string"
          },
          "parents": {
            "title": "Parents",
            "description": "The precursor steps.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Parent",
              "description": "A precursor step.",
              "type": "string"
            }
          },
          "input_content_types": {
            "title": "Input Content Types",
            "description": "The content types used as input for the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input Content Type",
              "description": "A content type used as input for the analysis step.",
              "type": "string",
              "enum": [
                "DNA footprint scores",
                "MPRA sequence designs",
                "Nanopore reads",
                "PacBio subreads",
                "SNP effect matrix",
                "TF binding scores",
                "alignments",
                "barcode onlist",
                "barcode replacement",
                "barcode to TF overexpression mapping",
                "barcode to element mapping",
                "barcode to hashtag mapping",
                "barcode to sample mapping",
                "barcode to variant mapping",
                "bin paired count",
                "biological_context",
                "cell hashing barcodes",
                "coding variant effects",
                "coding_variants",
                "complexes",
                "complexes_complexes",
                "complexes_proteins",
                "complexes_terms",
                "contact matrix",
                "control signal",
                "detected tissue",
                "differential chromatin contact quantifications",
                "differential element quantifications",
                "differential gene expression quantifications",
                "differential peak quantifications",
                "differential transcript expression quantifications",
                "diseases_genes",
                "documentation (readme)",
                "drugs",
                "edge weights",
                "editing templates",
                "element quantifications",
                "element to gene predictions",
                "elements reference",
                "elements_genes",
                "exclusion list",
                "external source data",
                "feature weights",
                "fiducial alignment",
                "filtered feature barcode matrix",
                "fold change over control",
                "fragments",
                "gene quantifications",
                "genes",
                "genes_genes",
                "genes_pathways",
                "genes_terms",
                "genes_transcripts",
                "genome index",
                "genome reference",
                "genomic_elements",
                "genomic_elements_genes",
                "genomic_elements_genes_biosamples",
                "genomic_elements_genes_biosamples_donors",
                "genomic_elements_genes_biosamples_treatments_chebi",
                "genomic_elements_genes_biosamples_treatments_proteins",
                "genomic_elements_genomic_elements",
                "go_terms_proteins",
                "graph structure",
                "guide RNA sequences",
                "guide quantifications",
                "high resolution tissue",
                "inclusion list",
                "index",
                "kallisto single cell RNAseq output",
                "loci",
                "low resolution tissue",
                "machine learning model features",
                "methylated reads",
                "model parameters",
                "motifs",
                "motifs_proteins",
                "nascent transcriptome index",
                "neural network architecture",
                "ontology_terms",
                "ontology_terms_ontology_terms",
                "pathways",
                "pathways_pathways",
                "peak quantifications",
                "peaks",
                "position weight matrix",
                "prime editing guide RNA sequences",
                "primer sequences",
                "primers table",
                "primers track",
                "protein language model",
                "protein to protein interaction score",
                "proteins",
                "proteins_proteins",
                "raw feature barcode matrix",
                "raw signal",
                "read-depth signal",
                "reads",
                "reporter elements",
                "reporter experiment",
                "reporter experiment barcode",
                "reporter genomic element effects",
                "reporter genomic variant effects",
                "reporter variants",
                "sample barcode count matrix",
                "sample sort parameters",
                "scale factors",
                "seqspec",
                "sequence attributes",
                "signal",
                "signal of all reads",
                "signal of unique reads",
                "signal p-value",
                "sparse gene count matrix",
                "sparse peak count matrix",
                "sparse transcript count matrix",
                "spike-ins",
                "studies",
                "studies_variants",
                "studies_variants_phenotypes",
                "target transcripts",
                "tissue positions",
                "transcript quantifications",
                "transcriptome alignments",
                "transcriptome annotations",
                "transcriptome index",
                "transcriptome reference",
                "transcripts",
                "transcripts_proteins",
                "unfiltered global differential expression",
                "unfiltered local differential expression",
                "variant binding effects",
                "variant effects",
                "variant functional predictions",
                "variant localization impacts",
                "variant to element mapping",
                "variants",
                "variants_coding_variants",
                "variants_diseases",
                "variants_diseases_genes",
                "variants_drugs",
                "variants_drugs_genes",
                "variants_genes",
                "variants_genes_terms",
                "variants_genomic_elements",
                "variants_phenotypes",
                "variants_phenotypes_studies",
                "variants_proteins",
                "variants_proteins_biosamples",
                "variants_proteins_phenotypes",
                "variants_proteins_terms",
                "variants_variants",
                "vector sequences"
              ]
            }
          },
          "output_content_types": {
            "title": "Output Content Types",
            "description": "The content types produced as output by the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Output Content Type",
              "description": "A content type produced as output by the analysis step.",
              "type": "string",
              "enum": [
                "DNA footprint scores",
                "MPRA sequence designs",
                "Nanopore reads",
                "PacBio subreads",
                "SNP effect matrix",
                "TF binding scores",
                "alignments",
                "barcode onlist",
                "barcode replacement",
                "barcode to TF overexpression mapping",
                "barcode to element mapping",
                "barcode to hashtag mapping",
                "barcode to sample mapping",
                "barcode to variant mapping",
                "bin paired count",
                "biological_context",
                "cell hashing barcodes",
                "coding variant effects",
                "coding_variants",
                "complexes",
                "complexes_complexes",
                "complexes_proteins",
                "complexes_terms",
                "contact matrix",
                "control signal",
                "detected tissue",
                "differential chromatin contact quantifications",
                "differential element quantifications",
                "differential gene expression quantifications",
                "differential peak quantifications",
                "differential transcript expression quantifications",
                "diseases_genes",
                "documentation (readme)",
                "drugs",
                "edge weights",
                "editing templates",
                "element quantifications",
                "element to gene predictions",
                "elements reference",
                "elements_genes",
                "exclusion list",
                "external source data",
                "feature weights",
                "fiducial alignment",
                "filtered feature barcode matrix",
                "fold change over control",
                "fragments",
                "gene quantifications",
                "genes",
                "genes_genes",
                "genes_pathways",
                "genes_terms",
                "genes_transcripts",
                "genome index",
                "genome reference",
                "genomic_elements",
                "genomic_elements_genes",
                "genomic_elements_genes_biosamples",
                "genomic_elements_genes_biosamples_donors",
                "genomic_elements_genes_biosamples_treatments_chebi",
                "genomic_elements_genes_biosamples_treatments_proteins",
                "genomic_elements_genomic_elements",
                "go_terms_proteins",
                "graph structure",
                "guide RNA sequences",
                "guide quantifications",
                "high resolution tissue",
                "inclusion list",
                "index",
                "kallisto single cell RNAseq output",
                "loci",
                "low resolution tissue",
                "machine learning model features",
                "methylated reads",
                "model parameters",
                "motifs",
                "motifs_proteins",
                "nascent transcriptome index",
                "neural network architecture",
                "ontology_terms",
                "ontology_terms_ontology_terms",
                "pathways",
                "pathways_pathways",
                "peak quantifications",
                "peaks",
                "position weight matrix",
                "prime editing guide RNA sequences",
                "primer sequences",
                "primers table",
                "primers track",
                "protein language model",
                "protein to protein interaction score",
                "proteins",
                "proteins_proteins",
                "raw feature barcode matrix",
                "raw signal",
                "read-depth signal",
                "reads",
                "reporter elements",
                "reporter experiment",
                "reporter experiment barcode",
                "reporter genomic element effects",
                "reporter genomic variant effects",
                "reporter variants",
                "sample barcode count matrix",
                "sample sort parameters",
                "scale factors",
                "seqspec",
                "sequence attributes",
                "signal",
                "signal of all reads",
                "signal of unique reads",
                "signal p-value",
                "sparse gene count matrix",
                "sparse peak count matrix",
                "sparse transcript count matrix",
                "spike-ins",
                "studies",
                "studies_variants",
                "studies_variants_phenotypes",
                "target transcripts",
                "tissue positions",
                "transcript quantifications",
                "transcriptome alignments",
                "transcriptome annotations",
                "transcriptome index",
                "transcriptome reference",
                "transcripts",
                "transcripts_proteins",
                "unfiltered global differential expression",
                "unfiltered local differential expression",
                "variant binding effects",
                "variant effects",
                "variant functional predictions",
                "variant localization impacts",
                "variant to element mapping",
                "variants",
                "variants_coding_variants",
                "variants_diseases",
                "variants_diseases_genes",
                "variants_drugs",
                "variants_drugs_genes",
                "variants_genes",
                "variants_genes_terms",
                "variants_genomic_elements",
                "variants_phenotypes",
                "variants_phenotypes_studies",
                "variants_proteins",
                "variants_proteins_biosamples",
                "variants_proteins_phenotypes",
                "variants_proteins_terms",
                "variants_variants",
                "vector sequences"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Full name of the analysis step."
          },
          "analysis_step_versions": {
            "title": "Analysis Step Versions",
            "description": "The analysis step versions associated with this analysis step.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Analysis Step Version",
              "type": "string"
            }
          }
        }
      },
      "AnalysisStepVersion": {
        "title": "Analysis Step Version",
        "description": "A step version in a computational analysis workflow.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step": {
            "title": "Analysis Step",
            "description": "The analysis step which this version belongs to.",
            "type": "string"
          },
          "software_versions": {
            "title": "Software Versions",
            "description": "The software versions used in this analysis step versions.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Software Versions",
              "description": "The software versions used in this analysis step versions.",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Award": {
        "title": "Grant",
        "description": "A grant providing financial support for a scientific project. For example, HG012076 supporting \"Single-cell Mapping Center for Human Regulatory Elements and Gene Activity.\"",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "The grant name from the NIH database, if applicable.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The official grant number from the NIH database, if applicable",
            "type": "string",
            "pattern": "^[A-Za-z0-9\\-]+$"
          },
          "start_date": {
            "title": "Start Date",
            "description": "The date when the award begins.",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "description": "The date when the award concludes.",
            "type": "string"
          },
          "pis": {
            "title": "Principal Investigators",
            "description": "Principal Investigator(s) of the grant.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Investigator",
              "description": "User object of the investigator.",
              "type": "string"
            }
          },
          "contact_pi": {
            "title": "Contact P.I.",
            "description": "The contact Principal Investigator of the grant.",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "description": "The collection of biological data related to a single initiative, originating from a consortium.",
            "type": "string",
            "enum": [
              "community",
              "ENCODE",
              "IGVF",
              "IGVF affiliate"
            ]
          },
          "viewing_group": {
            "title": "View Access Group",
            "description": "The group that determines which set of data the user has permission to view.",
            "type": "string",
            "enum": [
              "community",
              "IGVF"
            ]
          },
          "component": {
            "title": "Project Component",
            "description": "The project component the award is associated with.",
            "type": "string",
            "enum": [
              "affiliate",
              "data analysis",
              "data coordination",
              "functional characterization",
              "mapping",
              "networks",
              "predictive modeling"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the award."
          }
        }
      },
      "Biomarker": {
        "title": "Biomarker",
        "description": "A biomarker, such as a cell surface protein, that is measured, detected, or used for sample sorting based upon the biomarker's presence, absence, or quantification. For example, a CD19 positive biomarker that was detected in a sample.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The biomarker name.",
            "type": "string"
          },
          "classification": {
            "title": "Classification",
            "description": "Sample specific biomarker.",
            "type": "string",
            "enum": [
              "cell surface protein",
              "marker gene"
            ]
          },
          "quantification": {
            "title": "Quantification",
            "description": "The biomarker association to the biosample, disease or other condition.  This can be the absence of the biomarker or the presence of the biomarker in some low, intermediate or high quantity.",
            "type": "string",
            "enum": [
              "negative",
              "positive",
              "low",
              "intermediate",
              "high"
            ]
          },
          "synonyms": {
            "title": "Synonyms",
            "description": "Alternate names for this biomarker.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Synonym",
              "type": "string"
            }
          },
          "gene": {
            "title": "Gene",
            "description": "Biomarker gene.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "name_quantification": {
            "title": "Name and Quantification",
            "type": "string",
            "description": "A concatenation of the name and quantification of the biomarker."
          },
          "biomarker_for": {
            "title": "Biomarker For",
            "description": "The samples which have been confirmed to have this biomarker.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker For",
              "type": "string"
            }
          }
        }
      },
      "Document": {
        "title": "Document",
        "description": "A document with additional information regarding another object submitted to the data portal. For example, a plasmid map document associated with a transduced cell line sample.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "document_type": {
            "title": "Document Type",
            "description": "The category that best describes the document.",
            "type": "string",
            "enum": [
              "cell fate change protocol",
              "characterization",
              "computational protocol",
              "experimental protocol",
              "file format specification",
              "image",
              "library structure seqspec",
              "model source data",
              "plate map",
              "plasmid map",
              "plasmid sequence",
              "quality control report",
              "standards"
            ]
          },
          "characterization_method": {
            "title": "Characterization Method",
            "description": "The method used for the characterization.",
            "type": "string",
            "enum": [
              "FACS",
              "immunoblot",
              "immunofluorescence",
              "immunoprecipitation",
              "mass spectrometry",
              "PCR",
              "restriction digest",
              "RT-qPCR",
              "sequencing"
            ]
          },
          "urls": {
            "title": "URL",
            "description": "External resources with additional information to the document.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "URL",
              "description": "An external resource with additional information to the document.",
              "type": "string"
            }
          },
          "standardized_file_format": {
            "title": "Standardized File Format",
            "description": "Specifies whether this format is an IGVF-standardized file format defined by Focus Groups or produced by a uniform pipeline.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the document."
          }
        }
      },
      "HumanDonor": {
        "title": "Human Donor",
        "description": "A human donor of any biosample, including cell lines. Submission of any sample originating from a human donor requires submission of information about the relevant donor. For example, submission of the donor of K562 is a prerequisite for submission of any K562 cell line samples.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens"
            ]
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(^GEO:SAMN\\d+$)|(^ENCODE:ENCDO\\d{3}[A-Z]{3}$)|^(IGSR):.+$"
            }
          },
          "sex": {
            "title": "Sex",
            "description": "Sex of the donor.",
            "type": "string",
            "enum": [
              "male",
              "female",
              "unspecified"
            ]
          },
          "phenotypic_features": {
            "title": "Phenotypic Features",
            "description": "A list of associated phenotypic features of the donor.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Phenotypic Feature",
              "description": "Phenotypic feature",
              "type": "string"
            }
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "related_donors": {
            "title": "Related Donors",
            "description": "Familial relations of this donor.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Related Donor",
              "description": "Familial relation of this donor.",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "donor",
                "relationship_type"
              ],
              "properties": {
                "donor": {
                  "title": "Related Donor Identifier",
                  "description": "An identifier for the related donor.",
                  "type": "string"
                },
                "relationship_type": {
                  "title": "Relationship Type",
                  "description": "A descriptive term for the related donor\u2019s relationship to this donor.",
                  "type": "string",
                  "enum": [
                    "aunt",
                    "child",
                    "first cousin once removed",
                    "first cousin",
                    "fraternal twin",
                    "grandparent",
                    "half-sibling",
                    "niece",
                    "nephew",
                    "parent",
                    "paternal twin",
                    "sibling",
                    "second cousin",
                    "uncle"
                  ]
                }
              }
            }
          },
          "ethnicities": {
            "title": "Ethnicity",
            "description": "Ethnicity of the donor.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "African American",
                "African Caribbean",
                "Arab",
                "Asian",
                "Black",
                "Black African",
                "Chinese",
                "Colombian",
                "Dai Chinese",
                "Esan",
                "Eskimo",
                "European",
                "Gambian",
                "Han Chinese",
                "Hispanic",
                "Indian",
                "Indigenous in North America",
                "Japanese",
                "Kinh Vietnamese",
                "Luhya",
                "Maasai",
                "Mende",
                "Native Hawaiian",
                "Pacific Islander",
                "Puerto Rican",
                "Yoruba"
              ]
            }
          },
          "human_donor_identifiers": {
            "title": "Human Donor Identifiers",
            "type": "array",
            "description": "Identifiers of this human donor.",
            "uniqueItems": true,
            "items": {
              "title": "Human Donor Identifier",
              "description": "An identifier of this human donor.",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the human donor."
          }
        }
      },
      "RodentDonor": {
        "title": "Rodent Donor",
        "description": "A rodent donor of a biosample. Submission of any sample originating from a rodent donor requires submission of information about the relevant donor. The rodent donor can be a generic representative of an inbred strain, or a unique, individual mouse. For example, submission of a B6 mouse donor is a prerequisite for submission of any B6 mouse samples.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Mus musculus"
            ]
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
              "type": "string",
              "pattern": "^(GEO:SAMN\\d+)|(IMSR_JAX:\\d{6})|(ENCODE:ENCDO\\d{3}[A-Z]{3})$"
            }
          },
          "sex": {
            "title": "Sex",
            "description": "Sex of the donor.",
            "type": "string",
            "enum": [
              "male",
              "female",
              "unspecified"
            ]
          },
          "phenotypic_features": {
            "title": "Phenotypic Features",
            "description": "A list of associated phenotypic features of the donor.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Phenotypic Feature",
              "description": "Phenotypic feature",
              "type": "string"
            }
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "strain_background": {
            "title": "Strain Background",
            "description": "The specific parent strain designation of a non-human donor.",
            "type": "string",
            "enum": [
              "A/J (AJ)",
              "B6129S1F1/J",
              "B6AF1/J",
              "B6CASTF1/J",
              "B6NODF1/J",
              "B6NZOF1/J",
              "B6PWKF1/J",
              "B6WSBF1/J",
              "C57BL/6J (B6)",
              "129S1/SvImJ (129)",
              "NOD/ShiLtJ (NOD)",
              "NZO/H1LtJ (NZO)",
              "CAST/EiJ (CAST)",
              "PWK/PhJ (PWK)",
              "WSB/EiJ (WSB)",
              "CAST (M. m. castaneus)",
              "WSB (M. m. domesticus)",
              "PWK (M. m. musculus)"
            ]
          },
          "strain": {
            "title": "Strain Name",
            "description": "The specific strain designation of a non-human donor.",
            "type": "string"
          },
          "genotype": {
            "title": "Strain Genotype",
            "description": "The genotype of the strain according to accepted nomenclature conventions.",
            "type": "string"
          },
          "individual_rodent": {
            "title": "Individual Rodent",
            "description": "This rodent donor represents an individual rodent.",
            "type": "boolean"
          },
          "rodent_identifier": {
            "title": "Rodent Identifier",
            "description": "The identifier for this individual rodent donor.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the rodent donor."
          }
        }
      },
      "AlignmentFile": {
        "title": "Alignment File",
        "description": "A file containing alignment data in bam or cram format.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "Cast - GRCm39",
              "GRCm39",
              "mm10",
              "GRCh38, mm10",
              "custom"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Reference File",
              "type": "string",
              "description": "Link to a reference file used to generate this file."
            }
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling.",
            "type": "boolean"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bam",
              "cram"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "read_count": {
            "title": "Read Count",
            "description": "Number of reads in a bam file. Including both mapped, unmapped, and multi-mapped read counts.",
            "type": "integer",
            "minimum": 0
          },
          "redacted": {
            "title": "Redacted",
            "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information.",
            "type": "boolean"
          },
          "base_modifications": {
            "title": "Base Modifications",
            "description": "The chemical modifications to bases in a DNA sequence that are detected in this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Base Modification",
              "description": "The chemical modification to bases in a DNA sequence that is detected in this file.",
              "type": "string",
              "enum": [
                "4mC",
                "5hmC",
                "5mC",
                "6mA",
                "inosine",
                "pseudouridine"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the alignment file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the alignment file."
          }
        }
      },
      "ConfigurationFile": {
        "title": "Configuration File",
        "description": "A file containing configuration settings or information defining the structure of other data files' content or input parameters of prediction models.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "yaml",
              "json",
              "tsv"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "seqspec_of": {
            "title": "Seqspec Of",
            "description": "Sequence files this file is a seqspec of.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Seqspec Of",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the configuration file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "validate_onlist_files": {
            "title": "Validate Onlist Files",
            "type": "boolean",
            "description": "Whether checkfiles will validate the onlist files."
          }
        }
      },
      "GenomeBrowserAnnotationFile": {
        "title": "Genome Browser Annotation File",
        "description": "A binary file containing genome annotations which are indexed and can be visualized on a genome browser.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "cell_type_annotation": {
            "title": "Cell Type Annotation",
            "description": "The inferred cell type this file is associated with based on single-cell expression profiling.",
            "type": "string"
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "Cast - GRCm39",
              "GRCm39",
              "mm10",
              "GRCh38, mm10",
              "custom"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bigBed"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the genome browser annotation file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "ImageFile": {
        "title": "Image File",
        "description": "A file containing image data.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "jpg",
              "png"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the image file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "IndexFile": {
        "title": "Index File",
        "description": "A binary file which is indexed.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bai",
              "crai",
              "tbi"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the index file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "assembly": {
            "title": "Genome Assembly",
            "type": "string",
            "description": "The assembly associated with the index file."
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "type": "string",
            "description": "The annotation and version of the reference resource."
          },
          "filtered": {
            "title": "Filtered",
            "type": "boolean",
            "description": "Indicates whether reads that did not pass a filtering step, such as PCR duplicates, have been removed from the file."
          },
          "redacted": {
            "title": "Redacted",
            "type": "boolean",
            "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information."
          }
        }
      },
      "MatrixFile": {
        "title": "Matrix File",
        "description": "A file containing quantification data in a multi-dimension format.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Reference File",
              "type": "string",
              "description": "Link to a reference file used to generate this file."
            }
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling.",
            "type": "boolean"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "h5ad",
              "hdf5",
              "mtx",
              "pkl",
              "Robj",
              "tar",
              "hic",
              "cool",
              "mcool"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "principal_dimension": {
            "title": "Principal Dimension",
            "description": "The principal dimension of the matrix.",
            "type": "string",
            "enum": [
              "cell",
              "fragment",
              "gene",
              "time",
              "treatment",
              "variant",
              "genomic position",
              "spot barcode"
            ]
          },
          "secondary_dimensions": {
            "title": "Secondary Dimensions",
            "description": "The secondary, tertiary....n levels of dimensions of the matrix.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Secondary Dimensions",
              "type": "string",
              "enum": [
                "antibody capture",
                "barcode count",
                "cell",
                "CRISPR guide capture",
                "fragment",
                "gene",
                "gene expression",
                "genomic position",
                "peak",
                "time",
                "treatment",
                "UMI count",
                "variant"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the matrix file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the matrix file."
          }
        }
      },
      "ModelFile": {
        "title": "Model File",
        "description": "A file containing a trained model.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "externally_hosted": {
            "title": "Externally Hosted",
            "description": "Indicates whether the file is externally hosted and not stored on portal.",
            "type": "boolean"
          },
          "external_host_url": {
            "title": "External Host URL",
            "description": "A link to the resource where the file is externally hosted.",
            "type": "string"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "^(Kipoi):.+$"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "hdf5",
              "json",
              "pkl",
              "pt",
              "tar",
              "tsv"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "catalog_adapters": {
            "title": "IGVF Catalog Adapters",
            "description": "IGVF Catalog Adapters that ingests this file",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "IGVF Catalog Adapter",
              "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file.",
              "type": "string",
              "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the model file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "ReferenceFile": {
        "title": "Reference File",
        "description": "A file containing diverse reference related information.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "source_url": {
            "title": "Source URL",
            "description": "Link to external resource, such as NCBI or GENCODE, where the reference data was obtained.",
            "type": "string"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the reference data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "Cast - GRCm39",
              "GRCm39",
              "mm10",
              "GRCh38, mm10",
              "custom"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "^(GENCODE|GRC|ENSEMBL|ENCODE):.+$"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bed",
              "csv",
              "dat",
              "fasta",
              "gaf",
              "gds",
              "gtf",
              "obo",
              "owl",
              "PWM",
              "tar",
              "tsv",
              "txt",
              "vcf",
              "xml"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "catalog_adapters": {
            "title": "IGVF Catalog Adapters",
            "description": "IGVF Catalog Adapters that ingests this file",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "IGVF Catalog Adapter",
              "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file.",
              "type": "string",
              "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py"
            }
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "external": {
            "title": "External",
            "description": "Indicates whether the file was obtained from an external, non-IGVF source.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the reference file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "SequenceFile": {
        "title": "Sequence File",
        "description": "A file containing sequencing results in bam, fastq, or pod5 formats.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "externally_hosted": {
            "title": "Externally Hosted",
            "description": "Indicates whether the file is externally hosted and not stored on portal.",
            "type": "boolean"
          },
          "external_host_url": {
            "title": "External Host URL",
            "description": "A link to the resource where the file is externally hosted.",
            "type": "string"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "^(SRA:(SRR|SRX)\\d+)$"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bam",
              "fastq",
              "pod5"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "flowcell_id": {
            "title": "Flowcell ID",
            "description": "The alphanumeric identifier for the flowcell of a sequencing machine.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+$"
          },
          "lane": {
            "title": "Lane",
            "description": "An integer identifying the lane of a sequencing machine.",
            "type": "integer",
            "minimum": 1
          },
          "read_count": {
            "title": "Read Count",
            "description": "Number of reads in a fastq file.",
            "type": "integer",
            "minimum": 0
          },
          "minimum_read_length": {
            "title": "Minimum Read Length",
            "description": "For high-throughput sequencing, the minimum number of contiguous nucleotides determined by sequencing.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300000000
          },
          "maximum_read_length": {
            "title": "Maximum Read Length",
            "description": "For high-throughput sequencing, the maximum number of contiguous nucleotides determined by sequencing.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300000000
          },
          "mean_read_length": {
            "title": "Mean Read Length",
            "description": "For high-throughput sequencing, the mean number of contiguous nucleotides determined by sequencing.",
            "type": "number",
            "minimum": 0,
            "maximum": 300000000
          },
          "seqspec_document": {
            "title": "Seqspec Document",
            "description": "A seqspec document describing the library and read structure.",
            "type": "string"
          },
          "sequencing_platform": {
            "title": "Sequencing Platform",
            "description": "The measurement device used to produce sequencing data.",
            "type": "string"
          },
          "sequencing_kit": {
            "title": "Sequencing Kit",
            "description": "A reagent kit used with a library to prepare it for sequencing.",
            "type": "string",
            "enum": [
              "AVITI 2x75 Sequencing Kit Cloudbreak High Output",
              "AVITI 2x150 Sequencing Kit Cloudbreak High Output",
              "HiSeq SBS Kit v4",
              "HiSeq SR Cluster Kit v4-cBot-HS",
              "HiSeq PE Cluster Kit v4-cBot-HS",
              "HiSeq SR Rapid Cluster Kit v2",
              "HiSeq PE Rapid Cluster Kit v2",
              "HiSeq Rapid SBS Kit v2",
              "HiSeq 3000/4000 SBS Kit",
              "HiSeq 3000/4000 SR Cluster Kit",
              "HiSeq 3000/4000 PE Cluster Kit",
              "MiSeq Reagent Kit v2",
              "NextSeq 500 Mid Output Kit",
              "NextSeq 500 High Output Kit",
              "NextSeq 500 Mid Output v2 Kit",
              "NextSeq 500 High Output v2 Kit",
              "NextSeq 500/550 Mid-Output v2.5 Kit",
              "NextSeq 500/550 High-Output v2.5 Kit",
              "TG NextSeq 500/550 Mid-Output Kit v2.5",
              "TG NextSeq 500/550 High-Output Kit v2.5",
              "NextSeq 1000/2000 P1 Reagent Kit",
              "NextSeq 1000/2000 P2 Reagent Kit",
              "NextSeq 1000/2000 P3 Reagent Kit",
              "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
              "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
              "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
              "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
              "NovaSeq 6000 SP Reagent Kit v1.5",
              "NovaSeq 6000 S1 Reagent Kit v1.5",
              "NovaSeq 6000 S2 Reagent Kit v1.5",
              "NovaSeq 6000 S4 Reagent Kit v1.5",
              "NovaSeq X Series 1.5B Reagent Kit",
              "NovaSeq X Series 10B Reagent Kit",
              "NovaSeq X Series 25B Reagent Kit",
              "ONT Ligation Sequencing Kit V14",
              "Sequel sequencing kit 3.0",
              "Sequel II sequencing kit 2.0",
              "Singular G4 F2 Reagent Kit"
            ]
          },
          "sequencing_run": {
            "title": "Sequencing Run",
            "description": "An ordinal number indicating which sequencing run of the associated library that the file belongs to.",
            "type": "integer",
            "minimum": 1
          },
          "illumina_read_type": {
            "title": "Illumina Read Type",
            "description": "The read type of the file. Relevant only for files produced using an Illumina sequencing platform.",
            "type": "string",
            "enum": [
              "R1",
              "R2",
              "R3",
              "I1",
              "I2"
            ]
          },
          "index": {
            "title": "Index",
            "description": "An Illumina index associated with the file.",
            "type": "string"
          },
          "base_modifications": {
            "title": "Base Modifications",
            "description": "The chemical modifications to bases in a DNA sequence that are detected in this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Base Modification",
              "description": "The chemical modification to bases in a DNA sequence that is detected in this file.",
              "type": "string",
              "enum": [
                "4mC",
                "5hmC",
                "5mC",
                "6mA",
                "inosine",
                "pseudouridine"
              ]
            }
          },
          "read_names": {
            "title": "Read Names",
            "description": "The read names of a sequence file based on how it will be used by uniform pipelines.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Read Name",
              "description": "The read name of a sequence file based on how it will be used by uniform pipelines.",
              "type": "string",
              "enum": [
                "Read 1",
                "Read 2",
                "Barcode index",
                "Barcode forward",
                "UMI",
                "Barcode reverse"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sequence file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "seqspecs": {
            "title": "Seqspecs",
            "description": "Link(s) to the associated seqspec YAML configuration file(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Seqspecs",
              "type": "string"
            }
          }
        }
      },
      "SignalFile": {
        "title": "Signal File",
        "description": "A file containing analyzed sequencing data in signal form using a bigwig or npz format.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "cell_type_annotation": {
            "title": "Cell Type Annotation",
            "description": "The inferred cell type this file is associated with based on single-cell expression profiling.",
            "type": "string"
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "Cast - GRCm39",
              "GRCm39",
              "mm10",
              "GRCh38, mm10",
              "custom"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Reference File",
              "type": "string",
              "description": "Link to a reference file used to generate this file."
            }
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling.",
            "type": "boolean"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bigWig",
              "npz"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "strand_specificity": {
            "title": "Strand Specificity",
            "description": "The strandedness of the signal file: plus, minus, or unstranded.",
            "type": "string",
            "enum": [
              "plus",
              "minus",
              "unstranded"
            ]
          },
          "normalized": {
            "title": "Normalized",
            "description": "Indicates if the signal file is normalized.",
            "type": "boolean"
          },
          "start_view_position": {
            "title": "Start View Position",
            "description": "The 0-based coordinate for the default starting position when viewing the signal in a genome browser.",
            "type": "string",
            "pattern": "^(chr(X|Y|M|[1-9]|1[0-9]|2[0-2]):[0-9]+)$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the signal file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the signal file."
          }
        }
      },
      "TabularFile": {
        "title": "Tabular File",
        "description": "A file containing textual data with a tabular structure.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "cell_type_annotation": {
            "title": "Cell Type Annotation",
            "description": "The inferred cell type this file is associated with based on single-cell expression profiling.",
            "type": "string"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the tabular data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "Cast - GRCm39",
              "GRCm39",
              "mm10",
              "GRCh38, mm10",
              "custom"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates whether the file has gone through some filtering step, for example, removal of PCR duplicates or filtering based on significance calling.",
            "type": "boolean"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Derived From",
              "type": "string"
            }
          },
          "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean"
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bed",
              "bedpe",
              "csv",
              "gtf",
              "tsv",
              "vcf"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "File Format Specifications Document",
              "type": "string"
            }
          },
          "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated",
              "validation exempted"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "type": "string"
          },
          "catalog_adapters": {
            "title": "IGVF Catalog Adapters",
            "description": "IGVF Catalog Adapters that ingests this file",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "IGVF Catalog Adapter",
              "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file.",
              "type": "string",
              "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the tabular file."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated In",
              "type": "string"
            }
          },
          "input_file_for": {
            "title": "Input File For",
            "description": "The files which are derived from this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File For",
              "type": "string"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene List For",
              "type": "string"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Loci List For",
              "type": "string"
            }
          },
          "quality_metrics": {
            "title": "Quality Metrics",
            "description": "The quality metrics that are associated with this file.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric",
              "type": "string"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assay from the file set this file belongs to.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay from the file set this file belongs to.",
              "type": "string"
            }
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow used to produce this file.",
            "type": "string"
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "barcode_map_for": {
            "title": "Barcode Map For",
            "description": "Link(s) to the Multiplexed samples using this file as barcode map.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Barcode Map For",
              "type": "string"
            }
          },
          "primer_design_for": {
            "title": "Primer Design For",
            "description": "Link(s) to the MeasurementSets using this file as a primer design.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Primer Design For",
              "type": "string"
            }
          }
        }
      },
      "AnalysisSet": {
        "title": "Analysis Set",
        "description": "A file set for analyses. Analysis sets represent the results of a computational analysis of raw genomic data or other analyses.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input_file_sets": {
            "title": "Input File Sets",
            "description": "The file set(s) required for this analysis.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File Set",
              "description": "A file set that serves as input for this file set.",
              "type": "string"
            }
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": []
          },
          "samples": {
            "title": "Samples",
            "description": "Samples associated with this analysis set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "Sample associated with this analysis set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this analysis set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor of a sample associated with this analysis set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The level of this analysis set.",
            "type": "string",
            "enum": [
              "intermediate analysis",
              "principal analysis"
            ]
          },
          "external_image_data_url": {
            "title": "External Image Data URL",
            "description": "Links to the external site where images and related data produced by this analysis are stored.",
            "type": "string",
            "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$"
          },
          "demultiplexed_samples": {
            "title": "Demultiplexed Samples",
            "description": "The sample(s) associated with this analysis set inferred through demultiplexing.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Demultiplexed Sample",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assays that produced data analyzed in the analysis set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay that produced data analyzed in the analysis set.",
              "type": "string"
            }
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for conducting the assay on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "sample_summary": {
            "title": "Simplified Sample Summary",
            "description": "A summary of the samples associated with input file sets of this analysis set.",
            "type": "string"
          },
          "functional_assay_mechanisms": {
            "title": "Functional Assay Mechanisms",
            "description": "The biological processes measured by the functional assays.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Phenotype Term",
              "type": "string"
            }
          },
          "workflows": {
            "title": "Workflows",
            "description": "A workflow for computational analysis of genomic data. A workflow is made up of analysis steps.",
            "type": "array",
            "items": {
              "title": "Workflow",
              "type": "string"
            }
          }
        }
      },
      "AuxiliarySet": {
        "title": "Auxiliary Set",
        "description": "Auxiliary set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of nucleic acids of a sample that are a proxy to some vital information and necessary for the analysis of an associated measurement set. Auxiliary sets usually would not provide any information about the transcriptome or the genome of the sample in question. For example auxiliary sets would include the sequencing of barcodes that correspond to the elements introduced into cells, or sequencing of guide RNA coding sequences in the cells. The files hosted in the auxiliary sets are relevant for the analysis, but they by themselves are not assessing much of the biology of the sample being analyzed.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": []
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "A sample associated with this file set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this auxiliary set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor of a sample associated with this auxiliary set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this auxiliary file set.",
            "type": "string",
            "enum": [
              "cell hashing barcode sequencing",
              "cell sorting",
              "circularized RNA barcode detection",
              "gRNA sequencing",
              "lipid-conjugated oligo sequencing",
              "MORF barcode sequencing",
              "quantification DNA barcode sequencing"
            ]
          },
          "barcode_map": {
            "title": "Link to barcode map tabular file",
            "description": "The link to the barcode mapping tabular file.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "measurement_sets": {
            "title": "Measurement Sets",
            "description": "The measurement sets that link to this auxiliary set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Measurement Set",
              "type": "string"
            }
          }
        }
      },
      "ConstructLibrarySet": {
        "title": "Construct Library Set",
        "description": "Construct library set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of a library prior to its delivery into the samples being investigated. For example sequencing results of guide RNAs after cloning them but prior to their delivery to the actual samples under investigation. The results thus represent the sequencing output of the guides that are then introduced into cells, but may not always correspond to what exact guides ended up being delivered or expressed. Not all construct library sets will end up having FASTQs or any other files in them. For example if the lab chooses not to sequence their guide library prior to delivery, no FASTQs will be required in that case. Construct library sets should not be associated with any samples because they are designed to capture the library prior to its delivery and hence, has no relation to the sample that will get the plasmids eventually.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "control_file_sets": {
            "title": "Controls",
            "description": "File sets that can serve as scientific controls for this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Control",
              "description": "File sets that can serve as scientific controls for this file set.",
              "type": "string"
            }
          },
          "small_scale_loci_list": {
            "title": "Small Scale Loci List",
            "description": "A small scale (<=100) list of specific chromosomal region(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Locus",
              "type": "object",
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "additionalProperties": false,
              "properties": {
                "assembly": {
                  "title": "Mapping assembly",
                  "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "GRCm39"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z_]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The 1-based, closed (inclusive) starting coordinate.",
                  "type": "integer",
                  "minimum": 1
                },
                "end": {
                  "title": "End",
                  "description": "The 1-based, closed (inclusive) ending coordinate.",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          "large_scale_loci_list": {
            "title": "Large Scale Loci List",
            "description": "A large scale list (>100) of specific chromosomal regions.",
            "type": "string"
          },
          "small_scale_gene_list": {
            "title": "Small Scale Gene List",
            "description": "The specific, small scale list of (<=100) gene(s) this construct library was designed to target. This property differs from targeted_genes in Measurement Set, which describes genes targeted for binding sites or used for sorting by expression.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "large_scale_gene_list": {
            "title": "Large Scale Gene List",
            "description": "The large scale list of (>100 genes) this construct library was designed to target.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The type or category of this construct library set.",
            "type": "string",
            "enum": [
              "guide library",
              "reporter library",
              "expression vector library",
              "editing template library"
            ]
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": [
              "control transduction",
              "non-targeting"
            ]
          },
          "scope": {
            "title": "Library Construct Scope",
            "description": "The scope or scale that this construct library is designed to target.",
            "type": "string",
            "enum": [
              "tile",
              "exon",
              "genes",
              "loci",
              "genome-wide",
              "interactors",
              "alleles",
              "targeton",
              "control"
            ]
          },
          "selection_criteria": {
            "title": "Selection Criteria",
            "description": "The criteria used to select the sequence material cloned into the library.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Selection Criterion",
              "description": "The criterion used to select or design the sequence material cloned into the library.",
              "type": "string",
              "enum": [
                "accessible genome regions",
                "candidate cis-regulatory elements",
                "controls",
                "chromatin states",
                "phenotype-associated variants",
                "DNase hypersensitive sites",
                "genes",
                "histone modifications",
                "protein interactors",
                "random selections",
                "sequence variants",
                "synthetic elements",
                "transcription start sites",
                "TF binding sites"
              ]
            }
          },
          "integrated_content_files": {
            "title": "Integrated Content Files",
            "description": "The files containing sequence material of interest either used for insert design or directly cloned into vectors in this library.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Integrated Content File",
              "type": "string"
            }
          },
          "associated_phenotypes": {
            "title": "Associated Phenotype Terms",
            "description": "Ontological terms for diseases or phenotypes associated with the sequence material cloned in this construct library.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Associated Phenotype",
              "type": "string"
            }
          },
          "orf_list": {
            "title": "List of Open Reading Frames (ORF)",
            "description": "List of Open Reading Frame this construct library was designed to target.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "List of Open Reading Frames (ORF).",
              "description": "List of Open Reading Frame this construct library was designed to target.",
              "type": "string"
            }
          },
          "exon": {
            "title": "Exon",
            "description": "An identifier in plain text for the specific exon in an expression vector library. The associated gene must be listed in the small_scale_gene_list property.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "tile": {
            "title": "Tile",
            "description": "The coordinates and an identifier in plain text for the specific tile of a protein region cloned in an expression vector library. The associated gene for this protein must be listed in the small_scale_gene_list or large_scale_gene_list property.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "tile_id": {
                "title": "Tile ID",
                "description": "An identifier in plain text for the specific tile of a protein region cloned in an expression vector library.",
                "type": "string",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
              },
              "tile_start": {
                "title": "Tile Start",
                "description": "The 1-based, closed (inclusive) starting coordinate.",
                "type": "integer",
                "minimum": 1
              },
              "tile_end": {
                "title": "Tile End",
                "description": "The 1-based, closed (inclusive) ending coordinate.",
                "type": "integer",
                "minimum": 1
              }
            }
          },
          "guide_type": {
            "title": "Guide Type",
            "description": "The design of guides used in a CRISPR library, paired-guide (pgRNA) or single-guide (sgRNA).",
            "type": "string",
            "enum": [
              "sgRNA",
              "pgRNA"
            ]
          },
          "tiling_modality": {
            "title": "Tiling Modality",
            "description": "The tiling modality of guides across elements or loci in a CRISPR library.",
            "type": "string",
            "enum": [
              "peak tiling",
              "full tiling",
              "sparse peaks"
            ]
          },
          "average_guide_coverage": {
            "title": "Average Guide Coverage",
            "description": "The average number of guides targeting each element of interest in the library.",
            "type": "number",
            "minimum": 0
          },
          "lower_bound_guide_coverage": {
            "title": "Lower Bound Guide Coverage",
            "description": "Lower bound of the number of guides targeting each element of interest in the library.",
            "type": "integer"
          },
          "upper_bound_guide_coverage": {
            "title": "Upper Bound Guide Coverage",
            "description": "Upper bound of the number of guides targeting each element of interest in the library.",
            "type": "integer"
          },
          "average_insert_size": {
            "title": "Average Insert Size",
            "description": "The average size of the inserts cloned into vectors in the library.",
            "type": "number",
            "minimum": 0
          },
          "lower_bound_insert_size": {
            "title": "Lower Bound Insert Size",
            "description": "Lower bound of the size of the inserts cloned in vectors in the library.",
            "type": "integer"
          },
          "upper_bound_insert_size": {
            "title": "Upper Bound Insert Size",
            "description": "Upper bound of the size of the inserts cloned in vectors in the library.",
            "type": "integer"
          },
          "targeton": {
            "title": "Targeton",
            "description": "An identifier in plain text for the specific targeton in an editing template library. The associated gene must be listed in the small_scale_gene_list property.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "applied_to_samples": {
            "title": "Applied to Samples",
            "description": "The samples that link to this construct library set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Applied to Sample",
              "type": "string"
            }
          }
        }
      },
      "CuratedSet": {
        "title": "Curated Set",
        "description": "A file set for reference files which are utilized in the analysis of IGVF experiments. For example, genomic references from GENCODE.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": []
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "A sample associated with this file set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "A donor associated with this file set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this curated file set.",
            "type": "string",
            "enum": [
              "barcodes",
              "editing templates",
              "elements",
              "external data for catalog",
              "genome",
              "genes",
              "guide RNAs",
              "primer design",
              "training data for predictive models",
              "transcriptome",
              "variants"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "assemblies": {
            "title": "Assemblies",
            "description": "The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Assembly",
              "type": "string"
            }
          },
          "transcriptome_annotations": {
            "title": "Transcriptome Annotations",
            "description": "The annotation versions of the reference resource.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Transcriptome Annotation",
              "type": "string"
            }
          }
        }
      },
      "MeasurementSet": {
        "title": "Measurement Set",
        "description": "Measurement set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of a library prepared from the nucleic acids of the sample that is the main target of the assay. For example sequencing of accessible regions in the genome, or sequencing of the transcriptome of the sample. The assay can either be bulk or single cell type. The sample specific raw sequencing results will be captured in the measurement sets. The files in the measurement sets are specific to the sample being investigated. See auxiliary sets for files that are not a direct result of sequencing the sample under investigation.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "control_file_sets": {
            "title": "Controls",
            "description": "File sets that can serve as scientific controls for this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Control",
              "description": "File sets that can serve as scientific controls for this file set.",
              "type": "string"
            }
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": [
              "baseline",
              "control transduction",
              "low FACS signal",
              "non-targeting",
              "pre-selection",
              "unsorted FACS input",
              "untransfected",
              "untreated"
            ]
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "A sample associated with this file set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this measurement set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor of a sample associated with this measurement set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this measurement set.",
            "type": "string",
            "enum": [
              "experimental data"
            ]
          },
          "assay_term": {
            "title": "Assay Term",
            "description": "The assay used to produce data in this measurement set.",
            "type": "string"
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for conducting the assay on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "preferred_assay_title": {
            "title": "Preferred Assay Title",
            "description": "The custom lab preferred label for the experiment performed in this measurement set.",
            "type": "string",
            "enum": [
              "RNA-seq",
              "scRNA-seq",
              "snRNA-seq",
              "scNT-seq",
              "scNT-seq2",
              "scMultiome-NT-seq",
              "Parse SPLiT-seq",
              "ATAC-seq",
              "varACCESS",
              "ACCESS-ATAC",
              "scATAC-seq",
              "scACCESS-ATAC",
              "snATAC-seq",
              "10x multiome with scMito-seq",
              "DOGMA-seq",
              "10x multiome",
              "10x multiome with MULTI-seq",
              "10X ATAC with Scale pre-indexing",
              "10X RNA with Scale pre-indexing",
              "MULTI-seq",
              "SHARE-seq",
              "Histone ChIP-seq",
              "TF ChIP-seq",
              "MPRA",
              "MPRA (scQer)",
              "electroporated MPRA",
              "AAV-MPRA",
              "lentiMPRA",
              "STARR-seq",
              "SUPERSTARR",
              "Cell painting",
              "Variant painting via fluorescence",
              "Variant painting via immunostaining",
              "smFISH",
              "MERFISH",
              "Proliferation CRISPR screen",
              "Migration CRISPR screen",
              "CRISPR FlowFISH screen",
              "CRISPR FACS screen",
              "CRISPR MACS screen",
              "CRISPR mCherry screen",
              "HCR-FlowFISH screen",
              "scCRISPR screen",
              "Perturb-seq",
              "CERES-seq",
              "TAP-seq",
              "Variant-EFFECTS",
              "SGE",
              "MIAA",
              "snmC-Seq2",
              "snMCT-seq",
              "snM3C-seq",
              "mN2H",
              "semi-qY2H",
              "Y2H",
              "yN2H",
              "VAMP-seq",
              "VAMP-seq (MultiSTEP)",
              "Hi-C",
              "HiCAR",
              "Spatial transcriptomics",
              "HT-recruit",
              "ONT dRNA",
              "ONT Fiber-seq",
              "ONT direct WGS",
              "WGS"
            ]
          },
          "multiome_size": {
            "title": "Multiome Size",
            "description": "The number of datasets included in the multiome experiment this measurement set is a part of.",
            "type": "integer",
            "minimum": 2
          },
          "sequencing_library_types": {
            "title": "Sequencing Library Types",
            "description": "Description of the libraries sequenced in this measurement set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sequencing Library Type",
              "type": "string",
              "enum": [
                "direct RNA",
                "exome capture",
                "mRNA enriched",
                "rRNA depleted",
                "polyA depleted",
                "polyA enriched"
              ]
            }
          },
          "primer_designs": {
            "title": "Primer Designs",
            "description": "The primer designs used in this measurement set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Primer Design",
              "type": "string"
            }
          },
          "strand_specificity": {
            "title": "Strand Specificity",
            "description": "The strand-specificity of the sequencing results within Perturb-seq, scCRISPR screen, TAP-seq, and CERES-seq assays.",
            "type": "string",
            "enum": [
              "5 prime to 3 prime",
              "3 prime to 5 prime",
              "unstranded"
            ]
          },
          "auxiliary_sets": {
            "title": "Auxiliary Sets",
            "description": "The auxiliary sets of files produced alongside raw data from this measurement set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Auxiliary Set",
              "description": "An auxiliary set of files produced alongside raw data from this measurement set.",
              "type": "string"
            }
          },
          "external_image_url": {
            "title": "External Image URL",
            "description": "Links to the external site where images produced by this measurement are stored.",
            "type": "string",
            "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$"
          },
          "targeted_genes": {
            "title": "Targeted Genes",
            "description": "A list of genes targeted in this assay. For example, TF ChIP-seq attempts to identify binding sites of a protein encoded by a specific gene. In CRISPR FlowFISH, the modified samples are sorted based on expression of a specific gene. This property differs from small_scale_gene_list in Construct Library Set, which describes genes targeted by the content integrated in the constructs (such as guide RNAs.)",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "functional_assay_mechanisms": {
            "title": "Functional Assay Mechanisms",
            "description": "The biological processes measured by this functional assay. For example, a VAMP-seq (MultiSTEP) assay measures the effects of variants on protein carboxylation and secretion processes.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Phenotype Term",
              "type": "string"
            }
          },
          "onlist_method": {
            "title": "Onlist Method",
            "description": "The method by which the onlist files will be combined by the seqspec onlist tool to generate the final barcode inclusion list for the single cell uniform pipeline.",
            "type": "string",
            "enum": [
              "no combination",
              "product",
              "multi"
            ]
          },
          "onlist_files": {
            "title": "Onlist Files",
            "description": "The barcode region onlist files listed in associated seqspec yaml files.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Onlist File",
              "type": "string"
            }
          },
          "barcode_replacement_file": {
            "title": "Barcode Replacement File",
            "description": "A file containing original barcodes and the new barcodes used to replace the original barcodes. One common application is to use in preprocessing Parse SPLiT-seq data with the single cell uniform pipeline.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "related_multiome_datasets": {
            "title": "Related Multiome Datasets",
            "description": "Related datasets included in the multiome experiment this measurement set is a part of.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Related Multiome Dataset",
              "description": "Related dataset included in the multiome experiment this measurement set is a part of.",
              "type": "string"
            }
          },
          "externally_hosted": {
            "title": "Externally Hosted",
            "type": "boolean"
          }
        }
      },
      "ModelSet": {
        "title": "Model Set",
        "description": "A file set grouping files that represent trained predictive models. Model file sets contain data files that could be used by predictive modeling software to generate predictions or annotations of genomic features such as genomic variants.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input_file_sets": {
            "title": "Input File Sets",
            "description": "The file set(s) that served as inputs for the derivation of this model set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File Set",
              "description": "A file set that serves as input for this file set.",
              "type": "string"
            }
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": []
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "A sample associated with this file set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "A donor associated with this file set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this predictive model set.",
            "type": "string",
            "enum": [
              "decision tree",
              "logistic regression",
              "neural network",
              "random forest",
              "support vector machine",
              "variant binding effect"
            ]
          },
          "model_name": {
            "title": "Model Name",
            "description": "The custom lab name given to this predictive model set.",
            "type": "string"
          },
          "model_version": {
            "title": "Model Version",
            "description": "The semantic version number for this predictive model set.",
            "type": "string",
            "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          "prediction_objects": {
            "title": "Prediction Objects",
            "description": "The objects this predictive model set is targeting.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Prediction Object",
              "description": "An object this predictive model set is targeting.",
              "type": "string",
              "enum": [
                "coding variants",
                "non-coding variants",
                "all variants",
                "regulatory elements",
                "genes"
              ]
            }
          },
          "model_zoo_location": {
            "title": "Model Zoo Location",
            "description": "The link to the model on the Kipoi repository.",
            "type": "string",
            "pattern": "^https?://kipoi\\.org/models/(\\S+)$"
          },
          "assessed_genes": {
            "title": "Assessed Genes",
            "description": "A list of genes assessed in this model set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "external_input_data": {
            "title": "External Input Data",
            "description": "A tabular file with links to external data utilized for this model.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          },
          "externally_hosted": {
            "title": "Externally Hosted",
            "type": "boolean"
          },
          "software_versions": {
            "title": "Software Versions",
            "description": "The software versions used to produce this predictive model.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Software Version",
              "description": "A software version used to produce this predictive model.",
              "type": "string"
            }
          }
        }
      },
      "PredictionSet": {
        "title": "Prediction Set",
        "description": "A file set of computational predictions. Prediction sets contain results of analyses to predict functions or traits of genomic features.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input_file_sets": {
            "title": "Input File Sets",
            "description": "The file set(s) required for this prediction set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input File Set",
              "description": "A file set that serves as input for this file set.",
              "type": "string"
            }
          },
          "small_scale_loci_list": {
            "title": "Small Scale Loci List",
            "description": "A small scale (<=100) list of specific chromosomal region(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Locus",
              "type": "object",
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "additionalProperties": false,
              "properties": {
                "assembly": {
                  "title": "Mapping assembly",
                  "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "GRCm39"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z_]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The 1-based, closed (inclusive) starting coordinate.",
                  "type": "integer",
                  "minimum": 1
                },
                "end": {
                  "title": "End",
                  "description": "The 1-based, closed (inclusive) ending coordinate.",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          "large_scale_loci_list": {
            "title": "Large Scale Loci List",
            "description": "A large scale list (>100) of specific chromosomal regions whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set.",
            "type": "string"
          },
          "small_scale_gene_list": {
            "title": "Small Scale Gene List",
            "description": "The specific, small scale list of (<=100) gene(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genes whose expression level is predicted in this prediction set. It differs from assessed_genes (see more information under assessed_genes).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "large_scale_gene_list": {
            "title": "Large Scale Gene List",
            "description": "The large scale list of (>100 genes) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genes whose expression level is predicted in this prediction set. It differs from assessed_genes (see more information under assessed_genes).",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "control_type": {
            "title": "Control Type",
            "description": "The type of control this file set represents.",
            "type": "string",
            "enum": []
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "description": "A sample associated with this file set.",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "A donor associated with this file set.",
              "type": "string"
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this prediction set.",
            "type": "string",
            "enum": [
              "activity level",
              "binding effect",
              "functional effect",
              "pathogenicity",
              "protein stability"
            ]
          },
          "scope": {
            "title": "Prediction Scope",
            "description": "The scope or scale that this prediction set is designed to target.",
            "type": "string",
            "enum": [
              "genes",
              "loci",
              "genome-wide"
            ]
          },
          "assessed_genes": {
            "title": "Assessed Genes",
            "description": "A list of gene(s) assessed in this prediction set. This property is used to describe the gene(s) being investigated, especially how the input variables in the prediction set affect some critical functionality of the gene(s). For example, the effect could be predicted from genetic variants on the binding affinity of a transcription factor encoded by a gene (assessed_genes). It differs from small_scale_gene_list and large_scale_gene_list, as these are used when the input variables of the prediction set are genes.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the prediction set."
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "uniqueItems": true,
            "items": {
              "title": "File",
              "type": "string"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set",
              "type": "string"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string"
          },
          "input_for": {
            "title": "Input For",
            "description": "The file sets that use this file set as an input.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Input For",
              "type": "string"
            }
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets associated with the samples of this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "description": "A construct library set associated with a sample of this file set.",
              "type": "string"
            }
          },
          "data_use_limitation_summaries": {
            "title": "Data Use Limitation Summaries",
            "description": "The data use limitation summaries of institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Summary",
              "description": "A combination of the data use limitation and its modifiers.",
              "type": "string"
            }
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "The controlled access of the institutional certificates covering the sample associated with this file set which are signed by the same lab (or their partner lab) as the lab that submitted this file set.",
            "type": "boolean"
          }
        }
      },
      "Gene": {
        "title": "Gene",
        "description": "A gene in the human or mouse genomes. The genes objects in IGVF are imported from GENCODE.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 22",
              "GENCODE 28",
              "GENCODE 32",
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE 47",
              "GENCODE Cast - M32",
              "GENCODE M17",
              "GENCODE M25",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34",
              "GENCODE M36",
              "GENCODE 32, GENCODE M23"
            ]
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "geneid": {
            "title": "ENSEMBL GeneID",
            "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
            "type": "string",
            "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$"
          },
          "symbol": {
            "title": "Gene Symbol",
            "description": "Gene symbol approved by the official nomenclature.",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "description": "The full gene name preferably approved by the official nomenclature.",
            "type": "string"
          },
          "synonyms": {
            "title": "Synonyms",
            "description": "Alternative symbols that have been used to refer to the gene.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Synonym",
              "description": "An alternative symbol/name referring to the gene.",
              "type": "string"
            }
          },
          "study_sets": {
            "title": "Study Sets",
            "description": "The studies of IGVF that this gene was a part of.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Study Set",
              "description": "The study of IGVF that this gene was a part of.",
              "type": "string",
              "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
            }
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Unique identifiers from external resources.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "A unique identifier from external resource (e.g. ENTREZ, HGNC, MGI, FlyBase, WormBase, ENSEMBL, MIM, UniProtKB, Vega, miRBase).",
              "type": "string",
              "pattern": "^((ENTREZ:[1-9][0-9]*)|(HGNC:\\d+)|(MGI:\\d+)|(MIM:\\d+)|(UniProtKB:[0-9A-Z]+)|(Vega:OTT[A-Z]+G\\d+)|(miRBase:MI\\d+)|(IMGT/GENE-DB:[0-9A-Za-z/\\(\\)\\-]+)|(RefSeq:[A-Z]{2}_[\\d.]+)|(GeneCards:[0-9a-zA-Z-]+))$"
            }
          },
          "locations": {
            "title": "Gene Locations",
            "description": "Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene Location",
              "description": "Gene location specified using 1-based, closed coordinates for a specific version of the reference genome assembly.",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "properties": {
                "assembly": {
                  "title": "Mapping Assembly",
                  "description": "The genome assembly to which coordinates relate. e.g. GRCh38.",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "hg19",
                    "Cast - GRCm39",
                    "GRCm39",
                    "mm10",
                    "GRCh38, mm10",
                    "custom"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z_]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The starting coordinate.",
                  "type": "integer",
                  "minimum": 0
                },
                "end": {
                  "title": "End",
                  "description": "The ending coordinate.",
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "version_number": {
            "title": "ENSEMBL GeneID Version Number",
            "description": "Current ENSEMBL GeneID version number of the gene.",
            "type": "string",
            "pattern": "^\\d+?"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "geneid_with_version": {
            "title": "ENSEMBL GeneID With Version",
            "type": "string",
            "description": "The ENSEMBL GeneID concatenated with its version number."
          }
        }
      },
      "Image": {
        "title": "Image",
        "description": "An image to be displayed on an IGVF portal page. This is not a data object.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "image/png",
                  "image/jpeg",
                  "image/gif"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "caption": {
            "title": "Caption",
            "type": "string",
            "description": "The caption of the image."
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "download_url": {
            "title": "Download Url",
            "description": "Download Url",
            "type": "string"
          }
        }
      },
      "InstitutionalCertificate": {
        "title": "Institutional Certificate",
        "description": "An institutional certificate defining the data sharing limitations for data authorized for submission to the IGVF portal.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "certificate_identifier": {
            "title": "Certificate Identifier",
            "description": "A unique identifier for the certificate.",
            "type": "string",
            "pattern": "^IP\\d{3}-\\d{2}$"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Indicator of whether the samples are under controlled access.",
            "type": "boolean"
          },
          "data_use_limitation": {
            "title": "Data Use Limitation",
            "description": "Code indicating the limitations on data use for data generated from the applicable samples.",
            "type": "string",
            "enum": [
              "DS",
              "GRU",
              "HMB",
              "other"
            ]
          },
          "data_use_limitation_modifiers": {
            "title": "Data Use Limitation Modifiers",
            "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Modifier",
              "type": "string",
              "enum": [
                "COL",
                "GSO",
                "IRB",
                "MDS",
                "NPU",
                "PUB"
              ]
            }
          },
          "samples": {
            "title": "Samples",
            "description": "Samples covered by this institutional certificate.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "type": "string"
            }
          },
          "urls": {
            "title": "URL",
            "description": "Link to the institutional certification form.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "URL",
              "description": "An institutional certification form.",
              "type": "string"
            }
          },
          "partner_labs": {
            "title": "Partner Labs",
            "description": "Labs which belong to same institution as the signing PI and can share this institutional certificate.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Partner Lab",
              "type": "string"
            }
          },
          "partner_awards": {
            "title": "Partner Awards",
            "description": "Awards granted to at least one lab that belongs to same institution as the signing PI and can share this institutional certificate.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Partner Award",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the institutional certificate."
          },
          "data_use_limitation_summary": {
            "title": "Data Use Limitation Summary",
            "type": "string",
            "description": "A combination of the data use limitation and its modifiers"
          }
        }
      },
      "Lab": {
        "title": "Lab",
        "description": "A lab that is part of or affiliated with the IGVF consortium.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "A short unique name for the lab, current convention is lower cased and hyphen delimited of PI's first and last name (e.g. john-doe).",
            "type": "string",
            "pattern": "^[a-z0-9\\-]+$"
          },
          "pi": {
            "title": "P.I.",
            "description": "Principle Investigator of the lab.",
            "type": "string"
          },
          "awards": {
            "title": "Award",
            "description": "Grants associated with the lab.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Grant",
              "description": "A grant associated with the lab.",
              "type": "string"
            }
          },
          "institute_label": {
            "title": "Institute Label",
            "description": "An abbreviation for the institute the lab is associated with.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the lab."
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        }
      },
      "CrisprModification": {
        "title": "CRISPR Modification",
        "description": "A CRISPR modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "activated": {
            "title": "Activated",
            "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
            "type": "boolean"
          },
          "activating_agent_term_id": {
            "title": "Activating Agent Term ID",
            "description": "The CHEBI identifier for the activating agent of the modification.",
            "type": "string",
            "pattern": "^CHEBI:[0-9]{1,7}$"
          },
          "activating_agent_term_name": {
            "title": "Activating Agent Term Name",
            "description": "The CHEBI name for the activating agent of the modification.",
            "type": "string"
          },
          "modality": {
            "title": "Modality",
            "description": "The purpose or intended effect of a modification.",
            "type": "string",
            "enum": [
              "activation",
              "base editing",
              "cutting",
              "interference",
              "knockout",
              "localizing",
              "prime editing"
            ]
          },
          "tagged_proteins": {
            "title": "Tagged Proteins",
            "description": "The tagged proteins in which the Cas nuclease is fused to an antibody.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "cas": {
            "title": "Cas",
            "description": "The name of the CRISPR associated protein used in the modification.",
            "type": "string",
            "enum": [
              "Cas9",
              "Cas12a",
              "Cas13",
              "dCas9",
              "nCas9",
              "SpG",
              "SpRY"
            ]
          },
          "fused_domain": {
            "title": "Fused Domain",
            "description": "The name of the molecule fused to a Cas protein.",
            "type": "string",
            "enum": [
              "2xVP64",
              "2xVP64-2A-Puro",
              "2xVP64-2A-Thy1.1",
              "3xVP64",
              "ABE8e",
              "ABE8.20",
              "ANTI-FLAG",
              "BE4",
              "BE4max",
              "eA3A",
              "eA3A-T31A",
              "eA3A-T44D-S45A",
              "KOX1-KRAB",
              "M-MLV RT (PE2)",
              "p300",
              "TdCBE",
              "TdCGBE",
              "TdDE",
              "VPH",
              "VP64",
              "VP64-p65-Rta (VPR)",
              "ZIM3-KRAB"
            ]
          },
          "cas_species": {
            "title": "Cas species",
            "description": "The originating species of the Cas nuclease.",
            "type": "string",
            "enum": [
              "Streptococcus pyogenes (Sp)",
              "Staphylococcus aureus (Sa)",
              "Campylobacter jejuni (Cj)",
              "Neisseria meningitidis (Nm)"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "biosamples_modified": {
            "title": "Biosamples Modified",
            "description": "The biosamples which have been modified with this modification.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosamples Modified",
              "type": "string"
            }
          }
        }
      },
      "DegronModification": {
        "title": "Degron Modification",
        "description": "A degron modification that can induce degradation of a protein.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "activated": {
            "title": "Activated",
            "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
            "type": "boolean"
          },
          "activating_agent_term_id": {
            "title": "Activating Agent Term ID",
            "description": "The CHEBI identifier for the activating agent of the modification.",
            "type": "string",
            "pattern": "^CHEBI:[0-9]{1,7}$"
          },
          "activating_agent_term_name": {
            "title": "Activating Agent Term Name",
            "description": "The CHEBI name for the activating agent of the modification.",
            "type": "string"
          },
          "modality": {
            "title": "Modality",
            "description": "The purpose or intended effect of a modification.",
            "type": "string",
            "enum": [
              "degradation"
            ]
          },
          "tagged_proteins": {
            "title": "Tagged Proteins",
            "description": "The tagged proteins which are targeted for degradation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Gene",
              "type": "string"
            }
          },
          "degron_system": {
            "title": "Degron System",
            "description": "The type of degron system implemented.",
            "type": "string",
            "enum": [
              "AID",
              "AlissAid",
              "ssAID"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "biosamples_modified": {
            "title": "Biosamples Modified",
            "description": "The biosamples which have been modified with this modification.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosamples Modified",
              "type": "string"
            }
          }
        }
      },
      "AssayTerm": {
        "title": "Assay Term",
        "description": "An ontology term from Ontology of Biomedical Investigations (OBI) for assays.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology term identifier describing an assay.",
            "type": "string",
            "pattern": "^(OBI|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Ontology Term",
              "type": "string"
            }
          },
          "preferred_assay_titles": {
            "title": "Preferred Assay Titles",
            "description": "The custom lab preferred labels that this assay term may be associated with.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Preferred Assay Title",
              "description": "The custom lab preferred label for the experiment performed in this measurement set.",
              "type": "string",
              "enum": [
                "RNA-seq",
                "scRNA-seq",
                "snRNA-seq",
                "scNT-seq",
                "scNT-seq2",
                "scMultiome-NT-seq",
                "Parse SPLiT-seq",
                "ATAC-seq",
                "varACCESS",
                "ACCESS-ATAC",
                "scATAC-seq",
                "scACCESS-ATAC",
                "snATAC-seq",
                "10x multiome with scMito-seq",
                "DOGMA-seq",
                "10x multiome",
                "10x multiome with MULTI-seq",
                "10X ATAC with Scale pre-indexing",
                "10X RNA with Scale pre-indexing",
                "MULTI-seq",
                "SHARE-seq",
                "Histone ChIP-seq",
                "TF ChIP-seq",
                "MPRA",
                "MPRA (scQer)",
                "electroporated MPRA",
                "AAV-MPRA",
                "lentiMPRA",
                "STARR-seq",
                "SUPERSTARR",
                "Cell painting",
                "Variant painting via fluorescence",
                "Variant painting via immunostaining",
                "smFISH",
                "MERFISH",
                "Proliferation CRISPR screen",
                "Migration CRISPR screen",
                "CRISPR FlowFISH screen",
                "CRISPR FACS screen",
                "CRISPR MACS screen",
                "CRISPR mCherry screen",
                "HCR-FlowFISH screen",
                "scCRISPR screen",
                "Perturb-seq",
                "CERES-seq",
                "TAP-seq",
                "Variant-EFFECTS",
                "SGE",
                "MIAA",
                "snmC-Seq2",
                "snMCT-seq",
                "snM3C-seq",
                "mN2H",
                "semi-qY2H",
                "Y2H",
                "yN2H",
                "VAMP-seq",
                "VAMP-seq (MultiSTEP)",
                "Hi-C",
                "HiCAR",
                "Spatial transcriptomics",
                "HT-recruit",
                "ONT dRNA",
                "ONT Fiber-seq",
                "ONT direct WGS",
                "WGS"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "definition": {
            "title": "Definition",
            "type": "string",
            "description": "Definition for the term that was recorded in an ontology."
          },
          "comments": {
            "title": "Comments",
            "type": "array",
            "description": "Comment for the term that was recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          },
          "assay_slims": {
            "title": "Assay Type",
            "type": "array",
            "description": "A broad categorization of the assay term.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "category_slims": {
            "title": "Assay Category",
            "type": "array",
            "description": "The type of feature or interaction measured by the assay.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "objective_slims": {
            "title": "Assay Objective",
            "type": "array",
            "description": "The purpose of the assay.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PhenotypeTerm": {
        "title": "Phenotype Term",
        "description": "An ontology term from Experimental Factor Ontology (EFO), Human Disease Ontology (DOID), Human Phenotype Ontology (HP), Mondo Disease Ontology (MONDO), National Cancer Institute Thesaurus (NCIT), Ontology of Biological Attributes (OBA), or Gene Ontology (GO) for phenotypes, diseases, traits and biological processes.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Phenotype Term ID",
            "description": "An ontology term identifier describing a phenotype.",
            "type": "string",
            "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR|GO):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Ontology Term",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "definition": {
            "title": "Definition",
            "type": "string",
            "description": "Definition for the term that was recorded in an ontology."
          },
          "comments": {
            "title": "Comments",
            "type": "array",
            "description": "Comment for the term that was recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          }
        }
      },
      "PlatformTerm": {
        "title": "Platform Term",
        "description": "An ontology term from Experimental Factor Ontology (EFO) for platforms and instruments used in assays.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology term identifier describing a platform.",
            "type": "string",
            "pattern": "^(EFO|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Ontology Term",
              "type": "string"
            }
          },
          "company": {
            "title": "Company",
            "type": "string",
            "enum": [
              "10X Genomics",
              "Element Biosciences",
              "Illumina",
              "Life Technologies",
              "Oxford Nanopore Technologies",
              "Pacific Biosciences",
              "Parse Biosciences",
              "Roche",
              "Singular Genomics"
            ],
            "description": "The company that developed and sells the instrument."
          },
          "sequencing_kits": {
            "title": "Sequencing Kits",
            "description": "The available sequencing kits for this platform.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sequencing Kit",
              "description": "A reagent kit used with a library to prepare it for sequencing.",
              "type": "string",
              "enum": [
                "AVITI 2x75 Sequencing Kit Cloudbreak High Output",
                "AVITI 2x150 Sequencing Kit Cloudbreak High Output",
                "HiSeq SBS Kit v4",
                "HiSeq SR Cluster Kit v4-cBot-HS",
                "HiSeq PE Cluster Kit v4-cBot-HS",
                "HiSeq SR Rapid Cluster Kit v2",
                "HiSeq PE Rapid Cluster Kit v2",
                "HiSeq Rapid SBS Kit v2",
                "HiSeq 3000/4000 SBS Kit",
                "HiSeq 3000/4000 SR Cluster Kit",
                "HiSeq 3000/4000 PE Cluster Kit",
                "MiSeq Reagent Kit v2",
                "NextSeq 500 Mid Output Kit",
                "NextSeq 500 High Output Kit",
                "NextSeq 500 Mid Output v2 Kit",
                "NextSeq 500 High Output v2 Kit",
                "NextSeq 500/550 Mid-Output v2.5 Kit",
                "NextSeq 500/550 High-Output v2.5 Kit",
                "TG NextSeq 500/550 Mid-Output Kit v2.5",
                "TG NextSeq 500/550 High-Output Kit v2.5",
                "NextSeq 1000/2000 P1 Reagent Kit",
                "NextSeq 1000/2000 P2 Reagent Kit",
                "NextSeq 1000/2000 P3 Reagent Kit",
                "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                "NovaSeq 6000 SP Reagent Kit v1.5",
                "NovaSeq 6000 S1 Reagent Kit v1.5",
                "NovaSeq 6000 S2 Reagent Kit v1.5",
                "NovaSeq 6000 S4 Reagent Kit v1.5",
                "NovaSeq X Series 1.5B Reagent Kit",
                "NovaSeq X Series 10B Reagent Kit",
                "NovaSeq X Series 25B Reagent Kit",
                "ONT Ligation Sequencing Kit V14",
                "Sequel sequencing kit 3.0",
                "Sequel II sequencing kit 2.0",
                "Singular G4 F2 Reagent Kit"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "definition": {
            "title": "Definition",
            "type": "string",
            "description": "Definition for the term that was recorded in an ontology."
          },
          "comments": {
            "title": "Comments",
            "type": "array",
            "description": "Comment for the term that was recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          }
        }
      },
      "SampleTerm": {
        "title": "Sample Term",
        "description": "An ontology term from Cell Ontology (CL), Cell Line Ontology (CLO), Experimental Factor Ontology (EFO), or Uber-anatomy ontology (UBERON) for biological or technical samples.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology identifier describing a biological sample",
            "type": "string",
            "pattern": "^(UBERON|EFO|CL|CLO|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Ontology Term",
              "type": "string"
            }
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Sample identifiers from external resources, such as Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((Cellosaurus:CVCL_\\w{4})|(DepMap:ACH-[0-9]{6}))$"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "definition": {
            "title": "Definition",
            "type": "string",
            "description": "Definition for the term that was recorded in an ontology."
          },
          "comments": {
            "title": "Comments",
            "type": "array",
            "description": "Comment for the term that was recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          },
          "organ_slims": {
            "title": "Organ",
            "type": "array",
            "description": "Organs associated with the sample term.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "cell_slims": {
            "title": "Cell",
            "type": "array",
            "description": "Cells associated with the sample term.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "developmental_slims": {
            "title": "Developmental Slims",
            "type": "array",
            "description": "Developmental stages associated with the sample term.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "system_slims": {
            "title": "System Slims",
            "type": "array",
            "description": "Organ systems associated with the sample term.",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenReadingFrame": {
        "title": "Open Reading Frame",
        "description": "Protein-encoding open reading frames (ORF)",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "orf_id": {
            "title": "ORF ID",
            "description": "Open reading frame ID.",
            "type": "string",
            "pattern": "^CCSBORF[1-9][0-9]*$"
          },
          "genes": {
            "title": "ENSEMBL GeneIDs",
            "description": "ENSEMBL GeneIDs of official nomenclature approved genes. The GeneIDs do not include the current version number suffix.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "ENSEMBL GeneID",
              "description": "An identifier of the Gene.",
              "type": "string"
            }
          },
          "protein_id": {
            "title": "ENSEMBL ProteinID",
            "description": "ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix.",
            "type": "string",
            "pattern": "^ENSP\\d{11}.?\\d*?$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Unique identifiers from the hORFeome database",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "A unique identifier from hORFeome database.",
              "type": "string",
              "pattern": "^(hORFeome:[1-9][0-9]*)$"
            }
          },
          "pct_identical_protein": {
            "title": "Percentage of Identical Matches to Ensembl Protein",
            "description": "The percentage of identical matches to Ensembl protein.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "pct_coverage_protein": {
            "title": "Percentage of ORF Covered by Ensembl Protein",
            "description": "The percentage of ORF covered by Ensembl protein.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "pct_coverage_orf": {
            "title": "Percentage of Ensembl Protein Covered by ORF",
            "description": "The percentage of Ensembl protein covered by ORF.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          }
        }
      },
      "Page": {
        "title": "Page",
        "description": "A page on the IGVF portal.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "parent": {
            "title": "Parent Page",
            "type": "string",
            "description": "The parent page associated with this page."
          },
          "name": {
            "title": "Name",
            "description": "The name shown in this page's URL.",
            "type": "string",
            "pattern": "^[a-z0-9_-]+$"
          },
          "title": {
            "title": "Title",
            "description": "The name shown in the browser's title bar and tabs.",
            "type": "string"
          },
          "layout": {
            "title": "Page Layout",
            "description": "Hierarchical description of the page layout.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "blocks": {
                "type": "array",
                "items": {
                  "title": "Page Layout Components",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "@id": {
                      "title": "Block ID",
                      "description": "Unique identifier for this blocUnique identifier for this block.",
                      "type": "string"
                    },
                    "@type": {
                      "title": "Block Type",
                      "description": "Indicates whether this block contains markdown or a component specification.",
                      "type": "string"
                    },
                    "body": {
                      "title": "Block Body",
                      "description": "The text content of this block.",
                      "type": "string"
                    },
                    "direction": {
                      "title": "Direction",
                      "description": "The text language direction -- ltr or rtl.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "canonical_uri": {
            "title": "Canonical URI",
            "type": "string",
            "description": "The path of the page."
          }
        }
      },
      "PhenotypicFeature": {
        "title": "Phenotypic Feature",
        "description": "A phenotypic feature of a donor the sample is coming from. For example, the donor\u2019s height measured at the time of sample collection.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "feature": {
            "title": "Phenotypic Feature",
            "description": "The phenotypic feature observed for the donor.",
            "type": "string"
          },
          "quantity": {
            "title": "Quantity",
            "description": "A quantity associated with the phenotypic feature, if applicable.",
            "type": "number"
          },
          "quantity_units": {
            "title": "Quantity Units",
            "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
            "type": "string",
            "enum": [
              "meter",
              "micromole",
              "nanogram",
              "microgram",
              "milligram",
              "gram",
              "kilogram",
              "milli-International Unit per milliliter",
              "picogram per milliliter",
              "nanogram per milliliter",
              "milligram per deciliter",
              "UPDRS",
              "MMSE"
            ]
          },
          "quality": {
            "title": "Quality",
            "description": "A quality assessment associated with the phenotypic feature, such as a categorical description.",
            "type": "string",
            "enum": [
              "none",
              "sparse",
              "moderate",
              "frequent",
              "unknown",
              "I",
              "II",
              "III",
              "IV",
              "V",
              "VI",
              "2/2",
              "2/3",
              "2/4",
              "3/3",
              "3/4",
              "4/4"
            ]
          },
          "observation_date": {
            "title": "Observation Date",
            "description": "The date the feature was observed or measured.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          }
        }
      },
      "Publication": {
        "title": "Publication",
        "description": "A publication related to IGVF.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "Title of the publication or communication.",
            "type": "string"
          },
          "abstract": {
            "title": "Abstract",
            "description": "Abstract of the publication or communication.",
            "type": "string"
          },
          "authors": {
            "title": "Authors",
            "type": "string",
            "description": "The authors of the publication."
          },
          "date_published": {
            "title": "Publication Date",
            "description": "The date the publication or communication was published; must be in YYYY-MM-DD format.",
            "type": "string"
          },
          "date_revised": {
            "title": "Date Revised",
            "type": "string",
            "description": "The date the publication was revised."
          },
          "issue": {
            "title": "Issue",
            "description": "The issue of the publication.",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "description": "Pagination of the reference",
            "type": "string"
          },
          "volume": {
            "title": "Volume",
            "description": "The volume of the publication.",
            "type": "string"
          },
          "journal": {
            "title": "Journal",
            "description": "The journal of the publication.",
            "type": "string"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers associated with this publication object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "An identifier that references data found in the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "published_by": {
            "title": "Published By",
            "type": "array",
            "description": "The affiliation of the lab with a larger organization, such as IGVF.",
            "uniqueItems": true,
            "items": {
              "title": "Published By",
              "type": "string",
              "enum": [
                "community",
                "IGVF",
                "ENCODE"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the publication."
          },
          "publication_year": {
            "title": "Publication Year",
            "type": "integer",
            "description": "The year the publication was published."
          },
          "samples": {
            "title": "Samples",
            "type": "array",
            "description": "The samples associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "Sample",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "type": "array",
            "description": "The donors associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "type": "string"
            }
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "workflows": {
            "title": "Workflows",
            "type": "array",
            "description": "The workflows associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "Workflow",
              "type": "string"
            }
          },
          "software": {
            "title": "Software",
            "type": "array",
            "description": "The software associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "Software",
              "type": "string"
            }
          },
          "software_versions": {
            "title": "Software Versions",
            "type": "array",
            "description": "The software versions associated with this publication.",
            "uniqueItems": true,
            "items": {
              "title": "Software Version",
              "type": "string"
            }
          }
        }
      },
      "MpraQualityMetric": {
        "title": "MPRA Quality Metric",
        "description": "Schema for submission of a MPRA uniform pipeline quality metric.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "quality_metric_of": {
            "title": "Quality Metric Of",
            "description": "The file(s) to which this quality metric applies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric Of",
              "type": "string"
            }
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the quality metric.",
            "type": "string"
          },
          "pearson_correlation": {
            "title": "Pearson Correlation",
            "description": "The correlation of log2 RNA/DNA ratios across tested sequences as a measure of replicable activity signal. Value is the median of replicate comparisons using only oligos with >= 10 barcodes.",
            "type": "number"
          },
          "median_barcodes_passing_filtering": {
            "title": "Median Barcodes Passing Filtering",
            "description": "Median number of barcodes across tested sequences that passed filtering to determine if there was sufficient barcode to oligo coverage. Value is the median of all replicates.",
            "type": "number"
          },
          "median_rna_read_count": {
            "title": "Median RNA Read Count",
            "description": "Median of RNA read count for oligos that passed filtering to determine sufficient coverage in terms of read count. Value is the median of all replicates.",
            "type": "number"
          },
          "fraction_oligos_passing": {
            "title": "Fraction Of Oligos Passing Filters",
            "description": "Fraction of tested sequences that passed filtering of the mappable sequences to determine if the designed library was sufficiently recovered. Value is the median of all replicates.",
            "type": "number"
          },
          "median_assigned_barcodes": {
            "title": "Median Number Of Assigned Barcodes",
            "description": "Median number of barcodes assigned to tested sequences in mapping as a quality control measure for the assignment step, whether there is sufficient barcode to oligo coverage.",
            "type": "number"
          },
          "fraction_assigned_oligos": {
            "title": "Fraction Of Assigned Oligos",
            "description": "Fraction of assigned tested sequences in mapping to determine if the library during the assignment step was sufficiently recovered.",
            "type": "number"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the quality metric."
          }
        }
      },
      "PerturbSeqQualityMetric": {
        "title": "Perturb-seq Quality Metric",
        "description": "Schema for submission of a Perturb-seq uniform pipeline quality metric.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "quality_metric_of": {
            "title": "Quality Metric Of",
            "description": "The file(s) to which this quality metric applies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric Of",
              "type": "string"
            }
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the quality metric.",
            "type": "string"
          },
          "total_cells_passing_filters": {
            "title": "Total Cells Passing Filters",
            "description": "Total Cells Passing Filters",
            "type": "number"
          },
          "pct_cells_assigned_guide": {
            "title": "Percent Cells Assigned Guide",
            "description": "Percent Cells Assigned Guide",
            "type": "number"
          },
          "avg_cells_per_target": {
            "title": "Average Cells Per Target",
            "description": "Average Cells Per Target",
            "type": "number"
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "Multiplicity Of Infection",
            "type": "number"
          },
          "avg_umis_per_cell": {
            "title": "Average UMIs Per Cell",
            "description": "Average UMIs Per Cell",
            "type": "number"
          },
          "total_guides": {
            "title": "Total Guides",
            "description": "Total Guides",
            "type": "number"
          },
          "total_targets": {
            "title": "Total Targets",
            "description": "Total Targets",
            "type": "number"
          },
          "guide_diversity": {
            "title": "Guide Diversity",
            "description": "Guide diversity (Gini index)",
            "type": "number"
          },
          "mean_mitochondrial_reads": {
            "title": "Mean Mitochondrial Reads",
            "description": "Mean mitochondrial reads.",
            "type": "number"
          },
          "total_reads": {
            "title": "Total Reads",
            "description": "Total reads (n_processed) reported by Kallisto.",
            "type": "number"
          },
          "paired_reads_mapped": {
            "title": "Paired Reads Mapped",
            "description": "Paired reads mapped (n_pseudoaligned) reported by Kallisto.",
            "type": "number"
          },
          "alignment_percentage": {
            "title": "Alignment Percentage",
            "description": "Alignment percentage (p_pseudoaligned) reported by Kallisto.",
            "type": "number"
          },
          "total_detected_scrna_barcodes": {
            "title": "Total Detected scRNA Barcodes",
            "description": "Unfiltered total detected scRNA barcodes (numBarcodes) reported by Kallisto.",
            "type": "number"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the quality metric."
          }
        }
      },
      "SingleCellAtacSeqQualityMetric": {
        "title": "Single Cell ATAC-seq Quality Metric",
        "description": "Schema for submission of a scATAC-seq uniform pipeline quality metric.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "quality_metric_of": {
            "title": "Quality Metric Of",
            "description": "The file(s) to which this quality metric applies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric Of",
              "type": "string"
            }
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the quality metric.",
            "type": "string"
          },
          "pct_duplicates": {
            "title": "Percent Duplicates",
            "description": "",
            "type": "number"
          },
          "n_reads": {
            "title": "Number Of Reads",
            "description": "Total count of sequencing reads processed.",
            "type": "number"
          },
          "n_mapped_reads": {
            "title": "Number Of Mapped Reads",
            "description": "Reads successfully aligned to the reference genome.",
            "type": "number"
          },
          "n_uniquely_mapped_reads": {
            "title": "Number Of Uniquely Mapped Reads",
            "description": "Reads aligned to a single location in the genome.",
            "type": "number"
          },
          "n_reads_with_multi_mappings": {
            "title": "Number Of Reads With Multi-Mappings",
            "description": "Reads aligned to multiple locations in the genome.",
            "type": "number"
          },
          "n_candidates": {
            "title": "Number Of Candidates",
            "description": "Potential mapping locations considered during alignment.",
            "type": "number"
          },
          "n_mappings": {
            "title": "Number Of Mappings",
            "description": "Total successful alignments, including multiple mappings per read.",
            "type": "number"
          },
          "n_uni_mappings": {
            "title": "Number Of Uni-Mappings",
            "description": "Total alignments where reads map to a single location.",
            "type": "number"
          },
          "n_multi_mappings": {
            "title": "Number Of Multi-Mappings",
            "description": "Total alignments where reads map to multiple locations.",
            "type": "number"
          },
          "n_barcodes_on_onlist": {
            "title": "Number Of Barcodes On Onlist",
            "description": "Barcodes matching the expected list of valid barcodes.",
            "type": "number"
          },
          "n_corrected_barcodes": {
            "title": "Number Of Corrected Barcodes",
            "description": "Barcodes adjusted to match valid entries in the onlist.",
            "type": "number"
          },
          "n_output_mappings": {
            "title": "Number Of Output Mappings",
            "description": "Final count of fragments after deduplication and filtering.",
            "type": "number"
          },
          "uni_mappings": {
            "title": "Uni-Mappings",
            "description": "Number of fragments mapping to single location in the genome.",
            "type": "number"
          },
          "multi_mappings": {
            "title": "Multi-Mappings",
            "description": "Number of fragments mappig in multiple locations in the genome.",
            "type": "number"
          },
          "total": {
            "title": "Total",
            "description": "Sum of uni-mappings and multi-mappings.",
            "type": "number"
          },
          "atac_fragments_alignment_stats": {
            "title": "ATAC Fragments Alignment Stats",
            "description": "",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "text/plain"
                ]
              },
              "size": {
                "title": "File size",
                "type": "integer",
                "minimum": 0
              },
              "md5sum": {
                "type": "string",
                "title": "MD5sum"
              },
              "width": {
                "title": "Image width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "atac_bam_summary_stats": {
            "title": "ATAC Bam Summary Stats",
            "description": "",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "text/csv",
                  "text/tab-separated-values"
                ]
              },
              "size": {
                "title": "File size",
                "type": "integer",
                "minimum": 0
              },
              "md5sum": {
                "type": "string",
                "title": "MD5sum"
              },
              "width": {
                "title": "Image width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "atac_fragment_summary_stats": {
            "title": "ATAC Fragment Summary Stats",
            "description": "",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "text/csv",
                  "text/tab-separated-values"
                ]
              },
              "size": {
                "title": "File size",
                "type": "integer",
                "minimum": 0
              },
              "md5sum": {
                "type": "string",
                "title": "MD5sum"
              },
              "width": {
                "title": "Image width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the quality metric."
          }
        }
      },
      "SingleCellRnaSeqQualityMetric": {
        "title": "Single Cell RNA-seq Quality Metric",
        "description": "Schema for submission of a scRNA-seq uniform pipeline quality metric.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "quality_metric_of": {
            "title": "Quality Metric Of",
            "description": "The file(s) to which this quality metric applies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric Of",
              "type": "string"
            }
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the quality metric.",
            "type": "string"
          },
          "n_records": {
            "title": "Number Of Records",
            "description": "Number of records in BUS file.",
            "type": "number"
          },
          "n_reads": {
            "title": "Number Of Reads",
            "description": "Total number of input reads.",
            "type": "number"
          },
          "n_barcodes": {
            "title": "Number Of Barcodes",
            "description": "Total number of valid cell barcodes detected.",
            "type": "number"
          },
          "total_umis": {
            "title": "Total UMIs",
            "description": "Total number of UMIs detected.",
            "type": "number"
          },
          "n_barcode_umis": {
            "title": "Number Of Barcode UMIs",
            "description": "Total number of UMIs associated with cell barcodes.",
            "type": "number"
          },
          "median_reads_per_barcode": {
            "title": "Median Reads Per Barcode",
            "description": "Median number of reads per cell barcode.",
            "type": "number"
          },
          "mean_reads_per_barcode": {
            "title": "Mean Reads Per Barcode",
            "description": "Mean number of reads per cell barcode.",
            "type": "number"
          },
          "median_umis_per_barcode": {
            "title": "Median UMIs Per Barcode",
            "description": "Median number of UMIs per cell barcode.",
            "type": "number"
          },
          "mean_umis_per_barcode": {
            "title": "Mean UMIs Per Barcode",
            "description": "Mean number of UMIs per cell barcode.",
            "type": "number"
          },
          "gt_records": {
            "title": "Good-Toulmin Estimation Records",
            "description": "Number of BUS records for Good-Toulmin estimation.",
            "type": "number"
          },
          "num_barcodes_on_onlist": {
            "title": "Number Of Barcodes On Onlist",
            "description": "Number of cell barcodes matching an expected list of barcodes (onlist).",
            "type": "number"
          },
          "percentage_barcodes_on_onlist": {
            "title": "Percentage Of Barcodes On Onlist",
            "description": "Percentage of cell barcodes matching an expected list of barcodes (onlist).",
            "type": "number"
          },
          "num_reads_on_onlist": {
            "title": "Number Of Reads On Onlist",
            "description": "Number of reads associated with barcodes on the onlist.",
            "type": "number"
          },
          "percentage_reads_on_onlist": {
            "title": "Percentage Of Reads On Onlist",
            "description": "Percentage of reads associated with barcodes on the onlist.",
            "type": "number"
          },
          "rnaseq_kb_info": {
            "title": "RNA-seq KB Info",
            "description": "The content of the kb-python RNAseq kb_info.json file.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json"
                ]
              },
              "size": {
                "title": "File size",
                "type": "integer",
                "minimum": 0
              },
              "md5sum": {
                "type": "string",
                "title": "MD5sum"
              },
              "width": {
                "title": "Image width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "n_targets": {
            "title": "Number Of Target Sequences",
            "description": "Total number of target sequences (e.g., transcripts) in the index.",
            "type": "number"
          },
          "n_bootstraps": {
            "title": "Number Of Bootstrap Iterations",
            "description": "Number of bootstrap iterations used to estimate expression uncertainty.",
            "type": "number"
          },
          "n_processed": {
            "title": "Number Of Reads Processed",
            "description": "Number of valid reads processed by Kallisto.",
            "type": "number"
          },
          "n_pseudoaligned": {
            "title": "Number Of Reads Pseudoaligned",
            "description": "Number of reads that could be pseudoaligned to the transcriptome index.",
            "type": "number"
          },
          "n_unique": {
            "title": "Number Of Reads Uniquely Pseudoaligned",
            "description": "Number of reads that could be pseudoaligned to a unique target sequence.",
            "type": "number"
          },
          "p_pseudoaligned": {
            "title": "Percentage Of Reads Pseudoaligned",
            "description": "Percentage of reads that could be pseudoaligned to the transcriptome index.",
            "type": "number"
          },
          "p_unique": {
            "title": "Percentage Of Reads Uniquely Pseudoaligned",
            "description": "Percentage of reads that could be pseudoaligned to a unique target sequence.",
            "type": "number"
          },
          "index_version": {
            "title": "Kallisto Index Version",
            "description": "Version of Kallisto index command used for building the transcriptome index.",
            "type": "number"
          },
          "kmer_length": {
            "title": "K-mer Length",
            "description": "Length of k-mers used for building the transcriptome index.",
            "type": "number"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the quality metric."
          }
        }
      },
      "StarrSeqQualityMetric": {
        "title": "STARR-seq Quality Metric",
        "description": "Schema for submission of a STARR-seq uniform pipeline quality metric.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "quality_metric_of": {
            "title": "Quality Metric Of",
            "description": "The file(s) to which this quality metric applies.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Quality Metric Of",
              "type": "string"
            }
          },
          "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the quality metric.",
            "type": "string"
          },
          "coverage": {
            "title": "Coverage",
            "description": "Coverage of the library.",
            "type": "number"
          },
          "coverage_per_basepair": {
            "title": "Coverage Per Basepair",
            "description": "Coverage at basepair level.",
            "type": "number"
          },
          "rna_correlation_in_peaks": {
            "title": "Correlation Of RNA In Peaks",
            "description": "Correlation of RNA only over regions called as peaks in DNA.",
            "type": "number"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the quality metric."
          }
        }
      },
      "InVitroSystem": {
        "title": "In Vitro System",
        "description": "A biosample that is cultured, such as immortalized cell lines, organoids, gastruloids or samples that have been differentiated or reprogrammed.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "annotated_from": {
            "title": "Annotated From",
            "description": "Links to the sample that was used as a reference for annotating this sample.",
            "type": "string"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "description": "Ontology term identifying a biosample.",
              "type": "string"
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Disease Term",
              "type": "string"
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "part_of": {
            "title": "Part of Biosample",
            "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
            "type": "string"
          },
          "originated_from": {
            "title": "Originated From",
            "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
            "type": "string"
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Treatment",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor.",
              "type": "string"
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker",
              "description": "Associated biomarker.",
              "type": "string"
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Modification",
              "description": "Link to a modification applied to this biosample.",
              "type": "string"
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Collected",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of in vitro system.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "description": "The type of the in vitro system.",
              "type": "string",
              "enum": [
                "organoid",
                "gastruloid",
                "embryoid",
                "cell line",
                "differentiated cell specimen",
                "reprogrammed cell specimen",
                "pooled cell specimen"
              ]
            }
          },
          "time_post_change": {
            "title": "Time Post Change",
            "description": "The time that elapsed past the time-point when the cell fate change treatments were introduced.",
            "type": "number"
          },
          "time_post_change_units": {
            "title": "Time Post Change Units",
            "description": "The units of time that elapsed past the point when the cell fate change treatments were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "cell_fate_change_protocol": {
            "title": "Cell Fate Change Protocol",
            "description": "A protocol applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
            "type": "string"
          },
          "demultiplexed_from": {
            "title": "Demultiplexed From",
            "description": "The biosample this in vitro system sample was demultiplexed from using computational methods.",
            "type": "string"
          },
          "passage_number": {
            "title": "Passage Number",
            "description": "Number of passages including the passages from the source.",
            "type": "integer",
            "minimum": 0
          },
          "targeted_sample_term": {
            "title": "Targeted Sample Term",
            "description": "Ontology term identifying the targeted endpoint biosample resulting from differentation or reprogramming.",
            "type": "string"
          },
          "growth_medium": {
            "title": "Growth Medium",
            "description": "A growth medium of the in vitro system.",
            "type": "string",
            "enum": [
              "DMEM with serum",
              "DMEM without serum",
              "SMBM with serum",
              "SMBM without serum"
            ]
          },
          "biosample_qualifiers": {
            "title": "Biosample Qualifiers",
            "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Qualifiers",
              "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells.",
              "type": "string",
              "enum": [
                "6 days calcified",
                "10 days calcified",
                "exhausted"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part",
              "type": "string"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In",
              "type": "string"
            }
          },
          "demultiplexed_to": {
            "title": "Demultiplexed To",
            "type": "array",
            "description": "The parts into which this sample has been demultiplexed.",
            "uniqueItems": true,
            "items": {
              "title": "Demultiplexed To",
              "type": "string"
            }
          }
        }
      },
      "MultiplexedSample": {
        "title": "Multiplexed Sample",
        "description": "A sample that is made by multiplexing multiple distinct samples.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "type": "array",
            "description": "The construct library sets of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "multiplexed_samples": {
            "title": "Multiplexed Samples",
            "description": "The samples multiplexed together to produce this sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed Sample",
              "type": "string"
            }
          },
          "multiplexing_methods": {
            "title": "Multiplexing Methods",
            "description": "The methods used for multiplexing and demultiplexing.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexing Method",
              "description": "The method used for multiplexing and demultiplexing.",
              "type": "string",
              "enum": [
                "genetic",
                "barcode based"
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "barcode_map": {
            "title": "Link to barcode map tabular file",
            "description": "The link to the barcode mapping tabular file.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of this sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "sample_terms": {
            "title": "Sample Terms",
            "type": "array",
            "description": "The sample terms of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "type": "string"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus",
              "Mixed species",
              "Saccharomyces cerevisiae"
            ]
          },
          "disease_terms": {
            "title": "Disease Terms",
            "type": "array",
            "description": "The disease terms of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Disease Term",
              "type": "string"
            }
          },
          "treatments": {
            "title": "Treatments",
            "type": "array",
            "description": "The treatments of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Treatment",
              "type": "string"
            }
          },
          "modifications": {
            "title": "Modifications",
            "type": "array",
            "description": "The modifications of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Modification",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "type": "array",
            "description": "The donors of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "type": "string"
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "type": "array",
            "description": "The biomarkers of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker",
              "type": "string"
            }
          },
          "sources": {
            "title": "Sources",
            "type": "array",
            "description": "The sources of the samples included in this multiplexed sample.",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "type": "string"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "PrimaryCell": {
        "title": "Primary Cell",
        "description": "A biosample that is directly harvested from a donor as cells, such as fibroblasts or immune cells.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "annotated_from": {
            "title": "Annotated From",
            "description": "Links to the sample that was used as a reference for annotating this sample.",
            "type": "string"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "description": "Ontology term identifying a biosample.",
              "type": "string"
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Disease Term",
              "type": "string"
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Primary Cell Pooled From",
              "type": "string"
            }
          },
          "part_of": {
            "title": "Part of Biosample",
            "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
            "type": "string"
          },
          "originated_from": {
            "title": "Originated From",
            "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
            "type": "string"
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Treatment",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor.",
              "type": "string"
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker",
              "description": "Associated biomarker.",
              "type": "string"
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Modification",
              "description": "Link to a modification applied to this biosample.",
              "type": "string"
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Harvested",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "passage_number": {
            "title": "Passage Number",
            "description": "Number of passages including the passages from the source.",
            "type": "integer",
            "minimum": 0
          },
          "biosample_qualifiers": {
            "title": "Biosample Qualifiers",
            "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Qualifiers",
              "description": "An array of various cell states. This property provides additional information about a cell at a finer-grained level compared to what ontologies currently capture. For example, exhausted T-cells.",
              "type": "string",
              "enum": [
                "6 days calcified",
                "10 days calcified",
                "exhausted"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part",
              "type": "string"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In",
              "type": "string"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "TechnicalSample": {
        "title": "Technical Sample",
        "description": "A sample that is used as a medium to perform biological measurement without the intent to characterize the technical sample itself. For example, the solution in which RNA oligos binding experiments are performed.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "sample_material": {
            "title": "Sample Material",
            "type": "string",
            "enum": [
              "undefined",
              "inorganic",
              "synthetic",
              "organic"
            ]
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "enum": [
              "Saccharomyces cerevisiae",
              "Homo sapiens"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a technical sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "description": "Ontology term identifying a technical sample.",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of this sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "Tissue": {
        "title": "Tissue",
        "description": "A biosample that is directly harvested from a donor, typically a dissection from an organ.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "annotated_from": {
            "title": "Annotated From",
            "description": "Links to the sample that was used as a reference for annotating this sample.",
            "type": "string"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "description": "Ontology term identifying a biosample.",
              "type": "string"
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Disease Term",
              "type": "string"
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Tissue Pooled From",
              "type": "string"
            }
          },
          "part_of": {
            "title": "Part of Biosample",
            "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
            "type": "string"
          },
          "originated_from": {
            "title": "Originated From",
            "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
            "type": "string"
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Treatment",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor.",
              "type": "string"
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker",
              "description": "Associated biomarker.",
              "type": "string"
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Modification",
              "description": "Link to a modification applied to this biosample.",
              "type": "string"
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Harvested",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "pmi": {
            "title": "Post-mortem Interval",
            "description": "The amount of time elapsed since death.",
            "type": "integer",
            "minimum": 1
          },
          "pmi_units": {
            "title": "Post-mortem Interval Units",
            "description": "The unit in which the PMI time was reported.",
            "type": "string",
            "enum": [
              "second",
              "minute",
              "hour",
              "day",
              "week"
            ]
          },
          "ccf_id": {
            "title": "Common Coordinate Framework Identifier",
            "description": "HubMap Common Coordinate Framework unique identifier corresponding to the organ, biological structure, and spatial location of the tissue specimen.",
            "type": "string"
          },
          "preservation_method": {
            "title": "Preservation Method",
            "description": "The method by which the tissue was preserved: cryopreservation (slow-freeze) or flash-freezing.",
            "type": "string",
            "enum": [
              "cryopreservation",
              "flash-freezing"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part",
              "type": "string"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In",
              "type": "string"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "WholeOrganism": {
        "title": "Whole Organism",
        "description": "A biosample that is a whole model organism. For example, a mouse embryo.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "annotated_from": {
            "title": "Annotated From",
            "description": "Links to the sample that was used as a reference for annotating this sample.",
            "type": "string"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Sample Term",
              "description": "Ontology term identifying a biosample.",
              "type": "string"
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Disease Term",
              "type": "string"
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled From",
              "description": "Pooled biosample.",
              "type": "string"
            }
          },
          "part_of": {
            "title": "Part of Biosample",
            "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
            "type": "string"
          },
          "originated_from": {
            "title": "Originated From",
            "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
            "type": "string"
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Treatment",
              "type": "string"
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Donor",
              "description": "Donor.",
              "type": "string"
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biomarker",
              "description": "Associated biomarker.",
              "type": "string"
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Modification",
              "description": "Link to a modification applied to this biosample.",
              "type": "string"
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string"
          },
          "sorted_from": {
            "title": "Sorted From",
            "description": "Links to a larger sample from which this sample was obtained through sorting.",
            "type": "string"
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean"
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Construct Library Set",
              "type": "string"
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "adenoviral transduction",
              "lipofectamine",
              "electroporation",
              "lentiviral transduction",
              "transfection",
              "nucleofection"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "uniqueItems": true,
            "items": {
              "title": "File Set",
              "type": "string"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In",
              "type": "string"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample",
              "type": "string"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample",
              "type": "string"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate",
              "type": "string"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part",
              "type": "string"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In",
              "type": "string"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "Software": {
        "title": "Software",
        "description": "A software used for computational  analysis. For example, Bowtie2 alignment software.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "source_url": {
            "title": "Source URL",
            "description": "An external resource to the codebase.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "Unique name of the software package; a lowercase version of the title.",
            "type": "string",
            "pattern": "^[a-z0-9\\-_]+"
          },
          "title": {
            "title": "Title",
            "description": "The preferred viewable name of the software.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "used_by": {
            "title": "Used by",
            "type": "array",
            "description": "The component(s) of the IGVF consortium that utilize this software.",
            "uniqueItems": true,
            "items": {
              "title": "Used by",
              "type": "string",
              "enum": [
                "consortium analysis",
                "DACC",
                "processing pipelines"
              ]
            }
          },
          "categories": {
            "title": "Categories",
            "description": "The general categories of this software.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Category",
              "description": "The main category describing the primary use of this software.",
              "type": "string",
              "enum": [
                "CRISPR Screens",
                "General Bioinformatic Utilities",
                "Genomic Annotations",
                "Networks",
                "Predictions",
                "Reporter Assays",
                "Single Cell Multiome"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "versions": {
            "title": "Versions",
            "type": "array",
            "description": "A list of versions that have been released for this software.",
            "uniqueItems": true,
            "items": {
              "title": "Version",
              "type": "string"
            }
          }
        }
      },
      "SoftwareVersion": {
        "title": "Software Version",
        "description": "A specific version of a software used for computational analysis. For example, Bowtie2 v2.3.0.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "source_url": {
            "title": "Source URL",
            "description": "An external resource to track the version of the software download.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "software": {
            "title": "Software",
            "description": "Unique name of the software package.",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "description": "The version of a particular software.",
            "type": "string",
            "pattern": "^v(?!0\\.0\\.0$)([0-9]+\\.[0-9]+\\.[0-9]+(\\.[0-9]+)?|0\\.0\\.0\\.[1-9][0-9]*)$"
          },
          "download_id": {
            "title": "Download ID",
            "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for a software version."
          }
        }
      },
      "Source": {
        "title": "Source",
        "description": "A vendor or a lab that provides samples for study.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "The complete name of the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "A short unique name for the source.",
            "type": "string",
            "pattern": "^[a-z0-9\\-]+$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the source."
          }
        }
      },
      "Treatment": {
        "title": "Treatment",
        "description": "A protein or chemical treatment applied to samples such as lipopolysaccharide, interleukin-2, or leucine.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Source",
              "description": "The originating lab or vendor.",
              "type": "string"
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that describe the treatment protocol details.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "preview",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "amount": {
            "title": "Amount",
            "type": "number",
            "description": "Specific quantity of the applied treatment (used in conjunction with amount_units)."
          },
          "amount_units": {
            "title": "Amount Units",
            "type": "string",
            "description": "A unit for an amount other than those for time or temperature.",
            "enum": [
              "mg/kg",
              "mg/mL",
              "mM",
              "ng/mL",
              "nM",
              "percent",
              "\u03bcg/kg",
              "\u03bcg/kg",
              "\u03bcg/mL",
              "\u03bcM",
              "kpa"
            ]
          },
          "duration": {
            "title": "Duration",
            "type": "number",
            "description": "Duration indicates the time elapsed between the start and end of the treatment."
          },
          "duration_units": {
            "title": "Duration Units",
            "type": "string",
            "description": "A unit of time.",
            "enum": [
              "second",
              "minute",
              "hour",
              "day"
            ]
          },
          "pH": {
            "title": "pH",
            "type": "number",
            "description": "Final pH of the solution containing a chemical compound (if applicable)"
          },
          "purpose": {
            "title": "Purpose",
            "type": "string",
            "description": "The intended purpose for treating the samples.",
            "enum": [
              "activation",
              "agonist",
              "antagonist",
              "control",
              "differentiation",
              "de-differentiation",
              "perturbation",
              "selection",
              "stimulation"
            ]
          },
          "post_treatment_time": {
            "title": "Post-treatment Time",
            "description": "Post treatment time in conjunction with post treatment time units is used to specify the time that has passed between the point when biosamples were removed from the treatment solution before being sampled or treated with the next treatment.",
            "type": "number"
          },
          "post_treatment_time_units": {
            "title": "Post-treatment Time Units",
            "type": "string",
            "description": "A unit of time.",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "The temperature in Celsius to which the sample was exposed"
          },
          "temperature_units": {
            "title": "Temperature Units",
            "type": "string",
            "description": "A unit of temperature.",
            "enum": [
              "Celsius"
            ]
          },
          "treatment_type": {
            "title": "Treatment Type",
            "type": "string",
            "description": "The classification of treatment agent that specifies its exact molecular nature. ",
            "enum": [
              "chemical",
              "protein",
              "environmental"
            ]
          },
          "treatment_term_id": {
            "title": "Treatment Term ID",
            "description": "Ontology identifier describing a component in the treatment.",
            "type": "string",
            "pattern": "^((CHEBI:[0-9]{1,7})|(UniProtKB:[A-Z0-9]{6})|(NTR:[0-9]{2,8}))$"
          },
          "treatment_term_name": {
            "title": "Treatment Term Name",
            "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc.",
            "type": "string"
          },
          "depletion": {
            "title": "Depletion",
            "description": "Treatment is depleted.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "biosamples_treated": {
            "title": "Biosamples Treated",
            "description": "The samples which have been treated using this treatment.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Biosamples Treated",
              "type": "string"
            }
          }
        }
      },
      "User": {
        "title": "User",
        "description": "A user of IGVF data portal who is a member or affiliate member of IGVF.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "The email associated with the user's account.",
            "pattern": "^[^A-Z\\s@]+@[^A-Z\\s@]+\\.[^A-Z\\s@]+$"
          },
          "first_name": {
            "title": "First Name",
            "description": "The user's first (given) name.",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "description": "The user's last (family) name.",
            "type": "string"
          },
          "lab": {
            "title": "Lab",
            "description": "Lab user is primarily associated with.",
            "type": "string"
          },
          "submits_for": {
            "title": "Submits For",
            "description": "Labs user is authorized to submit data for.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Submittable For",
              "description": "A lab user is authorized to submit for.",
              "type": "string"
            }
          },
          "groups": {
            "title": "Groups",
            "description": "Additional access control groups",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Group",
              "type": "string",
              "enum": [
                "admin",
                "read-only-admin",
                "verified"
              ]
            }
          },
          "viewing_groups": {
            "title": "View Access Groups",
            "description": "The group that determines which set of data the user has permission to view.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "View Access Group",
              "type": "string",
              "enum": [
                "community",
                "IGVF"
              ]
            }
          },
          "job_title": {
            "title": "Job Title",
            "type": "string",
            "description": "The role of the user in their lab or organization.",
            "enum": [
              "Principal Investigator",
              "Co-Investigator",
              "Project Manager",
              "Submitter",
              "Post Doc",
              "Data Wrangler",
              "Scientist",
              "Computational Scientist",
              "Software Developer",
              "NHGRI staff member",
              "Other"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "The full name of the user."
          }
        }
      },
      "Workflow": {
        "title": "Workflow",
        "description": "A workflow for computational analysis of genomic data. A workflow is made up of analysis steps.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "source_url": {
            "title": "Source URL",
            "description": "An external resource to the code base of the workflow in github.",
            "type": "string",
            "pattern": "^https?://github\\.com/(\\S+)$"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string"
          },
          "publications": {
            "title": "Publications",
            "description": "The publications associated with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Publication",
              "description": "A publication associated with this object.",
              "type": "string"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Document",
              "description": "A document that provides additional information (not data file).",
              "type": "string"
            }
          },
          "lab": {
            "title": "Lab",
            "description": "Lab associated with the submission.",
            "type": "string"
          },
          "award": {
            "title": "Award",
            "description": "Grant associated with the submission.",
            "type": "string"
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ACMG73",
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "IGVF_catalog_beta_v0.5",
                "IGVF phase 1",
                "MaveDB",
                "Morphic",
                "MPRAbase",
                "StanfordFCC",
                "TOPMED Freeze 8",
                "VarChAMP",
                "Vista",
                "Williams Syndrome Research"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "preview",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|raluca-gordan|bill-majoros|david-page|maya-kasowski|jimmie-ye|leif-ludwig|ryan-corces|jun-wu|tom-norman|bruce-posner|nhgri|community|igvf|igvf-dacc|stephen-yi|kushal-dey|katie-pollard|steven-gazal|igvf-dacc-processing-pipeline):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "description": "The user who submitted the object.",
            "type": "string"
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The preferred viewable name of the workflow.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "workflow_repositories": {
            "title": "Workflow Repositories",
            "description": "Resources hosting the workflow.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "title": "Workflow Repository",
              "description": "Resource hosting the workflow.",
              "type": "string"
            }
          },
          "standards_page": {
            "title": "Standards Page",
            "description": "A link to a page describing the standards for this workflow.",
            "type": "string"
          },
          "workflow_version": {
            "title": "Workflow Version",
            "description": "The version of this workflow.",
            "type": "integer",
            "minimum": 1
          },
          "uniform_pipeline": {
            "title": "Uniform Pipeline",
            "description": "Indicates whether the pipeline is developed by the IGVF consortium.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "analysis_steps": {
            "title": "Analysis Steps",
            "type": "array",
            "description": "The analysis steps which are part of this workflow.",
            "uniqueItems": true,
            "items": {
              "title": "Analysis Step",
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {},
    {
      "basicAuth": []
    }
  ]
}